// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.0
// source: common/pb_msg/ai_animesh.proto

package pb_msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//   - @brief An AnimMesh is an attachment to an #aiMesh stores per-vertex
//     animations for a particular frame.
//
//     You may think of an #aiAnimMesh as a `patch` for the host mesh, which
//     replaces only certain vertex data streams at a particular time.
//     Each mesh stores n attached attached meshes (#aiMesh::mAnimMeshes).
//     The actual relationship between the time line and anim meshes is
//     established by #aiMeshAnim, which references singular mesh attachments
//     by their ID and binds them to a time offset.
type AiAnimMesh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// *Anim Mesh name
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	//   - Replacement for aiMesh::mVertices. If this array is non-nullptr,
	//     it *must* contain mNumVertices entries. The corresponding
	//     array in the host mesh must be non-nullptr as well - animation
	//     meshes may neither add or nor remove vertex components (if
	//     a replacement array is nullptr and the corresponding source
	//     array is not, the source data is taken instead)
	Vertices []*AiVector3D `protobuf:"bytes,2,rep,name=Vertices,proto3" json:"Vertices,omitempty"`
	// * Replacement for aiMesh::mNormals.
	Normals []*AiVector3D `protobuf:"bytes,3,rep,name=Normals,proto3" json:"Normals,omitempty"`
	// * Replacement for aiMesh::mTangents.
	Tangents []*AiVector3D `protobuf:"bytes,4,rep,name=Tangents,proto3" json:"Tangents,omitempty"`
	// * Replacement for aiMesh::mBitangents.
	Bitangents []*AiVector3D             `protobuf:"bytes,5,rep,name=Bitangents,proto3" json:"Bitangents,omitempty"`
	Colors     []*AiAnimMesh_ColorsArray `protobuf:"bytes,6,rep,name=Colors,proto3" json:"Colors,omitempty"`
	// * Replacement for aiMesh::mTextureCoords
	TextureCoords []*AiAnimMesh_TextureCoordsArray `protobuf:"bytes,7,rep,name=TextureCoords,proto3" json:"TextureCoords,omitempty"`
	// *
	// Weight of the AnimMesh.
	Weight float32 `protobuf:"fixed32,9,opt,name=Weight,proto3" json:"Weight,omitempty"`
}

func (x *AiAnimMesh) Reset() {
	*x = AiAnimMesh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_msg_ai_animesh_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiAnimMesh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiAnimMesh) ProtoMessage() {}

func (x *AiAnimMesh) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_msg_ai_animesh_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiAnimMesh.ProtoReflect.Descriptor instead.
func (*AiAnimMesh) Descriptor() ([]byte, []int) {
	return file_common_pb_msg_ai_animesh_proto_rawDescGZIP(), []int{0}
}

func (x *AiAnimMesh) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AiAnimMesh) GetVertices() []*AiVector3D {
	if x != nil {
		return x.Vertices
	}
	return nil
}

func (x *AiAnimMesh) GetNormals() []*AiVector3D {
	if x != nil {
		return x.Normals
	}
	return nil
}

func (x *AiAnimMesh) GetTangents() []*AiVector3D {
	if x != nil {
		return x.Tangents
	}
	return nil
}

func (x *AiAnimMesh) GetBitangents() []*AiVector3D {
	if x != nil {
		return x.Bitangents
	}
	return nil
}

func (x *AiAnimMesh) GetColors() []*AiAnimMesh_ColorsArray {
	if x != nil {
		return x.Colors
	}
	return nil
}

func (x *AiAnimMesh) GetTextureCoords() []*AiAnimMesh_TextureCoordsArray {
	if x != nil {
		return x.TextureCoords
	}
	return nil
}

func (x *AiAnimMesh) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type AiAnimMesh_ColorsArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Colors []*AiColor4D `protobuf:"bytes,1,rep,name=Colors,proto3" json:"Colors,omitempty"`
}

func (x *AiAnimMesh_ColorsArray) Reset() {
	*x = AiAnimMesh_ColorsArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_msg_ai_animesh_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiAnimMesh_ColorsArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiAnimMesh_ColorsArray) ProtoMessage() {}

func (x *AiAnimMesh_ColorsArray) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_msg_ai_animesh_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiAnimMesh_ColorsArray.ProtoReflect.Descriptor instead.
func (*AiAnimMesh_ColorsArray) Descriptor() ([]byte, []int) {
	return file_common_pb_msg_ai_animesh_proto_rawDescGZIP(), []int{0, 0}
}

func (x *AiAnimMesh_ColorsArray) GetColors() []*AiColor4D {
	if x != nil {
		return x.Colors
	}
	return nil
}

type AiAnimMesh_TextureCoordsArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextureCoords []*AiVector3D `protobuf:"bytes,1,rep,name=TextureCoords,proto3" json:"TextureCoords,omitempty"`
}

func (x *AiAnimMesh_TextureCoordsArray) Reset() {
	*x = AiAnimMesh_TextureCoordsArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_msg_ai_animesh_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiAnimMesh_TextureCoordsArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiAnimMesh_TextureCoordsArray) ProtoMessage() {}

func (x *AiAnimMesh_TextureCoordsArray) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_msg_ai_animesh_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiAnimMesh_TextureCoordsArray.ProtoReflect.Descriptor instead.
func (*AiAnimMesh_TextureCoordsArray) Descriptor() ([]byte, []int) {
	return file_common_pb_msg_ai_animesh_proto_rawDescGZIP(), []int{0, 1}
}

func (x *AiAnimMesh_TextureCoordsArray) GetTextureCoords() []*AiVector3D {
	if x != nil {
		return x.TextureCoords
	}
	return nil
}

var File_common_pb_msg_ai_animesh_proto protoreflect.FileDescriptor

var file_common_pb_msg_ai_animesh_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2f,
	0x61, 0x69, 0x5f, 0x61, 0x6e, 0x69, 0x6d, 0x65, 0x73, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x06, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x89, 0x04, 0x0a, 0x0a, 0x41, 0x69, 0x41, 0x6e, 0x69, 0x6d, 0x4d,
	0x65, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x56, 0x65, 0x72, 0x74, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x6d,
	0x73, 0x67, 0x2e, 0x41, 0x69, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x44, 0x52, 0x08, 0x56,
	0x65, 0x72, 0x74, 0x69, 0x63, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x07, 0x4e, 0x6f, 0x72, 0x6d, 0x61,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73,
	0x67, 0x2e, 0x41, 0x69, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x44, 0x52, 0x07, 0x4e, 0x6f,
	0x72, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x08, 0x54, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67,
	0x2e, 0x41, 0x69, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x44, 0x52, 0x08, 0x54, 0x61, 0x6e,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x0a, 0x42, 0x69, 0x74, 0x61, 0x6e, 0x67, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x5f, 0x6d,
	0x73, 0x67, 0x2e, 0x41, 0x69, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x44, 0x52, 0x0a, 0x42,
	0x69, 0x74, 0x61, 0x6e, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x06, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x5f, 0x6d,
	0x73, 0x67, 0x2e, 0x41, 0x69, 0x41, 0x6e, 0x69, 0x6d, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52, 0x06, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x73, 0x12, 0x4b, 0x0a, 0x0d, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73,
	0x67, 0x2e, 0x41, 0x69, 0x41, 0x6e, 0x69, 0x6d, 0x4d, 0x65, 0x73, 0x68, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x52,
	0x0d, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x1a, 0x38, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73,
	0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x29, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x41,
	0x69, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x34, 0x44, 0x52, 0x06, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x73,
	0x1a, 0x4e, 0x0a, 0x12, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64,
	0x73, 0x41, 0x72, 0x72, 0x61, 0x79, 0x12, 0x38, 0x0a, 0x0d, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72,
	0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x69, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33,
	0x44, 0x52, 0x0d, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x73,
	0x42, 0x0f, 0x5a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x5f, 0x6d, 0x73,
	0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_pb_msg_ai_animesh_proto_rawDescOnce sync.Once
	file_common_pb_msg_ai_animesh_proto_rawDescData = file_common_pb_msg_ai_animesh_proto_rawDesc
)

func file_common_pb_msg_ai_animesh_proto_rawDescGZIP() []byte {
	file_common_pb_msg_ai_animesh_proto_rawDescOnce.Do(func() {
		file_common_pb_msg_ai_animesh_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_pb_msg_ai_animesh_proto_rawDescData)
	})
	return file_common_pb_msg_ai_animesh_proto_rawDescData
}

var file_common_pb_msg_ai_animesh_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_common_pb_msg_ai_animesh_proto_goTypes = []interface{}{
	(*AiAnimMesh)(nil),                    // 0: pb_msg.AiAnimMesh
	(*AiAnimMesh_ColorsArray)(nil),        // 1: pb_msg.AiAnimMesh.ColorsArray
	(*AiAnimMesh_TextureCoordsArray)(nil), // 2: pb_msg.AiAnimMesh.TextureCoordsArray
	(*AiVector3D)(nil),                    // 3: pb_msg.AiVector3D
	(*AiColor4D)(nil),                     // 4: pb_msg.AiColor4D
}
var file_common_pb_msg_ai_animesh_proto_depIdxs = []int32{
	3, // 0: pb_msg.AiAnimMesh.Vertices:type_name -> pb_msg.AiVector3D
	3, // 1: pb_msg.AiAnimMesh.Normals:type_name -> pb_msg.AiVector3D
	3, // 2: pb_msg.AiAnimMesh.Tangents:type_name -> pb_msg.AiVector3D
	3, // 3: pb_msg.AiAnimMesh.Bitangents:type_name -> pb_msg.AiVector3D
	1, // 4: pb_msg.AiAnimMesh.Colors:type_name -> pb_msg.AiAnimMesh.ColorsArray
	2, // 5: pb_msg.AiAnimMesh.TextureCoords:type_name -> pb_msg.AiAnimMesh.TextureCoordsArray
	4, // 6: pb_msg.AiAnimMesh.ColorsArray.Colors:type_name -> pb_msg.AiColor4D
	3, // 7: pb_msg.AiAnimMesh.TextureCoordsArray.TextureCoords:type_name -> pb_msg.AiVector3D
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_common_pb_msg_ai_animesh_proto_init() }
func file_common_pb_msg_ai_animesh_proto_init() {
	if File_common_pb_msg_ai_animesh_proto != nil {
		return
	}
	file_common_pb_msg_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_common_pb_msg_ai_animesh_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiAnimMesh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_msg_ai_animesh_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiAnimMesh_ColorsArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_msg_ai_animesh_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiAnimMesh_TextureCoordsArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_pb_msg_ai_animesh_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_pb_msg_ai_animesh_proto_goTypes,
		DependencyIndexes: file_common_pb_msg_ai_animesh_proto_depIdxs,
		MessageInfos:      file_common_pb_msg_ai_animesh_proto_msgTypes,
	}.Build()
	File_common_pb_msg_ai_animesh_proto = out.File
	file_common_pb_msg_ai_animesh_proto_rawDesc = nil
	file_common_pb_msg_ai_animesh_proto_goTypes = nil
	file_common_pb_msg_ai_animesh_proto_depIdxs = nil
}
