// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.0
// source: common/pb_msg/ai_material.proto

package pb_msg

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AiMaterialPropertyType int32

const (
	AiMaterialPropertyType_AiPropertyTypeBytes         AiMaterialPropertyType = 0
	AiMaterialPropertyType_AiPropertyTypeString        AiMaterialPropertyType = 1
	AiMaterialPropertyType_AiPropertyTypeFloat32       AiMaterialPropertyType = 2
	AiMaterialPropertyType_AiPropertyTypeFloat64       AiMaterialPropertyType = 3
	AiMaterialPropertyType_AiPropertyTypeInt           AiMaterialPropertyType = 4
	AiMaterialPropertyType_AiPropertyTypeVector3D      AiMaterialPropertyType = 5
	AiMaterialPropertyType_AiPropertyTypeAiUVTransform AiMaterialPropertyType = 6
	AiMaterialPropertyType_AiPropertyTypeVector4D      AiMaterialPropertyType = 7
	AiMaterialPropertyType_AiPropertyTypeColor4D       AiMaterialPropertyType = 8
	AiMaterialPropertyType_AiPropertyTypeColor3D       AiMaterialPropertyType = 9
)

// Enum value maps for AiMaterialPropertyType.
var (
	AiMaterialPropertyType_name = map[int32]string{
		0: "AiPropertyTypeBytes",
		1: "AiPropertyTypeString",
		2: "AiPropertyTypeFloat32",
		3: "AiPropertyTypeFloat64",
		4: "AiPropertyTypeInt",
		5: "AiPropertyTypeVector3D",
		6: "AiPropertyTypeAiUVTransform",
		7: "AiPropertyTypeVector4D",
		8: "AiPropertyTypeColor4D",
		9: "AiPropertyTypeColor3D",
	}
	AiMaterialPropertyType_value = map[string]int32{
		"AiPropertyTypeBytes":         0,
		"AiPropertyTypeString":        1,
		"AiPropertyTypeFloat32":       2,
		"AiPropertyTypeFloat64":       3,
		"AiPropertyTypeInt":           4,
		"AiPropertyTypeVector3D":      5,
		"AiPropertyTypeAiUVTransform": 6,
		"AiPropertyTypeVector4D":      7,
		"AiPropertyTypeColor4D":       8,
		"AiPropertyTypeColor3D":       9,
	}
)

func (x AiMaterialPropertyType) Enum() *AiMaterialPropertyType {
	p := new(AiMaterialPropertyType)
	*p = x
	return p
}

func (x AiMaterialPropertyType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AiMaterialPropertyType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_pb_msg_ai_material_proto_enumTypes[0].Descriptor()
}

func (AiMaterialPropertyType) Type() protoreflect.EnumType {
	return &file_common_pb_msg_ai_material_proto_enumTypes[0]
}

func (x AiMaterialPropertyType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AiMaterialPropertyType.Descriptor instead.
func (AiMaterialPropertyType) EnumDescriptor() ([]byte, []int) {
	return file_common_pb_msg_ai_material_proto_rawDescGZIP(), []int{0}
}

type AiMaterialPropertyFloat64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []float64 `protobuf:"fixed64,1,rep,packed,name=Data,proto3" json:"Data,omitempty"`
}

func (x *AiMaterialPropertyFloat64) Reset() {
	*x = AiMaterialPropertyFloat64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_msg_ai_material_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiMaterialPropertyFloat64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiMaterialPropertyFloat64) ProtoMessage() {}

func (x *AiMaterialPropertyFloat64) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_msg_ai_material_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiMaterialPropertyFloat64.ProtoReflect.Descriptor instead.
func (*AiMaterialPropertyFloat64) Descriptor() ([]byte, []int) {
	return file_common_pb_msg_ai_material_proto_rawDescGZIP(), []int{0}
}

func (x *AiMaterialPropertyFloat64) GetData() []float64 {
	if x != nil {
		return x.Data
	}
	return nil
}

type AiMaterialPropertyInt64 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []int64 `protobuf:"varint,1,rep,packed,name=Data,proto3" json:"Data,omitempty"`
}

func (x *AiMaterialPropertyInt64) Reset() {
	*x = AiMaterialPropertyInt64{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_msg_ai_material_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiMaterialPropertyInt64) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiMaterialPropertyInt64) ProtoMessage() {}

func (x *AiMaterialPropertyInt64) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_msg_ai_material_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiMaterialPropertyInt64.ProtoReflect.Descriptor instead.
func (*AiMaterialPropertyInt64) Descriptor() ([]byte, []int) {
	return file_common_pb_msg_ai_material_proto_rawDescGZIP(), []int{1}
}

func (x *AiMaterialPropertyInt64) GetData() []int64 {
	if x != nil {
		return x.Data
	}
	return nil
}

type AiMaterialPropertyString struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []string `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
}

func (x *AiMaterialPropertyString) Reset() {
	*x = AiMaterialPropertyString{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_msg_ai_material_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiMaterialPropertyString) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiMaterialPropertyString) ProtoMessage() {}

func (x *AiMaterialPropertyString) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_msg_ai_material_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiMaterialPropertyString.ProtoReflect.Descriptor instead.
func (*AiMaterialPropertyString) Descriptor() ([]byte, []int) {
	return file_common_pb_msg_ai_material_proto_rawDescGZIP(), []int{2}
}

func (x *AiMaterialPropertyString) GetData() []string {
	if x != nil {
		return x.Data
	}
	return nil
}

type AiUVTransform struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Translation *AiVector2D `protobuf:"bytes,1,opt,name=Translation,proto3" json:"Translation,omitempty"`
	Scaling     *AiVector2D `protobuf:"bytes,2,opt,name=Scaling,proto3" json:"Scaling,omitempty"`
	Rotation    float32     `protobuf:"fixed32,3,opt,name=Rotation,proto3" json:"Rotation,omitempty"`
}

func (x *AiUVTransform) Reset() {
	*x = AiUVTransform{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_msg_ai_material_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiUVTransform) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiUVTransform) ProtoMessage() {}

func (x *AiUVTransform) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_msg_ai_material_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiUVTransform.ProtoReflect.Descriptor instead.
func (*AiUVTransform) Descriptor() ([]byte, []int) {
	return file_common_pb_msg_ai_material_proto_rawDescGZIP(), []int{3}
}

func (x *AiUVTransform) GetTranslation() *AiVector2D {
	if x != nil {
		return x.Translation
	}
	return nil
}

func (x *AiUVTransform) GetScaling() *AiVector2D {
	if x != nil {
		return x.Scaling
	}
	return nil
}

func (x *AiUVTransform) GetRotation() float32 {
	if x != nil {
		return x.Rotation
	}
	return 0
}

type AiMaterial struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// * List of all material properties loaded.
	Properties []*AiMaterialProperty `protobuf:"bytes,1,rep,name=Properties,proto3" json:"Properties,omitempty"`
}

func (x *AiMaterial) Reset() {
	*x = AiMaterial{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_msg_ai_material_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiMaterial) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiMaterial) ProtoMessage() {}

func (x *AiMaterial) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_msg_ai_material_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiMaterial.ProtoReflect.Descriptor instead.
func (*AiMaterial) Descriptor() ([]byte, []int) {
	return file_common_pb_msg_ai_material_proto_rawDescGZIP(), []int{4}
}

func (x *AiMaterial) GetProperties() []*AiMaterialProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

// * @brief Data structure for a single material property
//
//	As an user, you'll probably never need to deal with this data structure.
//	Just use the provided aiGetMaterialXXX() or aiMaterial::Get() family
//	of functions to query material properties easily. Processing them
//	manually is faster, but it is not the recommended way. It isn't worth
//	the effort. <br>
//	Material property names follow a simple scheme:
//	@code
//	  $<name>
//	  ?<name>
//	     A public property, there must be corresponding AI_MATKEY_XXX define
//	     2nd: Public, but ignored by the #aiProcess_RemoveRedundantMaterials
//	     post-processing step.
//	  ~<name>
//	     A temporary property for internal use.
//	@endcode
//	@see aiMaterial
type AiMaterialProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//   - Specifies the name of the property (key)
	//     Keys are generally case insensitive.
	Key string `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	// * Textures: Specifies their exact usage semantic.
	// For non-texture properties, this member is always 0
	// (or, better-said, #aiTextureType_NONE).
	Semantic uint32 `protobuf:"varint,2,opt,name=Semantic,proto3" json:"Semantic,omitempty"`
	//   - Textures: Specifies the index of the texture.
	//     For non-texture properties, this member is always 0.
	Index uint32 `protobuf:"varint,3,opt,name=Index,proto3" json:"Index,omitempty"`
	// * Type information for the property.
	//
	// Defines the data layout inside the data buffer. This is used
	// by the library internally to perform debug checks and to
	// utilize proper type conversions.
	// (It's probably a hacky solution, but it works.)
	Type AiMaterialPropertyType `protobuf:"varint,4,opt,name=Type,proto3,enum=pb_msg.AiMaterialPropertyType" json:"Type,omitempty"`
	// * Binary buffer to hold the property's value.
	// The size of the buffer is always mDataLength.
	Data []byte `protobuf:"bytes,5,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (x *AiMaterialProperty) Reset() {
	*x = AiMaterialProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_pb_msg_ai_material_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiMaterialProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiMaterialProperty) ProtoMessage() {}

func (x *AiMaterialProperty) ProtoReflect() protoreflect.Message {
	mi := &file_common_pb_msg_ai_material_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiMaterialProperty.ProtoReflect.Descriptor instead.
func (*AiMaterialProperty) Descriptor() ([]byte, []int) {
	return file_common_pb_msg_ai_material_proto_rawDescGZIP(), []int{5}
}

func (x *AiMaterialProperty) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AiMaterialProperty) GetSemantic() uint32 {
	if x != nil {
		return x.Semantic
	}
	return 0
}

func (x *AiMaterialProperty) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *AiMaterialProperty) GetType() AiMaterialPropertyType {
	if x != nil {
		return x.Type
	}
	return AiMaterialPropertyType_AiPropertyTypeBytes
}

func (x *AiMaterialProperty) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_common_pb_msg_ai_material_proto protoreflect.FileDescriptor

var file_common_pb_msg_ai_material_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2f,
	0x61, 0x69, 0x5f, 0x6d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x06, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x1a, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2f, 0x0a, 0x19, 0x41, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x46, 0x6c, 0x6f, 0x61, 0x74,
	0x36, 0x34, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x01,
	0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2d, 0x0a, 0x17, 0x41, 0x69, 0x4d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2e, 0x0a, 0x18, 0x41, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x8f, 0x01, 0x0a, 0x0d, 0x41, 0x69, 0x55, 0x56, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x34, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70,
	0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x69, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x44,
	0x52, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a,
	0x07, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x2e, 0x41, 0x69, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x32, 0x44, 0x52, 0x07, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x52,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x52,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x0a, 0x41, 0x69, 0x4d, 0x61, 0x74,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x3a, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x62, 0x5f, 0x6d,
	0x73, 0x67, 0x2e, 0x41, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x22, 0xa0, 0x01, 0x0a, 0x12, 0x41, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65,
	0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x53, 0x65,
	0x6d, 0x61, 0x6e, 0x74, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x32, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x62, 0x5f,
	0x6d, 0x73, 0x67, 0x2e, 0x41, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x61, 0x2a, 0xa7, 0x02, 0x0a, 0x16, 0x41, 0x69, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x13, 0x41, 0x69, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x69, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x69, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x33, 0x32, 0x10, 0x02, 0x12, 0x19, 0x0a,
	0x15, 0x41, 0x69, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x36, 0x34, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x69, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x74, 0x10, 0x04, 0x12,
	0x1a, 0x0a, 0x16, 0x41, 0x69, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x44, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x41,
	0x69, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x41, 0x69, 0x55,
	0x56, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16,
	0x41, 0x69, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x34, 0x44, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x69, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x34,
	0x44, 0x10, 0x08, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x69, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x33, 0x44, 0x10, 0x09, 0x42, 0x0f,
	0x5a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x5f, 0x6d, 0x73, 0x67, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_pb_msg_ai_material_proto_rawDescOnce sync.Once
	file_common_pb_msg_ai_material_proto_rawDescData = file_common_pb_msg_ai_material_proto_rawDesc
)

func file_common_pb_msg_ai_material_proto_rawDescGZIP() []byte {
	file_common_pb_msg_ai_material_proto_rawDescOnce.Do(func() {
		file_common_pb_msg_ai_material_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_pb_msg_ai_material_proto_rawDescData)
	})
	return file_common_pb_msg_ai_material_proto_rawDescData
}

var file_common_pb_msg_ai_material_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_pb_msg_ai_material_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_common_pb_msg_ai_material_proto_goTypes = []interface{}{
	(AiMaterialPropertyType)(0),       // 0: pb_msg.AiMaterialPropertyType
	(*AiMaterialPropertyFloat64)(nil), // 1: pb_msg.AiMaterialPropertyFloat64
	(*AiMaterialPropertyInt64)(nil),   // 2: pb_msg.AiMaterialPropertyInt64
	(*AiMaterialPropertyString)(nil),  // 3: pb_msg.AiMaterialPropertyString
	(*AiUVTransform)(nil),             // 4: pb_msg.AiUVTransform
	(*AiMaterial)(nil),                // 5: pb_msg.AiMaterial
	(*AiMaterialProperty)(nil),        // 6: pb_msg.AiMaterialProperty
	(*AiVector2D)(nil),                // 7: pb_msg.AiVector2D
}
var file_common_pb_msg_ai_material_proto_depIdxs = []int32{
	7, // 0: pb_msg.AiUVTransform.Translation:type_name -> pb_msg.AiVector2D
	7, // 1: pb_msg.AiUVTransform.Scaling:type_name -> pb_msg.AiVector2D
	6, // 2: pb_msg.AiMaterial.Properties:type_name -> pb_msg.AiMaterialProperty
	0, // 3: pb_msg.AiMaterialProperty.Type:type_name -> pb_msg.AiMaterialPropertyType
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_common_pb_msg_ai_material_proto_init() }
func file_common_pb_msg_ai_material_proto_init() {
	if File_common_pb_msg_ai_material_proto != nil {
		return
	}
	file_common_pb_msg_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_common_pb_msg_ai_material_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiMaterialPropertyFloat64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_msg_ai_material_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiMaterialPropertyInt64); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_msg_ai_material_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiMaterialPropertyString); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_msg_ai_material_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiUVTransform); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_msg_ai_material_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiMaterial); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_pb_msg_ai_material_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiMaterialProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_pb_msg_ai_material_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_pb_msg_ai_material_proto_goTypes,
		DependencyIndexes: file_common_pb_msg_ai_material_proto_depIdxs,
		EnumInfos:         file_common_pb_msg_ai_material_proto_enumTypes,
		MessageInfos:      file_common_pb_msg_ai_material_proto_msgTypes,
	}.Build()
	File_common_pb_msg_ai_material_proto = out.File
	file_common_pb_msg_ai_material_proto_rawDesc = nil
	file_common_pb_msg_ai_material_proto_goTypes = nil
	file_common_pb_msg_ai_material_proto_depIdxs = nil
}
