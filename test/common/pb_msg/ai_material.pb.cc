// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/pb_msg/ai_material.proto

#include "common/pb_msg/ai_material.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace pb_msg {
        template <typename>
PROTOBUF_CONSTEXPR AiMaterialPropertyFloat32::AiMaterialPropertyFloat32(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.data_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AiMaterialPropertyFloat32DefaultTypeInternal {
  PROTOBUF_CONSTEXPR AiMaterialPropertyFloat32DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AiMaterialPropertyFloat32DefaultTypeInternal() {}
  union {
    AiMaterialPropertyFloat32 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AiMaterialPropertyFloat32DefaultTypeInternal _AiMaterialPropertyFloat32_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AiMaterialPropertyInt64::AiMaterialPropertyInt64(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.data_)*/ {},
      /* _impl_._data_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AiMaterialPropertyInt64DefaultTypeInternal {
  PROTOBUF_CONSTEXPR AiMaterialPropertyInt64DefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AiMaterialPropertyInt64DefaultTypeInternal() {}
  union {
    AiMaterialPropertyInt64 _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AiMaterialPropertyInt64DefaultTypeInternal _AiMaterialPropertyInt64_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AiMaterialPropertyString::AiMaterialPropertyString(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.data_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AiMaterialPropertyStringDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AiMaterialPropertyStringDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AiMaterialPropertyStringDefaultTypeInternal() {}
  union {
    AiMaterialPropertyString _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AiMaterialPropertyStringDefaultTypeInternal _AiMaterialPropertyString_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AiUVTransform::AiUVTransform(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.translation_)*/ nullptr,
      /*decltype(_impl_.scaling_)*/ nullptr,
      /*decltype(_impl_.rotation_)*/ 0,
    } {}
struct AiUVTransformDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AiUVTransformDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AiUVTransformDefaultTypeInternal() {}
  union {
    AiUVTransform _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AiUVTransformDefaultTypeInternal _AiUVTransform_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AiMaterial::AiMaterial(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.properties_)*/ {},
      /*decltype(_impl_.numallocated_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AiMaterialDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AiMaterialDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AiMaterialDefaultTypeInternal() {}
  union {
    AiMaterial _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AiMaterialDefaultTypeInternal _AiMaterial_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AiMaterialProperty::AiMaterialProperty(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.key_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.data_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.semantic_)*/ 0u,
      /*decltype(_impl_.index_)*/ 0u,
      /*decltype(_impl_.type_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AiMaterialPropertyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AiMaterialPropertyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AiMaterialPropertyDefaultTypeInternal() {}
  union {
    AiMaterialProperty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AiMaterialPropertyDefaultTypeInternal _AiMaterialProperty_default_instance_;
}  // namespace pb_msg
static ::_pb::Metadata file_level_metadata_common_2fpb_5fmsg_2fai_5fmaterial_2eproto[6];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_common_2fpb_5fmsg_2fai_5fmaterial_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2fpb_5fmsg_2fai_5fmaterial_2eproto = nullptr;
const ::uint32_t TableStruct_common_2fpb_5fmsg_2fai_5fmaterial_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterialPropertyFloat32, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterialPropertyFloat32, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterialPropertyInt64, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterialPropertyInt64, _impl_.data_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterialPropertyString, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterialPropertyString, _impl_.data_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiUVTransform, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiUVTransform, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiUVTransform, _impl_.translation_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiUVTransform, _impl_.scaling_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiUVTransform, _impl_.rotation_),
    0,
    1,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterial, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterial, _impl_.properties_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterial, _impl_.numallocated_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterialProperty, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterialProperty, _impl_.key_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterialProperty, _impl_.semantic_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterialProperty, _impl_.index_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterialProperty, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiMaterialProperty, _impl_.data_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::pb_msg::AiMaterialPropertyFloat32)},
        {9, -1, -1, sizeof(::pb_msg::AiMaterialPropertyInt64)},
        {18, -1, -1, sizeof(::pb_msg::AiMaterialPropertyString)},
        {27, 38, -1, sizeof(::pb_msg::AiUVTransform)},
        {41, -1, -1, sizeof(::pb_msg::AiMaterial)},
        {51, -1, -1, sizeof(::pb_msg::AiMaterialProperty)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::pb_msg::_AiMaterialPropertyFloat32_default_instance_._instance,
    &::pb_msg::_AiMaterialPropertyInt64_default_instance_._instance,
    &::pb_msg::_AiMaterialPropertyString_default_instance_._instance,
    &::pb_msg::_AiUVTransform_default_instance_._instance,
    &::pb_msg::_AiMaterial_default_instance_._instance,
    &::pb_msg::_AiMaterialProperty_default_instance_._instance,
};
const char descriptor_table_protodef_common_2fpb_5fmsg_2fai_5fmaterial_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\037common/pb_msg/ai_material.proto\022\006pb_ms"
    "g\032\032common/pb_msg/common.proto\")\n\031AiMater"
    "ialPropertyFloat32\022\014\n\004Data\030\001 \003(\002\"\'\n\027AiMa"
    "terialPropertyInt64\022\014\n\004Data\030\001 \003(\003\"(\n\030AiM"
    "aterialPropertyString\022\014\n\004Data\030\001 \003(\t\"o\n\rA"
    "iUVTransform\022\'\n\013Translation\030\001 \001(\0132\022.pb_m"
    "sg.AiVector2D\022#\n\007Scaling\030\002 \001(\0132\022.pb_msg."
    "AiVector2D\022\020\n\010Rotation\030\003 \001(\002\"R\n\nAiMateri"
    "al\022.\n\nProperties\030\001 \003(\0132\032.pb_msg.AiMateri"
    "alProperty\022\024\n\014NumAllocated\030\002 \001(\005\"~\n\022AiMa"
    "terialProperty\022\013\n\003Key\030\001 \001(\t\022\020\n\010Semantic\030"
    "\002 \001(\r\022\r\n\005Index\030\003 \001(\r\022,\n\004Type\030\004 \001(\0162\036.pb_"
    "msg.AiMaterialPropertyType\022\014\n\004Data\030\005 \001(\014"
    "*\363\001\n\026AiMaterialPropertyType\022\030\n\024AiPropert"
    "yTypeString\020\000\022\031\n\025AiPropertyTypeFloat32\020\001"
    "\022\025\n\021AiPropertyTypeInt\020\002\022\032\n\026AiPropertyTyp"
    "eVector3D\020\003\022\037\n\033AiPropertyTypeAiUVTransfo"
    "rm\020\004\022\032\n\026AiPropertyTypeVector4D\020\005\022\031\n\025AiPr"
    "opertyTypeColor4D\020\006\022\031\n\025AiPropertyTypeCol"
    "or3D\020\007B\017Z\rcommon/pb_msgb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_deps[1] =
    {
        &::descriptor_table_common_2fpb_5fmsg_2fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto = {
    false,
    false,
    791,
    descriptor_table_protodef_common_2fpb_5fmsg_2fai_5fmaterial_2eproto,
    "common/pb_msg/ai_material.proto",
    &descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_once,
    descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_deps,
    1,
    6,
    schemas,
    file_default_instances,
    TableStruct_common_2fpb_5fmsg_2fai_5fmaterial_2eproto::offsets,
    file_level_metadata_common_2fpb_5fmsg_2fai_5fmaterial_2eproto,
    file_level_enum_descriptors_common_2fpb_5fmsg_2fai_5fmaterial_2eproto,
    file_level_service_descriptors_common_2fpb_5fmsg_2fai_5fmaterial_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_getter() {
  return &descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_common_2fpb_5fmsg_2fai_5fmaterial_2eproto(&descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto);
namespace pb_msg {
const ::google::protobuf::EnumDescriptor* AiMaterialPropertyType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto);
  return file_level_enum_descriptors_common_2fpb_5fmsg_2fai_5fmaterial_2eproto[0];
}
bool AiMaterialPropertyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}
// ===================================================================

class AiMaterialPropertyFloat32::_Internal {
 public:
};

AiMaterialPropertyFloat32::AiMaterialPropertyFloat32(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb_msg.AiMaterialPropertyFloat32)
}
AiMaterialPropertyFloat32::AiMaterialPropertyFloat32(const AiMaterialPropertyFloat32& from) : ::google::protobuf::Message() {
  AiMaterialPropertyFloat32* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){from._impl_.data_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:pb_msg.AiMaterialPropertyFloat32)
}
inline void AiMaterialPropertyFloat32::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
AiMaterialPropertyFloat32::~AiMaterialPropertyFloat32() {
  // @@protoc_insertion_point(destructor:pb_msg.AiMaterialPropertyFloat32)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AiMaterialPropertyFloat32::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.~RepeatedField();
}
void AiMaterialPropertyFloat32::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AiMaterialPropertyFloat32::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_msg.AiMaterialPropertyFloat32)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_data()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AiMaterialPropertyFloat32::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AiMaterialPropertyFloat32::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AiMaterialPropertyFloat32_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated float Data = 1;
    {::_pbi::TcParser::FastF32P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AiMaterialPropertyFloat32, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated float Data = 1;
    {PROTOBUF_FIELD_OFFSET(AiMaterialPropertyFloat32, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AiMaterialPropertyFloat32::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_msg.AiMaterialPropertyFloat32)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated float Data = 1;
  if (this->_internal_data_size() > 0) {
    target = stream->WriteFixedPacked(1, _internal_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb_msg.AiMaterialPropertyFloat32)
  return target;
}

::size_t AiMaterialPropertyFloat32::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_msg.AiMaterialPropertyFloat32)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float Data = 1;
  {
    std::size_t data_size = std::size_t{4} *
        ::_pbi::FromIntSize(this->_internal_data_size())
    ;
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AiMaterialPropertyFloat32::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AiMaterialPropertyFloat32::MergeImpl
};
const ::google::protobuf::Message::ClassData*AiMaterialPropertyFloat32::GetClassData() const { return &_class_data_; }


void AiMaterialPropertyFloat32::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AiMaterialPropertyFloat32*>(&to_msg);
  auto& from = static_cast<const AiMaterialPropertyFloat32&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb_msg.AiMaterialPropertyFloat32)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AiMaterialPropertyFloat32::CopyFrom(const AiMaterialPropertyFloat32& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_msg.AiMaterialPropertyFloat32)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AiMaterialPropertyFloat32::IsInitialized() const {
  return true;
}

void AiMaterialPropertyFloat32::InternalSwap(AiMaterialPropertyFloat32* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata AiMaterialPropertyFloat32::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_getter, &descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_once,
      file_level_metadata_common_2fpb_5fmsg_2fai_5fmaterial_2eproto[0]);
}
// ===================================================================

class AiMaterialPropertyInt64::_Internal {
 public:
};

AiMaterialPropertyInt64::AiMaterialPropertyInt64(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb_msg.AiMaterialPropertyInt64)
}
AiMaterialPropertyInt64::AiMaterialPropertyInt64(const AiMaterialPropertyInt64& from) : ::google::protobuf::Message() {
  AiMaterialPropertyInt64* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){from._impl_.data_},
      /* _impl_._data_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:pb_msg.AiMaterialPropertyInt64)
}
inline void AiMaterialPropertyInt64::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){arena},
      /* _impl_._data_cached_byte_size_ = */ {0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
AiMaterialPropertyInt64::~AiMaterialPropertyInt64() {
  // @@protoc_insertion_point(destructor:pb_msg.AiMaterialPropertyInt64)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AiMaterialPropertyInt64::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_.~RepeatedField();
}
void AiMaterialPropertyInt64::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AiMaterialPropertyInt64::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_msg.AiMaterialPropertyInt64)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_data()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AiMaterialPropertyInt64::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> AiMaterialPropertyInt64::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AiMaterialPropertyInt64_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated int64 Data = 1;
    {::_pbi::TcParser::FastV64P1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AiMaterialPropertyInt64, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated int64 Data = 1;
    {PROTOBUF_FIELD_OFFSET(AiMaterialPropertyInt64, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AiMaterialPropertyInt64::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_msg.AiMaterialPropertyInt64)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated int64 Data = 1;
  {
    int byte_size = _impl_._data_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(1, _internal_data(),
                                                 byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb_msg.AiMaterialPropertyInt64)
  return target;
}

::size_t AiMaterialPropertyInt64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_msg.AiMaterialPropertyInt64)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 Data = 1;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int64Size(
        this->_internal_data())
    ;
    _impl_._data_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AiMaterialPropertyInt64::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AiMaterialPropertyInt64::MergeImpl
};
const ::google::protobuf::Message::ClassData*AiMaterialPropertyInt64::GetClassData() const { return &_class_data_; }


void AiMaterialPropertyInt64::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AiMaterialPropertyInt64*>(&to_msg);
  auto& from = static_cast<const AiMaterialPropertyInt64&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb_msg.AiMaterialPropertyInt64)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AiMaterialPropertyInt64::CopyFrom(const AiMaterialPropertyInt64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_msg.AiMaterialPropertyInt64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AiMaterialPropertyInt64::IsInitialized() const {
  return true;
}

void AiMaterialPropertyInt64::InternalSwap(AiMaterialPropertyInt64* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata AiMaterialPropertyInt64::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_getter, &descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_once,
      file_level_metadata_common_2fpb_5fmsg_2fai_5fmaterial_2eproto[1]);
}
// ===================================================================

class AiMaterialPropertyString::_Internal {
 public:
};

AiMaterialPropertyString::AiMaterialPropertyString(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb_msg.AiMaterialPropertyString)
}
AiMaterialPropertyString::AiMaterialPropertyString(const AiMaterialPropertyString& from) : ::google::protobuf::Message() {
  AiMaterialPropertyString* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){from._impl_.data_},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:pb_msg.AiMaterialPropertyString)
}
inline void AiMaterialPropertyString::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.data_){arena},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
AiMaterialPropertyString::~AiMaterialPropertyString() {
  // @@protoc_insertion_point(destructor:pb_msg.AiMaterialPropertyString)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AiMaterialPropertyString::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _internal_mutable_data()->~RepeatedPtrField();
}
void AiMaterialPropertyString::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AiMaterialPropertyString::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_msg.AiMaterialPropertyString)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_data()->Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AiMaterialPropertyString::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 44, 2> AiMaterialPropertyString::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AiMaterialPropertyString_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string Data = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AiMaterialPropertyString, _impl_.data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string Data = 1;
    {PROTOBUF_FIELD_OFFSET(AiMaterialPropertyString, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\37\4\0\0\0\0\0\0"
    "pb_msg.AiMaterialPropertyString"
    "Data"
  }},
};

::uint8_t* AiMaterialPropertyString::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_msg.AiMaterialPropertyString)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string Data = 1;
  for (int i = 0, n = this->_internal_data_size(); i < n; ++i) {
    const auto& s = this->_internal_data().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pb_msg.AiMaterialPropertyString.Data");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb_msg.AiMaterialPropertyString)
  return target;
}

::size_t AiMaterialPropertyString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_msg.AiMaterialPropertyString)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string Data = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_data().size());
  for (int i = 0, n = _internal_data().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_data().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AiMaterialPropertyString::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AiMaterialPropertyString::MergeImpl
};
const ::google::protobuf::Message::ClassData*AiMaterialPropertyString::GetClassData() const { return &_class_data_; }


void AiMaterialPropertyString::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AiMaterialPropertyString*>(&to_msg);
  auto& from = static_cast<const AiMaterialPropertyString&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb_msg.AiMaterialPropertyString)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_data()->MergeFrom(from._internal_data());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AiMaterialPropertyString::CopyFrom(const AiMaterialPropertyString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_msg.AiMaterialPropertyString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AiMaterialPropertyString::IsInitialized() const {
  return true;
}

void AiMaterialPropertyString::InternalSwap(AiMaterialPropertyString* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.data_.InternalSwap(&other->_impl_.data_);
}

::google::protobuf::Metadata AiMaterialPropertyString::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_getter, &descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_once,
      file_level_metadata_common_2fpb_5fmsg_2fai_5fmaterial_2eproto[2]);
}
// ===================================================================

class AiUVTransform::_Internal {
 public:
  using HasBits = decltype(std::declval<AiUVTransform>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AiUVTransform, _impl_._has_bits_);
  static const ::pb_msg::AiVector2D& translation(const AiUVTransform* msg);
  static void set_has_translation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::pb_msg::AiVector2D& scaling(const AiUVTransform* msg);
  static void set_has_scaling(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::pb_msg::AiVector2D& AiUVTransform::_Internal::translation(const AiUVTransform* msg) {
  return *msg->_impl_.translation_;
}
const ::pb_msg::AiVector2D& AiUVTransform::_Internal::scaling(const AiUVTransform* msg) {
  return *msg->_impl_.scaling_;
}
void AiUVTransform::clear_translation() {
  if (_impl_.translation_ != nullptr) _impl_.translation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void AiUVTransform::clear_scaling() {
  if (_impl_.scaling_ != nullptr) _impl_.scaling_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
AiUVTransform::AiUVTransform(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb_msg.AiUVTransform)
}
AiUVTransform::AiUVTransform(const AiUVTransform& from) : ::google::protobuf::Message() {
  AiUVTransform* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.translation_){nullptr},
      decltype(_impl_.scaling_){nullptr},
      decltype(_impl_.rotation_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.translation_ = new ::pb_msg::AiVector2D(*from._impl_.translation_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.scaling_ = new ::pb_msg::AiVector2D(*from._impl_.scaling_);
  }
  _this->_impl_.rotation_ = from._impl_.rotation_;

  // @@protoc_insertion_point(copy_constructor:pb_msg.AiUVTransform)
}
inline void AiUVTransform::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.translation_){nullptr},
      decltype(_impl_.scaling_){nullptr},
      decltype(_impl_.rotation_){0},
  };
}
AiUVTransform::~AiUVTransform() {
  // @@protoc_insertion_point(destructor:pb_msg.AiUVTransform)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AiUVTransform::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.translation_;
  if (this != internal_default_instance()) delete _impl_.scaling_;
}
void AiUVTransform::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AiUVTransform::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_msg.AiUVTransform)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.translation_ != nullptr);
      _impl_.translation_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.scaling_ != nullptr);
      _impl_.scaling_->Clear();
    }
  }
  _impl_.rotation_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AiUVTransform::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> AiUVTransform::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AiUVTransform, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AiUVTransform_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .pb_msg.AiVector2D Translation = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AiUVTransform, _impl_.translation_)}},
    // .pb_msg.AiVector2D Scaling = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(AiUVTransform, _impl_.scaling_)}},
    // float Rotation = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(AiUVTransform, _impl_.rotation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .pb_msg.AiVector2D Translation = 1;
    {PROTOBUF_FIELD_OFFSET(AiUVTransform, _impl_.translation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .pb_msg.AiVector2D Scaling = 2;
    {PROTOBUF_FIELD_OFFSET(AiUVTransform, _impl_.scaling_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // float Rotation = 3;
    {PROTOBUF_FIELD_OFFSET(AiUVTransform, _impl_.rotation_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }}, {{
    {::_pbi::TcParser::GetTable<::pb_msg::AiVector2D>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiVector2D>()},
  }}, {{
  }},
};

::uint8_t* AiUVTransform::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_msg.AiUVTransform)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .pb_msg.AiVector2D Translation = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::translation(this),
        _Internal::translation(this).GetCachedSize(), target, stream);
  }

  // .pb_msg.AiVector2D Scaling = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::scaling(this),
        _Internal::scaling(this).GetCachedSize(), target, stream);
  }

  // float Rotation = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rotation = this->_internal_rotation();
  ::uint32_t raw_rotation;
  memcpy(&raw_rotation, &tmp_rotation, sizeof(tmp_rotation));
  if (raw_rotation != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        3, this->_internal_rotation(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb_msg.AiUVTransform)
  return target;
}

::size_t AiUVTransform::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_msg.AiUVTransform)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .pb_msg.AiVector2D Translation = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.translation_);
    }

    // .pb_msg.AiVector2D Scaling = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.scaling_);
    }

  }
  // float Rotation = 3;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rotation = this->_internal_rotation();
  ::uint32_t raw_rotation;
  memcpy(&raw_rotation, &tmp_rotation, sizeof(tmp_rotation));
  if (raw_rotation != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AiUVTransform::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AiUVTransform::MergeImpl
};
const ::google::protobuf::Message::ClassData*AiUVTransform::GetClassData() const { return &_class_data_; }


void AiUVTransform::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AiUVTransform*>(&to_msg);
  auto& from = static_cast<const AiUVTransform&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb_msg.AiUVTransform)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_translation()->::pb_msg::AiVector2D::MergeFrom(
          from._internal_translation());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_scaling()->::pb_msg::AiVector2D::MergeFrom(
          from._internal_scaling());
    }
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_rotation = from._internal_rotation();
  ::uint32_t raw_rotation;
  memcpy(&raw_rotation, &tmp_rotation, sizeof(tmp_rotation));
  if (raw_rotation != 0) {
    _this->_internal_set_rotation(from._internal_rotation());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AiUVTransform::CopyFrom(const AiUVTransform& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_msg.AiUVTransform)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AiUVTransform::IsInitialized() const {
  return true;
}

void AiUVTransform::InternalSwap(AiUVTransform* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AiUVTransform, _impl_.rotation_)
      + sizeof(AiUVTransform::_impl_.rotation_)
      - PROTOBUF_FIELD_OFFSET(AiUVTransform, _impl_.translation_)>(
          reinterpret_cast<char*>(&_impl_.translation_),
          reinterpret_cast<char*>(&other->_impl_.translation_));
}

::google::protobuf::Metadata AiUVTransform::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_getter, &descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_once,
      file_level_metadata_common_2fpb_5fmsg_2fai_5fmaterial_2eproto[3]);
}
// ===================================================================

class AiMaterial::_Internal {
 public:
};

AiMaterial::AiMaterial(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb_msg.AiMaterial)
}
AiMaterial::AiMaterial(const AiMaterial& from) : ::google::protobuf::Message() {
  AiMaterial* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.properties_){from._impl_.properties_},
      decltype(_impl_.numallocated_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _this->_impl_.numallocated_ = from._impl_.numallocated_;

  // @@protoc_insertion_point(copy_constructor:pb_msg.AiMaterial)
}
inline void AiMaterial::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.properties_){arena},
      decltype(_impl_.numallocated_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
AiMaterial::~AiMaterial() {
  // @@protoc_insertion_point(destructor:pb_msg.AiMaterial)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AiMaterial::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.properties_.~RepeatedPtrField();
}
void AiMaterial::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AiMaterial::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_msg.AiMaterial)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_properties()->Clear();
  _impl_.numallocated_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AiMaterial::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> AiMaterial::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AiMaterial_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 NumAllocated = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AiMaterial, _impl_.numallocated_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AiMaterial, _impl_.numallocated_)}},
    // repeated .pb_msg.AiMaterialProperty Properties = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AiMaterial, _impl_.properties_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .pb_msg.AiMaterialProperty Properties = 1;
    {PROTOBUF_FIELD_OFFSET(AiMaterial, _impl_.properties_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 NumAllocated = 2;
    {PROTOBUF_FIELD_OFFSET(AiMaterial, _impl_.numallocated_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }}, {{
    {::_pbi::TcParser::GetTable<::pb_msg::AiMaterialProperty>()},
  }}, {{
  }},
};

::uint8_t* AiMaterial::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_msg.AiMaterial)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .pb_msg.AiMaterialProperty Properties = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_properties_size()); i < n; i++) {
    const auto& repfield = this->_internal_properties().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  // int32 NumAllocated = 2;
  if (this->_internal_numallocated() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_numallocated(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb_msg.AiMaterial)
  return target;
}

::size_t AiMaterial::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_msg.AiMaterial)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb_msg.AiMaterialProperty Properties = 1;
  total_size += 1UL * this->_internal_properties_size();
  for (const auto& msg : this->_internal_properties()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 NumAllocated = 2;
  if (this->_internal_numallocated() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_numallocated());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AiMaterial::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AiMaterial::MergeImpl
};
const ::google::protobuf::Message::ClassData*AiMaterial::GetClassData() const { return &_class_data_; }


void AiMaterial::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AiMaterial*>(&to_msg);
  auto& from = static_cast<const AiMaterial&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb_msg.AiMaterial)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_properties()->MergeFrom(from._internal_properties());
  if (from._internal_numallocated() != 0) {
    _this->_internal_set_numallocated(from._internal_numallocated());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AiMaterial::CopyFrom(const AiMaterial& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_msg.AiMaterial)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AiMaterial::IsInitialized() const {
  return true;
}

void AiMaterial::InternalSwap(AiMaterial* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.properties_.InternalSwap(&other->_impl_.properties_);
        swap(_impl_.numallocated_, other->_impl_.numallocated_);
}

::google::protobuf::Metadata AiMaterial::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_getter, &descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_once,
      file_level_metadata_common_2fpb_5fmsg_2fai_5fmaterial_2eproto[4]);
}
// ===================================================================

class AiMaterialProperty::_Internal {
 public:
};

AiMaterialProperty::AiMaterialProperty(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb_msg.AiMaterialProperty)
}
AiMaterialProperty::AiMaterialProperty(const AiMaterialProperty& from) : ::google::protobuf::Message() {
  AiMaterialProperty* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){},
      decltype(_impl_.data_){},
      decltype(_impl_.semantic_){},
      decltype(_impl_.index_){},
      decltype(_impl_.type_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_key().empty()) {
    _this->_impl_.key_.Set(from._internal_key(), _this->GetArenaForAllocation());
  }
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data().empty()) {
    _this->_impl_.data_.Set(from._internal_data(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.semantic_, &from._impl_.semantic_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.type_) -
    reinterpret_cast<char*>(&_impl_.semantic_)) + sizeof(_impl_.type_));

  // @@protoc_insertion_point(copy_constructor:pb_msg.AiMaterialProperty)
}
inline void AiMaterialProperty::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.key_){},
      decltype(_impl_.data_){},
      decltype(_impl_.semantic_){0u},
      decltype(_impl_.index_){0u},
      decltype(_impl_.type_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.key_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.key_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.data_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
AiMaterialProperty::~AiMaterialProperty() {
  // @@protoc_insertion_point(destructor:pb_msg.AiMaterialProperty)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AiMaterialProperty::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.key_.Destroy();
  _impl_.data_.Destroy();
}
void AiMaterialProperty::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AiMaterialProperty::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_msg.AiMaterialProperty)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.key_.ClearToEmpty();
  _impl_.data_.ClearToEmpty();
  ::memset(&_impl_.semantic_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.type_) -
      reinterpret_cast<char*>(&_impl_.semantic_)) + sizeof(_impl_.type_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AiMaterialProperty::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 37, 2> AiMaterialProperty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AiMaterialProperty_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string Key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AiMaterialProperty, _impl_.key_)}},
    // uint32 Semantic = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AiMaterialProperty, _impl_.semantic_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AiMaterialProperty, _impl_.semantic_)}},
    // uint32 Index = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AiMaterialProperty, _impl_.index_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AiMaterialProperty, _impl_.index_)}},
    // .pb_msg.AiMaterialPropertyType Type = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AiMaterialProperty, _impl_.type_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AiMaterialProperty, _impl_.type_)}},
    // bytes Data = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AiMaterialProperty, _impl_.data_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string Key = 1;
    {PROTOBUF_FIELD_OFFSET(AiMaterialProperty, _impl_.key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 Semantic = 2;
    {PROTOBUF_FIELD_OFFSET(AiMaterialProperty, _impl_.semantic_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 Index = 3;
    {PROTOBUF_FIELD_OFFSET(AiMaterialProperty, _impl_.index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .pb_msg.AiMaterialPropertyType Type = 4;
    {PROTOBUF_FIELD_OFFSET(AiMaterialProperty, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes Data = 5;
    {PROTOBUF_FIELD_OFFSET(AiMaterialProperty, _impl_.data_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\31\3\0\0\0\0\0\0"
    "pb_msg.AiMaterialProperty"
    "Key"
  }},
};

::uint8_t* AiMaterialProperty::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_msg.AiMaterialProperty)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string Key = 1;
  if (!this->_internal_key().empty()) {
    const std::string& _s = this->_internal_key();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pb_msg.AiMaterialProperty.Key");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint32 Semantic = 2;
  if (this->_internal_semantic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_semantic(), target);
  }

  // uint32 Index = 3;
  if (this->_internal_index() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_index(), target);
  }

  // .pb_msg.AiMaterialPropertyType Type = 4;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        4, this->_internal_type(), target);
  }

  // bytes Data = 5;
  if (!this->_internal_data().empty()) {
    const std::string& _s = this->_internal_data();
    target = stream->WriteBytesMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb_msg.AiMaterialProperty)
  return target;
}

::size_t AiMaterialProperty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_msg.AiMaterialProperty)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Key = 1;
  if (!this->_internal_key().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_key());
  }

  // bytes Data = 5;
  if (!this->_internal_data().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_data());
  }

  // uint32 Semantic = 2;
  if (this->_internal_semantic() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_semantic());
  }

  // uint32 Index = 3;
  if (this->_internal_index() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_index());
  }

  // .pb_msg.AiMaterialPropertyType Type = 4;
  if (this->_internal_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AiMaterialProperty::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AiMaterialProperty::MergeImpl
};
const ::google::protobuf::Message::ClassData*AiMaterialProperty::GetClassData() const { return &_class_data_; }


void AiMaterialProperty::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AiMaterialProperty*>(&to_msg);
  auto& from = static_cast<const AiMaterialProperty&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb_msg.AiMaterialProperty)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_key().empty()) {
    _this->_internal_set_key(from._internal_key());
  }
  if (!from._internal_data().empty()) {
    _this->_internal_set_data(from._internal_data());
  }
  if (from._internal_semantic() != 0) {
    _this->_internal_set_semantic(from._internal_semantic());
  }
  if (from._internal_index() != 0) {
    _this->_internal_set_index(from._internal_index());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AiMaterialProperty::CopyFrom(const AiMaterialProperty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_msg.AiMaterialProperty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AiMaterialProperty::IsInitialized() const {
  return true;
}

void AiMaterialProperty::InternalSwap(AiMaterialProperty* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, lhs_arena,
                                       &other->_impl_.key_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.data_, lhs_arena,
                                       &other->_impl_.data_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AiMaterialProperty, _impl_.type_)
      + sizeof(AiMaterialProperty::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(AiMaterialProperty, _impl_.semantic_)>(
          reinterpret_cast<char*>(&_impl_.semantic_),
          reinterpret_cast<char*>(&other->_impl_.semantic_));
}

::google::protobuf::Metadata AiMaterialProperty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_getter, &descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_once,
      file_level_metadata_common_2fpb_5fmsg_2fai_5fmaterial_2eproto[5]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace pb_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
