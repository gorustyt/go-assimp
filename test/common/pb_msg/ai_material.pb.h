// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/pb_msg/ai_material.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "common/pb_msg/common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_common_2fpb_5fmsg_2fai_5fmaterial_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_common_2fpb_5fmsg_2fai_5fmaterial_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto;
namespace pb_msg {
class AiMaterial;
struct AiMaterialDefaultTypeInternal;
extern AiMaterialDefaultTypeInternal _AiMaterial_default_instance_;
class AiMaterialProperty;
struct AiMaterialPropertyDefaultTypeInternal;
extern AiMaterialPropertyDefaultTypeInternal _AiMaterialProperty_default_instance_;
class AiMaterialPropertyFloat32;
struct AiMaterialPropertyFloat32DefaultTypeInternal;
extern AiMaterialPropertyFloat32DefaultTypeInternal _AiMaterialPropertyFloat32_default_instance_;
class AiMaterialPropertyInt64;
struct AiMaterialPropertyInt64DefaultTypeInternal;
extern AiMaterialPropertyInt64DefaultTypeInternal _AiMaterialPropertyInt64_default_instance_;
class AiMaterialPropertyString;
struct AiMaterialPropertyStringDefaultTypeInternal;
extern AiMaterialPropertyStringDefaultTypeInternal _AiMaterialPropertyString_default_instance_;
class AiUVTransform;
struct AiUVTransformDefaultTypeInternal;
extern AiUVTransformDefaultTypeInternal _AiUVTransform_default_instance_;
}  // namespace pb_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace pb_msg {
enum AiMaterialPropertyType : int {
  AiPropertyTypeString = 0,
  AiPropertyTypeFloat32 = 1,
  AiPropertyTypeInt = 2,
  AiPropertyTypeVector3D = 3,
  AiPropertyTypeAiUVTransform = 4,
  AiPropertyTypeVector4D = 5,
  AiPropertyTypeColor4D = 6,
  AiPropertyTypeColor3D = 7,
  AiMaterialPropertyType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  AiMaterialPropertyType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool AiMaterialPropertyType_IsValid(int value);
constexpr AiMaterialPropertyType AiMaterialPropertyType_MIN = static_cast<AiMaterialPropertyType>(0);
constexpr AiMaterialPropertyType AiMaterialPropertyType_MAX = static_cast<AiMaterialPropertyType>(7);
constexpr int AiMaterialPropertyType_ARRAYSIZE = 7 + 1;
const ::google::protobuf::EnumDescriptor*
AiMaterialPropertyType_descriptor();
template <typename T>
const std::string& AiMaterialPropertyType_Name(T value) {
  static_assert(std::is_same<T, AiMaterialPropertyType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AiMaterialPropertyType_Name().");
  return AiMaterialPropertyType_Name(static_cast<AiMaterialPropertyType>(value));
}
template <>
inline const std::string& AiMaterialPropertyType_Name(AiMaterialPropertyType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<AiMaterialPropertyType_descriptor,
                                                 0, 7>(
      static_cast<int>(value));
}
inline bool AiMaterialPropertyType_Parse(absl::string_view name, AiMaterialPropertyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AiMaterialPropertyType>(
      AiMaterialPropertyType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class AiMaterialPropertyFloat32 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiMaterialPropertyFloat32) */ {
 public:
  inline AiMaterialPropertyFloat32() : AiMaterialPropertyFloat32(nullptr) {}
  ~AiMaterialPropertyFloat32() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiMaterialPropertyFloat32(::google::protobuf::internal::ConstantInitialized);

  AiMaterialPropertyFloat32(const AiMaterialPropertyFloat32& from);
  AiMaterialPropertyFloat32(AiMaterialPropertyFloat32&& from) noexcept
    : AiMaterialPropertyFloat32() {
    *this = ::std::move(from);
  }

  inline AiMaterialPropertyFloat32& operator=(const AiMaterialPropertyFloat32& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiMaterialPropertyFloat32& operator=(AiMaterialPropertyFloat32&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiMaterialPropertyFloat32& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiMaterialPropertyFloat32* internal_default_instance() {
    return reinterpret_cast<const AiMaterialPropertyFloat32*>(
               &_AiMaterialPropertyFloat32_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AiMaterialPropertyFloat32& a, AiMaterialPropertyFloat32& b) {
    a.Swap(&b);
  }
  inline void Swap(AiMaterialPropertyFloat32* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiMaterialPropertyFloat32* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiMaterialPropertyFloat32* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiMaterialPropertyFloat32>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiMaterialPropertyFloat32& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiMaterialPropertyFloat32& from) {
    AiMaterialPropertyFloat32::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiMaterialPropertyFloat32* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiMaterialPropertyFloat32";
  }
  protected:
  explicit AiMaterialPropertyFloat32(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated float Data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  float data(int index) const;
  void set_data(int index, float value);
  void add_data(float value);
  const ::google::protobuf::RepeatedField<float>& data() const;
  ::google::protobuf::RepeatedField<float>* mutable_data();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_data() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiMaterialPropertyFloat32)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<float> data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fai_5fmaterial_2eproto;
};// -------------------------------------------------------------------

class AiMaterialPropertyInt64 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiMaterialPropertyInt64) */ {
 public:
  inline AiMaterialPropertyInt64() : AiMaterialPropertyInt64(nullptr) {}
  ~AiMaterialPropertyInt64() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiMaterialPropertyInt64(::google::protobuf::internal::ConstantInitialized);

  AiMaterialPropertyInt64(const AiMaterialPropertyInt64& from);
  AiMaterialPropertyInt64(AiMaterialPropertyInt64&& from) noexcept
    : AiMaterialPropertyInt64() {
    *this = ::std::move(from);
  }

  inline AiMaterialPropertyInt64& operator=(const AiMaterialPropertyInt64& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiMaterialPropertyInt64& operator=(AiMaterialPropertyInt64&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiMaterialPropertyInt64& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiMaterialPropertyInt64* internal_default_instance() {
    return reinterpret_cast<const AiMaterialPropertyInt64*>(
               &_AiMaterialPropertyInt64_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AiMaterialPropertyInt64& a, AiMaterialPropertyInt64& b) {
    a.Swap(&b);
  }
  inline void Swap(AiMaterialPropertyInt64* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiMaterialPropertyInt64* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiMaterialPropertyInt64* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiMaterialPropertyInt64>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiMaterialPropertyInt64& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiMaterialPropertyInt64& from) {
    AiMaterialPropertyInt64::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiMaterialPropertyInt64* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiMaterialPropertyInt64";
  }
  protected:
  explicit AiMaterialPropertyInt64(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated int64 Data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  ::int64_t data(int index) const;
  void set_data(int index, ::int64_t value);
  void add_data(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& data() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_data();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_data() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiMaterialPropertyInt64)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedField<::int64_t> data_;
    mutable ::google::protobuf::internal::CachedSize _data_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fai_5fmaterial_2eproto;
};// -------------------------------------------------------------------

class AiMaterialPropertyString final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiMaterialPropertyString) */ {
 public:
  inline AiMaterialPropertyString() : AiMaterialPropertyString(nullptr) {}
  ~AiMaterialPropertyString() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiMaterialPropertyString(::google::protobuf::internal::ConstantInitialized);

  AiMaterialPropertyString(const AiMaterialPropertyString& from);
  AiMaterialPropertyString(AiMaterialPropertyString&& from) noexcept
    : AiMaterialPropertyString() {
    *this = ::std::move(from);
  }

  inline AiMaterialPropertyString& operator=(const AiMaterialPropertyString& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiMaterialPropertyString& operator=(AiMaterialPropertyString&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiMaterialPropertyString& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiMaterialPropertyString* internal_default_instance() {
    return reinterpret_cast<const AiMaterialPropertyString*>(
               &_AiMaterialPropertyString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AiMaterialPropertyString& a, AiMaterialPropertyString& b) {
    a.Swap(&b);
  }
  inline void Swap(AiMaterialPropertyString* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiMaterialPropertyString* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiMaterialPropertyString* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiMaterialPropertyString>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiMaterialPropertyString& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiMaterialPropertyString& from) {
    AiMaterialPropertyString::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiMaterialPropertyString* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiMaterialPropertyString";
  }
  protected:
  explicit AiMaterialPropertyString(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 1,
  };
  // repeated string Data = 1;
  int data_size() const;
  private:
  int _internal_data_size() const;

  public:
  void clear_data() ;
  const std::string& data(int index) const;
  std::string* mutable_data(int index);
  void set_data(int index, const std::string& value);
  void set_data(int index, std::string&& value);
  void set_data(int index, const char* value);
  void set_data(int index, const char* value, std::size_t size);
  void set_data(int index, absl::string_view value);
  std::string* add_data();
  void add_data(const std::string& value);
  void add_data(std::string&& value);
  void add_data(const char* value);
  void add_data(const char* value, std::size_t size);
  void add_data(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& data() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_data();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_data() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_data();

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiMaterialPropertyString)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1, 0, 44, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField<std::string> data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fai_5fmaterial_2eproto;
};// -------------------------------------------------------------------

class AiUVTransform final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiUVTransform) */ {
 public:
  inline AiUVTransform() : AiUVTransform(nullptr) {}
  ~AiUVTransform() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiUVTransform(::google::protobuf::internal::ConstantInitialized);

  AiUVTransform(const AiUVTransform& from);
  AiUVTransform(AiUVTransform&& from) noexcept
    : AiUVTransform() {
    *this = ::std::move(from);
  }

  inline AiUVTransform& operator=(const AiUVTransform& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiUVTransform& operator=(AiUVTransform&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiUVTransform& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiUVTransform* internal_default_instance() {
    return reinterpret_cast<const AiUVTransform*>(
               &_AiUVTransform_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AiUVTransform& a, AiUVTransform& b) {
    a.Swap(&b);
  }
  inline void Swap(AiUVTransform* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiUVTransform* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiUVTransform* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiUVTransform>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiUVTransform& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiUVTransform& from) {
    AiUVTransform::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiUVTransform* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiUVTransform";
  }
  protected:
  explicit AiUVTransform(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTranslationFieldNumber = 1,
    kScalingFieldNumber = 2,
    kRotationFieldNumber = 3,
  };
  // .pb_msg.AiVector2D Translation = 1;
  bool has_translation() const;
  void clear_translation() ;
  const ::pb_msg::AiVector2D& translation() const;
  PROTOBUF_NODISCARD ::pb_msg::AiVector2D* release_translation();
  ::pb_msg::AiVector2D* mutable_translation();
  void set_allocated_translation(::pb_msg::AiVector2D* value);
  void unsafe_arena_set_allocated_translation(::pb_msg::AiVector2D* value);
  ::pb_msg::AiVector2D* unsafe_arena_release_translation();

  private:
  const ::pb_msg::AiVector2D& _internal_translation() const;
  ::pb_msg::AiVector2D* _internal_mutable_translation();

  public:
  // .pb_msg.AiVector2D Scaling = 2;
  bool has_scaling() const;
  void clear_scaling() ;
  const ::pb_msg::AiVector2D& scaling() const;
  PROTOBUF_NODISCARD ::pb_msg::AiVector2D* release_scaling();
  ::pb_msg::AiVector2D* mutable_scaling();
  void set_allocated_scaling(::pb_msg::AiVector2D* value);
  void unsafe_arena_set_allocated_scaling(::pb_msg::AiVector2D* value);
  ::pb_msg::AiVector2D* unsafe_arena_release_scaling();

  private:
  const ::pb_msg::AiVector2D& _internal_scaling() const;
  ::pb_msg::AiVector2D* _internal_mutable_scaling();

  public:
  // float Rotation = 3;
  void clear_rotation() ;
  float rotation() const;
  void set_rotation(float value);

  private:
  float _internal_rotation() const;
  void _internal_set_rotation(float value);

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiUVTransform)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::pb_msg::AiVector2D* translation_;
    ::pb_msg::AiVector2D* scaling_;
    float rotation_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fai_5fmaterial_2eproto;
};// -------------------------------------------------------------------

class AiMaterial final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiMaterial) */ {
 public:
  inline AiMaterial() : AiMaterial(nullptr) {}
  ~AiMaterial() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiMaterial(::google::protobuf::internal::ConstantInitialized);

  AiMaterial(const AiMaterial& from);
  AiMaterial(AiMaterial&& from) noexcept
    : AiMaterial() {
    *this = ::std::move(from);
  }

  inline AiMaterial& operator=(const AiMaterial& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiMaterial& operator=(AiMaterial&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiMaterial& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiMaterial* internal_default_instance() {
    return reinterpret_cast<const AiMaterial*>(
               &_AiMaterial_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AiMaterial& a, AiMaterial& b) {
    a.Swap(&b);
  }
  inline void Swap(AiMaterial* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiMaterial* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiMaterial* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiMaterial>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiMaterial& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiMaterial& from) {
    AiMaterial::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiMaterial* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiMaterial";
  }
  protected:
  explicit AiMaterial(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPropertiesFieldNumber = 1,
    kNumAllocatedFieldNumber = 2,
  };
  // repeated .pb_msg.AiMaterialProperty Properties = 1;
  int properties_size() const;
  private:
  int _internal_properties_size() const;

  public:
  void clear_properties() ;
  ::pb_msg::AiMaterialProperty* mutable_properties(int index);
  ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMaterialProperty >*
      mutable_properties();
  private:
  const ::google::protobuf::RepeatedPtrField<::pb_msg::AiMaterialProperty>& _internal_properties() const;
  ::google::protobuf::RepeatedPtrField<::pb_msg::AiMaterialProperty>* _internal_mutable_properties();
  public:
  const ::pb_msg::AiMaterialProperty& properties(int index) const;
  ::pb_msg::AiMaterialProperty* add_properties();
  const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMaterialProperty >&
      properties() const;
  // int32 NumAllocated = 2;
  void clear_numallocated() ;
  ::int32_t numallocated() const;
  void set_numallocated(::int32_t value);

  private:
  ::int32_t _internal_numallocated() const;
  void _internal_set_numallocated(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiMaterial)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMaterialProperty > properties_;
    ::int32_t numallocated_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fai_5fmaterial_2eproto;
};// -------------------------------------------------------------------

class AiMaterialProperty final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiMaterialProperty) */ {
 public:
  inline AiMaterialProperty() : AiMaterialProperty(nullptr) {}
  ~AiMaterialProperty() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiMaterialProperty(::google::protobuf::internal::ConstantInitialized);

  AiMaterialProperty(const AiMaterialProperty& from);
  AiMaterialProperty(AiMaterialProperty&& from) noexcept
    : AiMaterialProperty() {
    *this = ::std::move(from);
  }

  inline AiMaterialProperty& operator=(const AiMaterialProperty& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiMaterialProperty& operator=(AiMaterialProperty&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiMaterialProperty& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiMaterialProperty* internal_default_instance() {
    return reinterpret_cast<const AiMaterialProperty*>(
               &_AiMaterialProperty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AiMaterialProperty& a, AiMaterialProperty& b) {
    a.Swap(&b);
  }
  inline void Swap(AiMaterialProperty* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiMaterialProperty* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiMaterialProperty* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiMaterialProperty>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiMaterialProperty& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiMaterialProperty& from) {
    AiMaterialProperty::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiMaterialProperty* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiMaterialProperty";
  }
  protected:
  explicit AiMaterialProperty(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
    kDataFieldNumber = 5,
    kSemanticFieldNumber = 2,
    kIndexFieldNumber = 3,
    kTypeFieldNumber = 4,
  };
  // string Key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* ptr);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // bytes Data = 5;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // uint32 Semantic = 2;
  void clear_semantic() ;
  ::uint32_t semantic() const;
  void set_semantic(::uint32_t value);

  private:
  ::uint32_t _internal_semantic() const;
  void _internal_set_semantic(::uint32_t value);

  public:
  // uint32 Index = 3;
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // .pb_msg.AiMaterialPropertyType Type = 4;
  void clear_type() ;
  ::pb_msg::AiMaterialPropertyType type() const;
  void set_type(::pb_msg::AiMaterialPropertyType value);

  private:
  ::pb_msg::AiMaterialPropertyType _internal_type() const;
  void _internal_set_type(::pb_msg::AiMaterialPropertyType value);

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiMaterialProperty)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 0, 37, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint32_t semantic_;
    ::uint32_t index_;
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fai_5fmaterial_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AiMaterialPropertyFloat32

// repeated float Data = 1;
inline int AiMaterialPropertyFloat32::_internal_data_size() const {
  return _internal_data().size();
}
inline int AiMaterialPropertyFloat32::data_size() const {
  return _internal_data_size();
}
inline void AiMaterialPropertyFloat32::clear_data() {
  _internal_mutable_data()->Clear();
}
inline float AiMaterialPropertyFloat32::data(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMaterialPropertyFloat32.Data)
  return _internal_data().Get(index);
}
inline void AiMaterialPropertyFloat32::set_data(int index, float value) {
  _internal_mutable_data()->Set(index, value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMaterialPropertyFloat32.Data)
}
inline void AiMaterialPropertyFloat32::add_data(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data()->Add(value);
  // @@protoc_insertion_point(field_add:pb_msg.AiMaterialPropertyFloat32.Data)
}
inline const ::google::protobuf::RepeatedField<float>& AiMaterialPropertyFloat32::data() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiMaterialPropertyFloat32.Data)
  return _internal_data();
}
inline ::google::protobuf::RepeatedField<float>* AiMaterialPropertyFloat32::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiMaterialPropertyFloat32.Data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data();
}

inline const ::google::protobuf::RepeatedField<float>& AiMaterialPropertyFloat32::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedField<float>* AiMaterialPropertyFloat32::_internal_mutable_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_;
}

// -------------------------------------------------------------------

// AiMaterialPropertyInt64

// repeated int64 Data = 1;
inline int AiMaterialPropertyInt64::_internal_data_size() const {
  return _internal_data().size();
}
inline int AiMaterialPropertyInt64::data_size() const {
  return _internal_data_size();
}
inline void AiMaterialPropertyInt64::clear_data() {
  _internal_mutable_data()->Clear();
}
inline ::int64_t AiMaterialPropertyInt64::data(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMaterialPropertyInt64.Data)
  return _internal_data().Get(index);
}
inline void AiMaterialPropertyInt64::set_data(int index, ::int64_t value) {
  _internal_mutable_data()->Set(index, value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMaterialPropertyInt64.Data)
}
inline void AiMaterialPropertyInt64::add_data(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data()->Add(value);
  // @@protoc_insertion_point(field_add:pb_msg.AiMaterialPropertyInt64.Data)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& AiMaterialPropertyInt64::data() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiMaterialPropertyInt64.Data)
  return _internal_data();
}
inline ::google::protobuf::RepeatedField<::int64_t>* AiMaterialPropertyInt64::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiMaterialPropertyInt64.Data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data();
}

inline const ::google::protobuf::RepeatedField<::int64_t>& AiMaterialPropertyInt64::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* AiMaterialPropertyInt64::_internal_mutable_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_;
}

// -------------------------------------------------------------------

// AiMaterialPropertyString

// repeated string Data = 1;
inline int AiMaterialPropertyString::_internal_data_size() const {
  return _internal_data().size();
}
inline int AiMaterialPropertyString::data_size() const {
  return _internal_data_size();
}
inline void AiMaterialPropertyString::clear_data() {
  _internal_mutable_data()->Clear();
}
inline std::string* AiMaterialPropertyString::add_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_data()->Add();
  // @@protoc_insertion_point(field_add_mutable:pb_msg.AiMaterialPropertyString.Data)
  return _s;
}
inline const std::string& AiMaterialPropertyString::data(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMaterialPropertyString.Data)
  return _internal_data().Get(index);
}
inline std::string* AiMaterialPropertyString::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiMaterialPropertyString.Data)
  return _internal_mutable_data()->Mutable(index);
}
inline void AiMaterialPropertyString::set_data(int index, const std::string& value) {
  _internal_mutable_data()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMaterialPropertyString.Data)
}
inline void AiMaterialPropertyString::set_data(int index, std::string&& value) {
  _internal_mutable_data()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:pb_msg.AiMaterialPropertyString.Data)
}
inline void AiMaterialPropertyString::set_data(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_data()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pb_msg.AiMaterialPropertyString.Data)
}
inline void AiMaterialPropertyString::set_data(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_data()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb_msg.AiMaterialPropertyString.Data)
}
inline void AiMaterialPropertyString::set_data(int index, absl::string_view value) {
  _internal_mutable_data()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:pb_msg.AiMaterialPropertyString.Data)
}
inline void AiMaterialPropertyString::add_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:pb_msg.AiMaterialPropertyString.Data)
}
inline void AiMaterialPropertyString::add_data(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:pb_msg.AiMaterialPropertyString.Data)
}
inline void AiMaterialPropertyString::add_data(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pb_msg.AiMaterialPropertyString.Data)
}
inline void AiMaterialPropertyString::add_data(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pb_msg.AiMaterialPropertyString.Data)
}
inline void AiMaterialPropertyString::add_data(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_data()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:pb_msg.AiMaterialPropertyString.Data)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AiMaterialPropertyString::data() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiMaterialPropertyString.Data)
  return _internal_data();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* AiMaterialPropertyString::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiMaterialPropertyString.Data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_data();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AiMaterialPropertyString::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AiMaterialPropertyString::_internal_mutable_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.data_;
}

// -------------------------------------------------------------------

// AiUVTransform

// .pb_msg.AiVector2D Translation = 1;
inline bool AiUVTransform::has_translation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.translation_ != nullptr);
  return value;
}
inline const ::pb_msg::AiVector2D& AiUVTransform::_internal_translation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::pb_msg::AiVector2D* p = _impl_.translation_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb_msg::AiVector2D&>(::pb_msg::_AiVector2D_default_instance_);
}
inline const ::pb_msg::AiVector2D& AiUVTransform::translation() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiUVTransform.Translation)
  return _internal_translation();
}
inline void AiUVTransform::unsafe_arena_set_allocated_translation(::pb_msg::AiVector2D* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.translation_);
  }
  _impl_.translation_ = reinterpret_cast<::pb_msg::AiVector2D*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb_msg.AiUVTransform.Translation)
}
inline ::pb_msg::AiVector2D* AiUVTransform::release_translation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::pb_msg::AiVector2D* released = _impl_.translation_;
  _impl_.translation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::pb_msg::AiVector2D* AiUVTransform::unsafe_arena_release_translation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_msg.AiUVTransform.Translation)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::pb_msg::AiVector2D* temp = _impl_.translation_;
  _impl_.translation_ = nullptr;
  return temp;
}
inline ::pb_msg::AiVector2D* AiUVTransform::_internal_mutable_translation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.translation_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb_msg::AiVector2D>(GetArenaForAllocation());
    _impl_.translation_ = reinterpret_cast<::pb_msg::AiVector2D*>(p);
  }
  return _impl_.translation_;
}
inline ::pb_msg::AiVector2D* AiUVTransform::mutable_translation() {
  ::pb_msg::AiVector2D* _msg = _internal_mutable_translation();
  // @@protoc_insertion_point(field_mutable:pb_msg.AiUVTransform.Translation)
  return _msg;
}
inline void AiUVTransform::set_allocated_translation(::pb_msg::AiVector2D* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.translation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.translation_ = reinterpret_cast<::pb_msg::AiVector2D*>(value);
  // @@protoc_insertion_point(field_set_allocated:pb_msg.AiUVTransform.Translation)
}

// .pb_msg.AiVector2D Scaling = 2;
inline bool AiUVTransform::has_scaling() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.scaling_ != nullptr);
  return value;
}
inline const ::pb_msg::AiVector2D& AiUVTransform::_internal_scaling() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::pb_msg::AiVector2D* p = _impl_.scaling_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb_msg::AiVector2D&>(::pb_msg::_AiVector2D_default_instance_);
}
inline const ::pb_msg::AiVector2D& AiUVTransform::scaling() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiUVTransform.Scaling)
  return _internal_scaling();
}
inline void AiUVTransform::unsafe_arena_set_allocated_scaling(::pb_msg::AiVector2D* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scaling_);
  }
  _impl_.scaling_ = reinterpret_cast<::pb_msg::AiVector2D*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb_msg.AiUVTransform.Scaling)
}
inline ::pb_msg::AiVector2D* AiUVTransform::release_scaling() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::pb_msg::AiVector2D* released = _impl_.scaling_;
  _impl_.scaling_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::pb_msg::AiVector2D* AiUVTransform::unsafe_arena_release_scaling() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_msg.AiUVTransform.Scaling)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::pb_msg::AiVector2D* temp = _impl_.scaling_;
  _impl_.scaling_ = nullptr;
  return temp;
}
inline ::pb_msg::AiVector2D* AiUVTransform::_internal_mutable_scaling() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.scaling_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb_msg::AiVector2D>(GetArenaForAllocation());
    _impl_.scaling_ = reinterpret_cast<::pb_msg::AiVector2D*>(p);
  }
  return _impl_.scaling_;
}
inline ::pb_msg::AiVector2D* AiUVTransform::mutable_scaling() {
  ::pb_msg::AiVector2D* _msg = _internal_mutable_scaling();
  // @@protoc_insertion_point(field_mutable:pb_msg.AiUVTransform.Scaling)
  return _msg;
}
inline void AiUVTransform::set_allocated_scaling(::pb_msg::AiVector2D* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.scaling_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.scaling_ = reinterpret_cast<::pb_msg::AiVector2D*>(value);
  // @@protoc_insertion_point(field_set_allocated:pb_msg.AiUVTransform.Scaling)
}

// float Rotation = 3;
inline void AiUVTransform::clear_rotation() {
  _impl_.rotation_ = 0;
}
inline float AiUVTransform::rotation() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiUVTransform.Rotation)
  return _internal_rotation();
}
inline void AiUVTransform::set_rotation(float value) {
  _internal_set_rotation(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiUVTransform.Rotation)
}
inline float AiUVTransform::_internal_rotation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rotation_;
}
inline void AiUVTransform::_internal_set_rotation(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rotation_ = value;
}

// -------------------------------------------------------------------

// AiMaterial

// repeated .pb_msg.AiMaterialProperty Properties = 1;
inline int AiMaterial::_internal_properties_size() const {
  return _internal_properties().size();
}
inline int AiMaterial::properties_size() const {
  return _internal_properties_size();
}
inline void AiMaterial::clear_properties() {
  _internal_mutable_properties()->Clear();
}
inline ::pb_msg::AiMaterialProperty* AiMaterial::mutable_properties(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiMaterial.Properties)
  return _internal_mutable_properties()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMaterialProperty >*
AiMaterial::mutable_properties() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiMaterial.Properties)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_properties();
}
inline const ::pb_msg::AiMaterialProperty& AiMaterial::properties(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMaterial.Properties)
    return _internal_properties().Get(index);
}
inline ::pb_msg::AiMaterialProperty* AiMaterial::add_properties() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::pb_msg::AiMaterialProperty* _add = _internal_mutable_properties()->Add();
  // @@protoc_insertion_point(field_add:pb_msg.AiMaterial.Properties)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMaterialProperty >&
AiMaterial::properties() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiMaterial.Properties)
  return _internal_properties();
}
inline const ::google::protobuf::RepeatedPtrField<::pb_msg::AiMaterialProperty>&
AiMaterial::_internal_properties() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.properties_;
}
inline ::google::protobuf::RepeatedPtrField<::pb_msg::AiMaterialProperty>*
AiMaterial::_internal_mutable_properties() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.properties_;
}

// int32 NumAllocated = 2;
inline void AiMaterial::clear_numallocated() {
  _impl_.numallocated_ = 0;
}
inline ::int32_t AiMaterial::numallocated() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMaterial.NumAllocated)
  return _internal_numallocated();
}
inline void AiMaterial::set_numallocated(::int32_t value) {
  _internal_set_numallocated(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMaterial.NumAllocated)
}
inline ::int32_t AiMaterial::_internal_numallocated() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.numallocated_;
}
inline void AiMaterial::_internal_set_numallocated(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.numallocated_ = value;
}

// -------------------------------------------------------------------

// AiMaterialProperty

// string Key = 1;
inline void AiMaterialProperty::clear_key() {
  _impl_.key_.ClearToEmpty();
}
inline const std::string& AiMaterialProperty::key() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMaterialProperty.Key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AiMaterialProperty::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:pb_msg.AiMaterialProperty.Key)
}
inline std::string* AiMaterialProperty::mutable_key() {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:pb_msg.AiMaterialProperty.Key)
  return _s;
}
inline const std::string& AiMaterialProperty::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void AiMaterialProperty::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArenaForAllocation());
}
inline std::string* AiMaterialProperty::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArenaForAllocation());
}
inline std::string* AiMaterialProperty::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_msg.AiMaterialProperty.Key)
  return _impl_.key_.Release();
}
inline void AiMaterialProperty::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:pb_msg.AiMaterialProperty.Key)
}

// uint32 Semantic = 2;
inline void AiMaterialProperty::clear_semantic() {
  _impl_.semantic_ = 0u;
}
inline ::uint32_t AiMaterialProperty::semantic() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMaterialProperty.Semantic)
  return _internal_semantic();
}
inline void AiMaterialProperty::set_semantic(::uint32_t value) {
  _internal_set_semantic(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMaterialProperty.Semantic)
}
inline ::uint32_t AiMaterialProperty::_internal_semantic() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.semantic_;
}
inline void AiMaterialProperty::_internal_set_semantic(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.semantic_ = value;
}

// uint32 Index = 3;
inline void AiMaterialProperty::clear_index() {
  _impl_.index_ = 0u;
}
inline ::uint32_t AiMaterialProperty::index() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMaterialProperty.Index)
  return _internal_index();
}
inline void AiMaterialProperty::set_index(::uint32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMaterialProperty.Index)
}
inline ::uint32_t AiMaterialProperty::_internal_index() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.index_;
}
inline void AiMaterialProperty::_internal_set_index(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.index_ = value;
}

// .pb_msg.AiMaterialPropertyType Type = 4;
inline void AiMaterialProperty::clear_type() {
  _impl_.type_ = 0;
}
inline ::pb_msg::AiMaterialPropertyType AiMaterialProperty::type() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMaterialProperty.Type)
  return _internal_type();
}
inline void AiMaterialProperty::set_type(::pb_msg::AiMaterialPropertyType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMaterialProperty.Type)
}
inline ::pb_msg::AiMaterialPropertyType AiMaterialProperty::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::pb_msg::AiMaterialPropertyType>(_impl_.type_);
}
inline void AiMaterialProperty::_internal_set_type(::pb_msg::AiMaterialPropertyType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// bytes Data = 5;
inline void AiMaterialProperty::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& AiMaterialProperty::data() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMaterialProperty.Data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AiMaterialProperty::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:pb_msg.AiMaterialProperty.Data)
}
inline std::string* AiMaterialProperty::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:pb_msg.AiMaterialProperty.Data)
  return _s;
}
inline const std::string& AiMaterialProperty::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void AiMaterialProperty::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* AiMaterialProperty::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* AiMaterialProperty::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_msg.AiMaterialProperty.Data)
  return _impl_.data_.Release();
}
inline void AiMaterialProperty::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:pb_msg.AiMaterialProperty.Data)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb_msg


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::pb_msg::AiMaterialPropertyType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::pb_msg::AiMaterialPropertyType>() {
  return ::pb_msg::AiMaterialPropertyType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5fmaterial_2eproto_2epb_2eh
