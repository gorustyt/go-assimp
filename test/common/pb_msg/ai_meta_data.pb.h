// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/pb_msg/ai_meta_data.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5fmeta_5fdata_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5fmeta_5fdata_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_common_2fpb_5fmsg_2fai_5fmeta_5fdata_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_common_2fpb_5fmsg_2fai_5fmeta_5fdata_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_common_2fpb_5fmsg_2fai_5fmeta_5fdata_2eproto;
namespace pb_msg {
class AiMetadata;
struct AiMetadataDefaultTypeInternal;
extern AiMetadataDefaultTypeInternal _AiMetadata_default_instance_;
class AiMetadataEntry;
struct AiMetadataEntryDefaultTypeInternal;
extern AiMetadataEntryDefaultTypeInternal _AiMetadataEntry_default_instance_;
}  // namespace pb_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace pb_msg {

// ===================================================================


// -------------------------------------------------------------------

class AiMetadata final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiMetadata) */ {
 public:
  inline AiMetadata() : AiMetadata(nullptr) {}
  ~AiMetadata() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiMetadata(::google::protobuf::internal::ConstantInitialized);

  AiMetadata(const AiMetadata& from);
  AiMetadata(AiMetadata&& from) noexcept
    : AiMetadata() {
    *this = ::std::move(from);
  }

  inline AiMetadata& operator=(const AiMetadata& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiMetadata& operator=(AiMetadata&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiMetadata& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiMetadata* internal_default_instance() {
    return reinterpret_cast<const AiMetadata*>(
               &_AiMetadata_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AiMetadata& a, AiMetadata& b) {
    a.Swap(&b);
  }
  inline void Swap(AiMetadata* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiMetadata* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiMetadata* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiMetadata>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiMetadata& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiMetadata& from) {
    AiMetadata::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiMetadata* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiMetadata";
  }
  protected:
  explicit AiMetadata(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeysFieldNumber = 1,
    kValuesFieldNumber = 2,
  };
  // repeated string Keys = 1;
  int keys_size() const;
  private:
  int _internal_keys_size() const;

  public:
  void clear_keys() ;
  const std::string& keys(int index) const;
  std::string* mutable_keys(int index);
  void set_keys(int index, const std::string& value);
  void set_keys(int index, std::string&& value);
  void set_keys(int index, const char* value);
  void set_keys(int index, const char* value, std::size_t size);
  void set_keys(int index, absl::string_view value);
  std::string* add_keys();
  void add_keys(const std::string& value);
  void add_keys(std::string&& value);
  void add_keys(const char* value);
  void add_keys(const char* value, std::size_t size);
  void add_keys(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& keys() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_keys();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_keys() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_keys();

  public:
  // repeated .pb_msg.AiMetadataEntry Values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;

  public:
  void clear_values() ;
  ::pb_msg::AiMetadataEntry* mutable_values(int index);
  ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadataEntry >*
      mutable_values();
  private:
  const ::google::protobuf::RepeatedPtrField<::pb_msg::AiMetadataEntry>& _internal_values() const;
  ::google::protobuf::RepeatedPtrField<::pb_msg::AiMetadataEntry>* _internal_mutable_values();
  public:
  const ::pb_msg::AiMetadataEntry& values(int index) const;
  ::pb_msg::AiMetadataEntry* add_values();
  const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadataEntry >&
      values() const;
  // @@protoc_insertion_point(class_scope:pb_msg.AiMetadata)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 1, 30, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField<std::string> keys_;
    ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadataEntry > values_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fai_5fmeta_5fdata_2eproto;
};// -------------------------------------------------------------------

class AiMetadataEntry final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiMetadataEntry) */ {
 public:
  inline AiMetadataEntry() : AiMetadataEntry(nullptr) {}
  ~AiMetadataEntry() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiMetadataEntry(::google::protobuf::internal::ConstantInitialized);

  AiMetadataEntry(const AiMetadataEntry& from);
  AiMetadataEntry(AiMetadataEntry&& from) noexcept
    : AiMetadataEntry() {
    *this = ::std::move(from);
  }

  inline AiMetadataEntry& operator=(const AiMetadataEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiMetadataEntry& operator=(AiMetadataEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiMetadataEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiMetadataEntry* internal_default_instance() {
    return reinterpret_cast<const AiMetadataEntry*>(
               &_AiMetadataEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AiMetadataEntry& a, AiMetadataEntry& b) {
    a.Swap(&b);
  }
  inline void Swap(AiMetadataEntry* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiMetadataEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiMetadataEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiMetadataEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiMetadataEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiMetadataEntry& from) {
    AiMetadataEntry::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiMetadataEntry* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiMetadataEntry";
  }
  protected:
  explicit AiMetadataEntry(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // bytes Data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* ptr);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // int32 Type = 1;
  void clear_type() ;
  ::int32_t type() const;
  void set_type(::int32_t value);

  private:
  ::int32_t _internal_type() const;
  void _internal_set_type(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiMetadataEntry)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::int32_t type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fai_5fmeta_5fdata_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AiMetadata

// repeated string Keys = 1;
inline int AiMetadata::_internal_keys_size() const {
  return _internal_keys().size();
}
inline int AiMetadata::keys_size() const {
  return _internal_keys_size();
}
inline void AiMetadata::clear_keys() {
  _internal_mutable_keys()->Clear();
}
inline std::string* AiMetadata::add_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_keys()->Add();
  // @@protoc_insertion_point(field_add_mutable:pb_msg.AiMetadata.Keys)
  return _s;
}
inline const std::string& AiMetadata::keys(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMetadata.Keys)
  return _internal_keys().Get(index);
}
inline std::string* AiMetadata::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiMetadata.Keys)
  return _internal_mutable_keys()->Mutable(index);
}
inline void AiMetadata::set_keys(int index, const std::string& value) {
  _internal_mutable_keys()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMetadata.Keys)
}
inline void AiMetadata::set_keys(int index, std::string&& value) {
  _internal_mutable_keys()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:pb_msg.AiMetadata.Keys)
}
inline void AiMetadata::set_keys(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_keys()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:pb_msg.AiMetadata.Keys)
}
inline void AiMetadata::set_keys(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_keys()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:pb_msg.AiMetadata.Keys)
}
inline void AiMetadata::set_keys(int index, absl::string_view value) {
  _internal_mutable_keys()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:pb_msg.AiMetadata.Keys)
}
inline void AiMetadata::add_keys(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:pb_msg.AiMetadata.Keys)
}
inline void AiMetadata::add_keys(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:pb_msg.AiMetadata.Keys)
}
inline void AiMetadata::add_keys(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:pb_msg.AiMetadata.Keys)
}
inline void AiMetadata::add_keys(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:pb_msg.AiMetadata.Keys)
}
inline void AiMetadata::add_keys(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keys()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:pb_msg.AiMetadata.Keys)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AiMetadata::keys() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiMetadata.Keys)
  return _internal_keys();
}
inline ::google::protobuf::RepeatedPtrField<std::string>* AiMetadata::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiMetadata.Keys)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_keys();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
AiMetadata::_internal_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.keys_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
AiMetadata::_internal_mutable_keys() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.keys_;
}

// repeated .pb_msg.AiMetadataEntry Values = 2;
inline int AiMetadata::_internal_values_size() const {
  return _internal_values().size();
}
inline int AiMetadata::values_size() const {
  return _internal_values_size();
}
inline void AiMetadata::clear_values() {
  _internal_mutable_values()->Clear();
}
inline ::pb_msg::AiMetadataEntry* AiMetadata::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiMetadata.Values)
  return _internal_mutable_values()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadataEntry >*
AiMetadata::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiMetadata.Values)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_values();
}
inline const ::pb_msg::AiMetadataEntry& AiMetadata::values(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMetadata.Values)
    return _internal_values().Get(index);
}
inline ::pb_msg::AiMetadataEntry* AiMetadata::add_values() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::pb_msg::AiMetadataEntry* _add = _internal_mutable_values()->Add();
  // @@protoc_insertion_point(field_add:pb_msg.AiMetadata.Values)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadataEntry >&
AiMetadata::values() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiMetadata.Values)
  return _internal_values();
}
inline const ::google::protobuf::RepeatedPtrField<::pb_msg::AiMetadataEntry>&
AiMetadata::_internal_values() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.values_;
}
inline ::google::protobuf::RepeatedPtrField<::pb_msg::AiMetadataEntry>*
AiMetadata::_internal_mutable_values() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.values_;
}

// -------------------------------------------------------------------

// AiMetadataEntry

// int32 Type = 1;
inline void AiMetadataEntry::clear_type() {
  _impl_.type_ = 0;
}
inline ::int32_t AiMetadataEntry::type() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMetadataEntry.Type)
  return _internal_type();
}
inline void AiMetadataEntry::set_type(::int32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMetadataEntry.Type)
}
inline ::int32_t AiMetadataEntry::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_;
}
inline void AiMetadataEntry::_internal_set_type(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_ = value;
}

// bytes Data = 2;
inline void AiMetadataEntry::clear_data() {
  _impl_.data_.ClearToEmpty();
}
inline const std::string& AiMetadataEntry::data() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMetadataEntry.Data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AiMetadataEntry::set_data(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:pb_msg.AiMetadataEntry.Data)
}
inline std::string* AiMetadataEntry::mutable_data() {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:pb_msg.AiMetadataEntry.Data)
  return _s;
}
inline const std::string& AiMetadataEntry::_internal_data() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_.Get();
}
inline void AiMetadataEntry::_internal_set_data(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_.Set(value, GetArenaForAllocation());
}
inline std::string* AiMetadataEntry::_internal_mutable_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_.Mutable( GetArenaForAllocation());
}
inline std::string* AiMetadataEntry::release_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_msg.AiMetadataEntry.Data)
  return _impl_.data_.Release();
}
inline void AiMetadataEntry::set_allocated_data(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:pb_msg.AiMetadataEntry.Data)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb_msg


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5fmeta_5fdata_2eproto_2epb_2eh
