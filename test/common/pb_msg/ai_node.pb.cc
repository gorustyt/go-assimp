// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/pb_msg/ai_node.proto

#include "common/pb_msg/ai_node.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace pb_msg {
        template <typename>
PROTOBUF_CONSTEXPR AiNode::AiNode(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.children_)*/ {},
      /*decltype(_impl_.meshes_)*/ {},
      /* _impl_._meshes_cached_byte_size_ = */ {0},
      /*decltype(_impl_.metadata_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.transformation_)*/ nullptr,
      /*decltype(_impl_.parent_)*/ nullptr,
    } {}
struct AiNodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AiNodeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AiNodeDefaultTypeInternal() {}
  union {
    AiNode _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AiNodeDefaultTypeInternal _AiNode_default_instance_;
}  // namespace pb_msg
static ::_pb::Metadata file_level_metadata_common_2fpb_5fmsg_2fai_5fnode_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_common_2fpb_5fmsg_2fai_5fnode_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2fpb_5fmsg_2fai_5fnode_2eproto = nullptr;
const ::uint32_t TableStruct_common_2fpb_5fmsg_2fai_5fnode_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiNode, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiNode, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiNode, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiNode, _impl_.transformation_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiNode, _impl_.parent_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiNode, _impl_.children_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiNode, _impl_.meshes_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiNode, _impl_.metadata_),
    ~0u,
    0,
    1,
    ~0u,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 14, -1, sizeof(::pb_msg::AiNode)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::pb_msg::_AiNode_default_instance_._instance,
};
const char descriptor_table_protodef_common_2fpb_5fmsg_2fai_5fnode_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\033common/pb_msg/ai_node.proto\022\006pb_msg\032 c"
    "ommon/pb_msg/ai_meta_data.proto\032\032common/"
    "pb_msg/common.proto\"\273\001\n\006AiNode\022\014\n\004Name\030\001"
    " \001(\t\022+\n\016Transformation\030\002 \001(\0132\023.pb_msg.Ai"
    "Matrix4x4\022\036\n\006Parent\030\003 \001(\0132\016.pb_msg.AiNod"
    "e\022 \n\010Children\030\004 \003(\0132\016.pb_msg.AiNode\022\016\n\006M"
    "eshes\030\005 \003(\005\022$\n\010MetaData\030\006 \003(\0132\022.pb_msg.A"
    "iMetadataB\017Z\rcommon/pb_msgb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_common_2fpb_5fmsg_2fai_5fnode_2eproto_deps[2] =
    {
        &::descriptor_table_common_2fpb_5fmsg_2fai_5fmeta_5fdata_2eproto,
        &::descriptor_table_common_2fpb_5fmsg_2fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_common_2fpb_5fmsg_2fai_5fnode_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_common_2fpb_5fmsg_2fai_5fnode_2eproto = {
    false,
    false,
    314,
    descriptor_table_protodef_common_2fpb_5fmsg_2fai_5fnode_2eproto,
    "common/pb_msg/ai_node.proto",
    &descriptor_table_common_2fpb_5fmsg_2fai_5fnode_2eproto_once,
    descriptor_table_common_2fpb_5fmsg_2fai_5fnode_2eproto_deps,
    2,
    1,
    schemas,
    file_default_instances,
    TableStruct_common_2fpb_5fmsg_2fai_5fnode_2eproto::offsets,
    file_level_metadata_common_2fpb_5fmsg_2fai_5fnode_2eproto,
    file_level_enum_descriptors_common_2fpb_5fmsg_2fai_5fnode_2eproto,
    file_level_service_descriptors_common_2fpb_5fmsg_2fai_5fnode_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_common_2fpb_5fmsg_2fai_5fnode_2eproto_getter() {
  return &descriptor_table_common_2fpb_5fmsg_2fai_5fnode_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_common_2fpb_5fmsg_2fai_5fnode_2eproto(&descriptor_table_common_2fpb_5fmsg_2fai_5fnode_2eproto);
namespace pb_msg {
// ===================================================================

class AiNode::_Internal {
 public:
  using HasBits = decltype(std::declval<AiNode>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AiNode, _impl_._has_bits_);
  static const ::pb_msg::AiMatrix4x4& transformation(const AiNode* msg);
  static void set_has_transformation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::pb_msg::AiNode& parent(const AiNode* msg);
  static void set_has_parent(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::pb_msg::AiMatrix4x4& AiNode::_Internal::transformation(const AiNode* msg) {
  return *msg->_impl_.transformation_;
}
const ::pb_msg::AiNode& AiNode::_Internal::parent(const AiNode* msg) {
  return *msg->_impl_.parent_;
}
void AiNode::clear_transformation() {
  if (_impl_.transformation_ != nullptr) _impl_.transformation_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void AiNode::clear_metadata() {
  _internal_mutable_metadata()->Clear();
}
AiNode::AiNode(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb_msg.AiNode)
}
AiNode::AiNode(const AiNode& from) : ::google::protobuf::Message() {
  AiNode* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.children_){from._impl_.children_},
      decltype(_impl_.meshes_){from._impl_.meshes_},
      /* _impl_._meshes_cached_byte_size_ = */ {0},
      decltype(_impl_.metadata_){from._impl_.metadata_},
      decltype(_impl_.name_){},
      decltype(_impl_.transformation_){nullptr},
      decltype(_impl_.parent_){nullptr},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.transformation_ = new ::pb_msg::AiMatrix4x4(*from._impl_.transformation_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.parent_ = new ::pb_msg::AiNode(*from._impl_.parent_);
  }

  // @@protoc_insertion_point(copy_constructor:pb_msg.AiNode)
}
inline void AiNode::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.children_){arena},
      decltype(_impl_.meshes_){arena},
      /* _impl_._meshes_cached_byte_size_ = */ {0},
      decltype(_impl_.metadata_){arena},
      decltype(_impl_.name_){},
      decltype(_impl_.transformation_){nullptr},
      decltype(_impl_.parent_){nullptr},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
AiNode::~AiNode() {
  // @@protoc_insertion_point(destructor:pb_msg.AiNode)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AiNode::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.children_.~RepeatedPtrField();
  _impl_.meshes_.~RepeatedField();
  _impl_.metadata_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.transformation_;
  if (this != internal_default_instance()) delete _impl_.parent_;
}
void AiNode::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AiNode::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_msg.AiNode)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_children()->Clear();
  _internal_mutable_meshes()->Clear();
  _internal_mutable_metadata()->Clear();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.transformation_ != nullptr);
      _impl_.transformation_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.parent_ != nullptr);
      _impl_.parent_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AiNode::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 4, 26, 2> AiNode::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AiNode, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AiNode_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string Name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AiNode, _impl_.name_)}},
    // .pb_msg.AiMatrix4x4 Transformation = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(AiNode, _impl_.transformation_)}},
    // .pb_msg.AiNode Parent = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(AiNode, _impl_.parent_)}},
    // repeated .pb_msg.AiNode Children = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(AiNode, _impl_.children_)}},
    // repeated int32 Meshes = 5;
    {::_pbi::TcParser::FastV32P1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AiNode, _impl_.meshes_)}},
    // repeated .pb_msg.AiMetadata MetaData = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 3, PROTOBUF_FIELD_OFFSET(AiNode, _impl_.metadata_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string Name = 1;
    {PROTOBUF_FIELD_OFFSET(AiNode, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .pb_msg.AiMatrix4x4 Transformation = 2;
    {PROTOBUF_FIELD_OFFSET(AiNode, _impl_.transformation_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .pb_msg.AiNode Parent = 3;
    {PROTOBUF_FIELD_OFFSET(AiNode, _impl_.parent_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .pb_msg.AiNode Children = 4;
    {PROTOBUF_FIELD_OFFSET(AiNode, _impl_.children_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated int32 Meshes = 5;
    {PROTOBUF_FIELD_OFFSET(AiNode, _impl_.meshes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
    // repeated .pb_msg.AiMetadata MetaData = 6;
    {PROTOBUF_FIELD_OFFSET(AiNode, _impl_.metadata_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::pb_msg::AiMatrix4x4>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiNode>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiNode>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiMetadata>()},
  }}, {{
    "\15\4\0\0\0\0\0\0"
    "pb_msg.AiNode"
    "Name"
  }},
};

::uint8_t* AiNode::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_msg.AiNode)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string Name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pb_msg.AiNode.Name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .pb_msg.AiMatrix4x4 Transformation = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::transformation(this),
        _Internal::transformation(this).GetCachedSize(), target, stream);
  }

  // .pb_msg.AiNode Parent = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::parent(this),
        _Internal::parent(this).GetCachedSize(), target, stream);
  }

  // repeated .pb_msg.AiNode Children = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_children_size()); i < n; i++) {
    const auto& repfield = this->_internal_children().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated int32 Meshes = 5;
  {
    int byte_size = _impl_._meshes_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(5, _internal_meshes(),
                                                 byte_size, target);
    }
  }

  // repeated .pb_msg.AiMetadata MetaData = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_metadata_size()); i < n; i++) {
    const auto& repfield = this->_internal_metadata().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb_msg.AiNode)
  return target;
}

::size_t AiNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_msg.AiNode)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb_msg.AiNode Children = 4;
  total_size += 1UL * this->_internal_children_size();
  for (const auto& msg : this->_internal_children()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated int32 Meshes = 5;
  {
    std::size_t data_size = ::_pbi::WireFormatLite::Int32Size(
        this->_internal_meshes())
    ;
    _impl_._meshes_cached_byte_size_.Set(::_pbi::ToCachedSize(data_size));
    std::size_t tag_size = data_size == 0
        ? 0
        : 1 + ::_pbi::WireFormatLite::Int32Size(
                            static_cast<int32_t>(data_size))
    ;
    total_size += tag_size + data_size;
  }
  // repeated .pb_msg.AiMetadata MetaData = 6;
  total_size += 1UL * this->_internal_metadata_size();
  for (const auto& msg : this->_internal_metadata()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string Name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .pb_msg.AiMatrix4x4 Transformation = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.transformation_);
    }

    // .pb_msg.AiNode Parent = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.parent_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AiNode::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AiNode::MergeImpl
};
const ::google::protobuf::Message::ClassData*AiNode::GetClassData() const { return &_class_data_; }


void AiNode::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AiNode*>(&to_msg);
  auto& from = static_cast<const AiNode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb_msg.AiNode)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_children()->MergeFrom(from._internal_children());
  _this->_internal_mutable_meshes()->MergeFrom(from._internal_meshes());
  _this->_internal_mutable_metadata()->MergeFrom(from._internal_metadata());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_transformation()->::pb_msg::AiMatrix4x4::MergeFrom(
          from._internal_transformation());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_parent()->::pb_msg::AiNode::MergeFrom(
          from._internal_parent());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AiNode::CopyFrom(const AiNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_msg.AiNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AiNode::IsInitialized() const {
  return true;
}

void AiNode::InternalSwap(AiNode* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.children_.InternalSwap(&other->_impl_.children_);
  _impl_.meshes_.InternalSwap(&other->_impl_.meshes_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AiNode, _impl_.parent_)
      + sizeof(AiNode::_impl_.parent_)
      - PROTOBUF_FIELD_OFFSET(AiNode, _impl_.transformation_)>(
          reinterpret_cast<char*>(&_impl_.transformation_),
          reinterpret_cast<char*>(&other->_impl_.transformation_));
}

::google::protobuf::Metadata AiNode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fpb_5fmsg_2fai_5fnode_2eproto_getter, &descriptor_table_common_2fpb_5fmsg_2fai_5fnode_2eproto_once,
      file_level_metadata_common_2fpb_5fmsg_2fai_5fnode_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace pb_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
