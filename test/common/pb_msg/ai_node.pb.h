// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/pb_msg/ai_node.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5fnode_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5fnode_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "common/pb_msg/ai_meta_data.pb.h"
#include "common/pb_msg/common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_common_2fpb_5fmsg_2fai_5fnode_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_common_2fpb_5fmsg_2fai_5fnode_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_common_2fpb_5fmsg_2fai_5fnode_2eproto;
namespace pb_msg {
class AiNode;
struct AiNodeDefaultTypeInternal;
extern AiNodeDefaultTypeInternal _AiNode_default_instance_;
}  // namespace pb_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace pb_msg {

// ===================================================================


// -------------------------------------------------------------------

class AiNode final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiNode) */ {
 public:
  inline AiNode() : AiNode(nullptr) {}
  ~AiNode() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiNode(::google::protobuf::internal::ConstantInitialized);

  AiNode(const AiNode& from);
  AiNode(AiNode&& from) noexcept
    : AiNode() {
    *this = ::std::move(from);
  }

  inline AiNode& operator=(const AiNode& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiNode& operator=(AiNode&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiNode& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiNode* internal_default_instance() {
    return reinterpret_cast<const AiNode*>(
               &_AiNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AiNode& a, AiNode& b) {
    a.Swap(&b);
  }
  inline void Swap(AiNode* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiNode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiNode* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiNode>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiNode& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiNode& from) {
    AiNode::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiNode* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiNode";
  }
  protected:
  explicit AiNode(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kChildrenFieldNumber = 4,
    kMeshesFieldNumber = 5,
    kMetaDataFieldNumber = 6,
    kNameFieldNumber = 1,
    kTransformationFieldNumber = 2,
    kParentFieldNumber = 3,
  };
  // repeated .pb_msg.AiNode Children = 4;
  int children_size() const;
  private:
  int _internal_children_size() const;

  public:
  void clear_children() ;
  ::pb_msg::AiNode* mutable_children(int index);
  ::google::protobuf::RepeatedPtrField< ::pb_msg::AiNode >*
      mutable_children();
  private:
  const ::google::protobuf::RepeatedPtrField<::pb_msg::AiNode>& _internal_children() const;
  ::google::protobuf::RepeatedPtrField<::pb_msg::AiNode>* _internal_mutable_children();
  public:
  const ::pb_msg::AiNode& children(int index) const;
  ::pb_msg::AiNode* add_children();
  const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiNode >&
      children() const;
  // repeated int32 Meshes = 5;
  int meshes_size() const;
  private:
  int _internal_meshes_size() const;

  public:
  void clear_meshes() ;
  ::int32_t meshes(int index) const;
  void set_meshes(int index, ::int32_t value);
  void add_meshes(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& meshes() const;
  ::google::protobuf::RepeatedField<::int32_t>* mutable_meshes();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_meshes() const;
  ::google::protobuf::RepeatedField<::int32_t>* _internal_mutable_meshes();

  public:
  // repeated .pb_msg.AiMetadata MetaData = 6;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  ::pb_msg::AiMetadata* mutable_metadata(int index);
  ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadata >*
      mutable_metadata();
  private:
  const ::google::protobuf::RepeatedPtrField<::pb_msg::AiMetadata>& _internal_metadata() const;
  ::google::protobuf::RepeatedPtrField<::pb_msg::AiMetadata>* _internal_mutable_metadata();
  public:
  const ::pb_msg::AiMetadata& metadata(int index) const;
  ::pb_msg::AiMetadata* add_metadata();
  const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadata >&
      metadata() const;
  // string Name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .pb_msg.AiMatrix4x4 Transformation = 2;
  bool has_transformation() const;
  void clear_transformation() ;
  const ::pb_msg::AiMatrix4x4& transformation() const;
  PROTOBUF_NODISCARD ::pb_msg::AiMatrix4x4* release_transformation();
  ::pb_msg::AiMatrix4x4* mutable_transformation();
  void set_allocated_transformation(::pb_msg::AiMatrix4x4* value);
  void unsafe_arena_set_allocated_transformation(::pb_msg::AiMatrix4x4* value);
  ::pb_msg::AiMatrix4x4* unsafe_arena_release_transformation();

  private:
  const ::pb_msg::AiMatrix4x4& _internal_transformation() const;
  ::pb_msg::AiMatrix4x4* _internal_mutable_transformation();

  public:
  // .pb_msg.AiNode Parent = 3;
  bool has_parent() const;
  void clear_parent() ;
  const ::pb_msg::AiNode& parent() const;
  PROTOBUF_NODISCARD ::pb_msg::AiNode* release_parent();
  ::pb_msg::AiNode* mutable_parent();
  void set_allocated_parent(::pb_msg::AiNode* value);
  void unsafe_arena_set_allocated_parent(::pb_msg::AiNode* value);
  ::pb_msg::AiNode* unsafe_arena_release_parent();

  private:
  const ::pb_msg::AiNode& _internal_parent() const;
  ::pb_msg::AiNode* _internal_mutable_parent();

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiNode)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6, 4, 26, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::pb_msg::AiNode > children_;
    ::google::protobuf::RepeatedField<::int32_t> meshes_;
    mutable ::google::protobuf::internal::CachedSize _meshes_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadata > metadata_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::pb_msg::AiMatrix4x4* transformation_;
    ::pb_msg::AiNode* parent_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fai_5fnode_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AiNode

// string Name = 1;
inline void AiNode::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& AiNode::name() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiNode.Name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AiNode::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:pb_msg.AiNode.Name)
}
inline std::string* AiNode::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:pb_msg.AiNode.Name)
  return _s;
}
inline const std::string& AiNode::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void AiNode::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* AiNode::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* AiNode::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_msg.AiNode.Name)
  return _impl_.name_.Release();
}
inline void AiNode::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:pb_msg.AiNode.Name)
}

// .pb_msg.AiMatrix4x4 Transformation = 2;
inline bool AiNode::has_transformation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.transformation_ != nullptr);
  return value;
}
inline const ::pb_msg::AiMatrix4x4& AiNode::_internal_transformation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::pb_msg::AiMatrix4x4* p = _impl_.transformation_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb_msg::AiMatrix4x4&>(::pb_msg::_AiMatrix4x4_default_instance_);
}
inline const ::pb_msg::AiMatrix4x4& AiNode::transformation() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiNode.Transformation)
  return _internal_transformation();
}
inline void AiNode::unsafe_arena_set_allocated_transformation(::pb_msg::AiMatrix4x4* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transformation_);
  }
  _impl_.transformation_ = reinterpret_cast<::pb_msg::AiMatrix4x4*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb_msg.AiNode.Transformation)
}
inline ::pb_msg::AiMatrix4x4* AiNode::release_transformation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::pb_msg::AiMatrix4x4* released = _impl_.transformation_;
  _impl_.transformation_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::pb_msg::AiMatrix4x4* AiNode::unsafe_arena_release_transformation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_msg.AiNode.Transformation)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::pb_msg::AiMatrix4x4* temp = _impl_.transformation_;
  _impl_.transformation_ = nullptr;
  return temp;
}
inline ::pb_msg::AiMatrix4x4* AiNode::_internal_mutable_transformation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.transformation_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb_msg::AiMatrix4x4>(GetArenaForAllocation());
    _impl_.transformation_ = reinterpret_cast<::pb_msg::AiMatrix4x4*>(p);
  }
  return _impl_.transformation_;
}
inline ::pb_msg::AiMatrix4x4* AiNode::mutable_transformation() {
  ::pb_msg::AiMatrix4x4* _msg = _internal_mutable_transformation();
  // @@protoc_insertion_point(field_mutable:pb_msg.AiNode.Transformation)
  return _msg;
}
inline void AiNode::set_allocated_transformation(::pb_msg::AiMatrix4x4* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.transformation_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.transformation_ = reinterpret_cast<::pb_msg::AiMatrix4x4*>(value);
  // @@protoc_insertion_point(field_set_allocated:pb_msg.AiNode.Transformation)
}

// .pb_msg.AiNode Parent = 3;
inline bool AiNode::has_parent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.parent_ != nullptr);
  return value;
}
inline void AiNode::clear_parent() {
  if (_impl_.parent_ != nullptr) _impl_.parent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::pb_msg::AiNode& AiNode::_internal_parent() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::pb_msg::AiNode* p = _impl_.parent_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb_msg::AiNode&>(::pb_msg::_AiNode_default_instance_);
}
inline const ::pb_msg::AiNode& AiNode::parent() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiNode.Parent)
  return _internal_parent();
}
inline void AiNode::unsafe_arena_set_allocated_parent(::pb_msg::AiNode* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parent_);
  }
  _impl_.parent_ = reinterpret_cast<::pb_msg::AiNode*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb_msg.AiNode.Parent)
}
inline ::pb_msg::AiNode* AiNode::release_parent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::pb_msg::AiNode* released = _impl_.parent_;
  _impl_.parent_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::pb_msg::AiNode* AiNode::unsafe_arena_release_parent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_msg.AiNode.Parent)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::pb_msg::AiNode* temp = _impl_.parent_;
  _impl_.parent_ = nullptr;
  return temp;
}
inline ::pb_msg::AiNode* AiNode::_internal_mutable_parent() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.parent_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb_msg::AiNode>(GetArenaForAllocation());
    _impl_.parent_ = reinterpret_cast<::pb_msg::AiNode*>(p);
  }
  return _impl_.parent_;
}
inline ::pb_msg::AiNode* AiNode::mutable_parent() {
  ::pb_msg::AiNode* _msg = _internal_mutable_parent();
  // @@protoc_insertion_point(field_mutable:pb_msg.AiNode.Parent)
  return _msg;
}
inline void AiNode::set_allocated_parent(::pb_msg::AiNode* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::pb_msg::AiNode*>(_impl_.parent_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::pb_msg::AiNode*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.parent_ = reinterpret_cast<::pb_msg::AiNode*>(value);
  // @@protoc_insertion_point(field_set_allocated:pb_msg.AiNode.Parent)
}

// repeated .pb_msg.AiNode Children = 4;
inline int AiNode::_internal_children_size() const {
  return _internal_children().size();
}
inline int AiNode::children_size() const {
  return _internal_children_size();
}
inline void AiNode::clear_children() {
  _internal_mutable_children()->Clear();
}
inline ::pb_msg::AiNode* AiNode::mutable_children(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiNode.Children)
  return _internal_mutable_children()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb_msg::AiNode >*
AiNode::mutable_children() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiNode.Children)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_children();
}
inline const ::pb_msg::AiNode& AiNode::children(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiNode.Children)
    return _internal_children().Get(index);
}
inline ::pb_msg::AiNode* AiNode::add_children() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::pb_msg::AiNode* _add = _internal_mutable_children()->Add();
  // @@protoc_insertion_point(field_add:pb_msg.AiNode.Children)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiNode >&
AiNode::children() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiNode.Children)
  return _internal_children();
}
inline const ::google::protobuf::RepeatedPtrField<::pb_msg::AiNode>&
AiNode::_internal_children() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.children_;
}
inline ::google::protobuf::RepeatedPtrField<::pb_msg::AiNode>*
AiNode::_internal_mutable_children() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.children_;
}

// repeated int32 Meshes = 5;
inline int AiNode::_internal_meshes_size() const {
  return _internal_meshes().size();
}
inline int AiNode::meshes_size() const {
  return _internal_meshes_size();
}
inline void AiNode::clear_meshes() {
  _internal_mutable_meshes()->Clear();
}
inline ::int32_t AiNode::meshes(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiNode.Meshes)
  return _internal_meshes().Get(index);
}
inline void AiNode::set_meshes(int index, ::int32_t value) {
  _internal_mutable_meshes()->Set(index, value);
  // @@protoc_insertion_point(field_set:pb_msg.AiNode.Meshes)
}
inline void AiNode::add_meshes(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_meshes()->Add(value);
  // @@protoc_insertion_point(field_add:pb_msg.AiNode.Meshes)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& AiNode::meshes() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiNode.Meshes)
  return _internal_meshes();
}
inline ::google::protobuf::RepeatedField<::int32_t>* AiNode::mutable_meshes() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiNode.Meshes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_meshes();
}

inline const ::google::protobuf::RepeatedField<::int32_t>& AiNode::_internal_meshes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.meshes_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* AiNode::_internal_mutable_meshes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.meshes_;
}

// repeated .pb_msg.AiMetadata MetaData = 6;
inline int AiNode::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int AiNode::metadata_size() const {
  return _internal_metadata_size();
}
inline ::pb_msg::AiMetadata* AiNode::mutable_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiNode.MetaData)
  return _internal_mutable_metadata()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadata >*
AiNode::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiNode.MetaData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_metadata();
}
inline const ::pb_msg::AiMetadata& AiNode::metadata(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiNode.MetaData)
    return _internal_metadata().Get(index);
}
inline ::pb_msg::AiMetadata* AiNode::add_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::pb_msg::AiMetadata* _add = _internal_mutable_metadata()->Add();
  // @@protoc_insertion_point(field_add:pb_msg.AiNode.MetaData)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadata >&
AiNode::metadata() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiNode.MetaData)
  return _internal_metadata();
}
inline const ::google::protobuf::RepeatedPtrField<::pb_msg::AiMetadata>&
AiNode::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_;
}
inline ::google::protobuf::RepeatedPtrField<::pb_msg::AiMetadata>*
AiNode::_internal_mutable_metadata() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.metadata_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb_msg


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5fnode_2eproto_2epb_2eh
