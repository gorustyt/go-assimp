// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/pb_msg/ai_scene.proto

#include "common/pb_msg/ai_scene.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace pb_msg {
        template <typename>
PROTOBUF_CONSTEXPR AiScene::AiScene(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.meshes_)*/ {},
      /*decltype(_impl_.materials_)*/ {},
      /*decltype(_impl_.animations_)*/ {},
      /*decltype(_impl_.textures_)*/ {},
      /*decltype(_impl_.lights_)*/ {},
      /*decltype(_impl_.cameras_)*/ {},
      /*decltype(_impl_.metadata_)*/ {},
      /*decltype(_impl_.skeletons_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.rootnode_)*/ nullptr,
      /*decltype(_impl_.flags_)*/ 0u,
    } {}
struct AiSceneDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AiSceneDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AiSceneDefaultTypeInternal() {}
  union {
    AiScene _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AiSceneDefaultTypeInternal _AiScene_default_instance_;
}  // namespace pb_msg
static ::_pb::Metadata file_level_metadata_common_2fpb_5fmsg_2fai_5fscene_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_common_2fpb_5fmsg_2fai_5fscene_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2fpb_5fmsg_2fai_5fscene_2eproto = nullptr;
const ::uint32_t TableStruct_common_2fpb_5fmsg_2fai_5fscene_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiScene, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiScene, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiScene, _impl_.flags_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiScene, _impl_.rootnode_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiScene, _impl_.meshes_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiScene, _impl_.materials_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiScene, _impl_.animations_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiScene, _impl_.textures_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiScene, _impl_.lights_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiScene, _impl_.cameras_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiScene, _impl_.metadata_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiScene, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiScene, _impl_.skeletons_),
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 19, -1, sizeof(::pb_msg::AiScene)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::pb_msg::_AiScene_default_instance_._instance,
};
const char descriptor_table_protodef_common_2fpb_5fmsg_2fai_5fscene_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\034common/pb_msg/ai_scene.proto\022\006pb_msg\032\033"
    "common/pb_msg/ai_node.proto\032\033common/pb_m"
    "sg/ai_mesh.proto\032\036common/pb_msg/ai_textu"
    "re.proto\032\037common/pb_msg/ai_skeleton.prot"
    "o\032 common/pb_msg/ai_meta_data.proto\032\035com"
    "mon/pb_msg/ai_camera.proto\032\034common/pb_ms"
    "g/ai_light.proto\032 common/pb_msg/ai_anima"
    "tion.proto\032\037common/pb_msg/ai_material.pr"
    "oto\"\356\002\n\007AiScene\022\r\n\005Flags\030\001 \001(\r\022 \n\010RootNo"
    "de\030\002 \001(\0132\016.pb_msg.AiNode\022\036\n\006Meshes\030\003 \003(\013"
    "2\016.pb_msg.AiMesh\022%\n\tMaterials\030\004 \003(\0132\022.pb"
    "_msg.AiMaterial\022\'\n\nAnimations\030\005 \003(\0132\023.pb"
    "_msg.AiAnimation\022#\n\010Textures\030\006 \003(\0132\021.pb_"
    "msg.AiTexture\022\037\n\006Lights\030\007 \003(\0132\017.pb_msg.A"
    "iLight\022!\n\007Cameras\030\010 \003(\0132\020.pb_msg.AiCamer"
    "a\022$\n\010MetaData\030\t \003(\0132\022.pb_msg.AiMetadata\022"
    "\014\n\004Name\030\n \001(\t\022%\n\tSkeletons\030\013 \003(\0132\022.pb_ms"
    "g.AiSkeletonB\017Z\rcommon/pb_msgb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_common_2fpb_5fmsg_2fai_5fscene_2eproto_deps[9] =
    {
        &::descriptor_table_common_2fpb_5fmsg_2fai_5fanimation_2eproto,
        &::descriptor_table_common_2fpb_5fmsg_2fai_5fcamera_2eproto,
        &::descriptor_table_common_2fpb_5fmsg_2fai_5flight_2eproto,
        &::descriptor_table_common_2fpb_5fmsg_2fai_5fmaterial_2eproto,
        &::descriptor_table_common_2fpb_5fmsg_2fai_5fmesh_2eproto,
        &::descriptor_table_common_2fpb_5fmsg_2fai_5fmeta_5fdata_2eproto,
        &::descriptor_table_common_2fpb_5fmsg_2fai_5fnode_2eproto,
        &::descriptor_table_common_2fpb_5fmsg_2fai_5fskeleton_2eproto,
        &::descriptor_table_common_2fpb_5fmsg_2fai_5ftexture_2eproto,
};
static ::absl::once_flag descriptor_table_common_2fpb_5fmsg_2fai_5fscene_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_common_2fpb_5fmsg_2fai_5fscene_2eproto = {
    false,
    false,
    717,
    descriptor_table_protodef_common_2fpb_5fmsg_2fai_5fscene_2eproto,
    "common/pb_msg/ai_scene.proto",
    &descriptor_table_common_2fpb_5fmsg_2fai_5fscene_2eproto_once,
    descriptor_table_common_2fpb_5fmsg_2fai_5fscene_2eproto_deps,
    9,
    1,
    schemas,
    file_default_instances,
    TableStruct_common_2fpb_5fmsg_2fai_5fscene_2eproto::offsets,
    file_level_metadata_common_2fpb_5fmsg_2fai_5fscene_2eproto,
    file_level_enum_descriptors_common_2fpb_5fmsg_2fai_5fscene_2eproto,
    file_level_service_descriptors_common_2fpb_5fmsg_2fai_5fscene_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_common_2fpb_5fmsg_2fai_5fscene_2eproto_getter() {
  return &descriptor_table_common_2fpb_5fmsg_2fai_5fscene_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_common_2fpb_5fmsg_2fai_5fscene_2eproto(&descriptor_table_common_2fpb_5fmsg_2fai_5fscene_2eproto);
namespace pb_msg {
// ===================================================================

class AiScene::_Internal {
 public:
  using HasBits = decltype(std::declval<AiScene>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AiScene, _impl_._has_bits_);
  static const ::pb_msg::AiNode& rootnode(const AiScene* msg);
  static void set_has_rootnode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::pb_msg::AiNode& AiScene::_Internal::rootnode(const AiScene* msg) {
  return *msg->_impl_.rootnode_;
}
void AiScene::clear_rootnode() {
  if (_impl_.rootnode_ != nullptr) _impl_.rootnode_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void AiScene::clear_meshes() {
  _internal_mutable_meshes()->Clear();
}
void AiScene::clear_materials() {
  _internal_mutable_materials()->Clear();
}
void AiScene::clear_animations() {
  _internal_mutable_animations()->Clear();
}
void AiScene::clear_textures() {
  _internal_mutable_textures()->Clear();
}
void AiScene::clear_lights() {
  _internal_mutable_lights()->Clear();
}
void AiScene::clear_cameras() {
  _internal_mutable_cameras()->Clear();
}
void AiScene::clear_metadata() {
  _internal_mutable_metadata()->Clear();
}
void AiScene::clear_skeletons() {
  _internal_mutable_skeletons()->Clear();
}
AiScene::AiScene(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb_msg.AiScene)
}
AiScene::AiScene(const AiScene& from) : ::google::protobuf::Message() {
  AiScene* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.meshes_){from._impl_.meshes_},
      decltype(_impl_.materials_){from._impl_.materials_},
      decltype(_impl_.animations_){from._impl_.animations_},
      decltype(_impl_.textures_){from._impl_.textures_},
      decltype(_impl_.lights_){from._impl_.lights_},
      decltype(_impl_.cameras_){from._impl_.cameras_},
      decltype(_impl_.metadata_){from._impl_.metadata_},
      decltype(_impl_.skeletons_){from._impl_.skeletons_},
      decltype(_impl_.name_){},
      decltype(_impl_.rootnode_){nullptr},
      decltype(_impl_.flags_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.rootnode_ = new ::pb_msg::AiNode(*from._impl_.rootnode_);
  }
  _this->_impl_.flags_ = from._impl_.flags_;

  // @@protoc_insertion_point(copy_constructor:pb_msg.AiScene)
}
inline void AiScene::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.meshes_){arena},
      decltype(_impl_.materials_){arena},
      decltype(_impl_.animations_){arena},
      decltype(_impl_.textures_){arena},
      decltype(_impl_.lights_){arena},
      decltype(_impl_.cameras_){arena},
      decltype(_impl_.metadata_){arena},
      decltype(_impl_.skeletons_){arena},
      decltype(_impl_.name_){},
      decltype(_impl_.rootnode_){nullptr},
      decltype(_impl_.flags_){0u},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
AiScene::~AiScene() {
  // @@protoc_insertion_point(destructor:pb_msg.AiScene)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AiScene::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.meshes_.~RepeatedPtrField();
  _impl_.materials_.~RepeatedPtrField();
  _impl_.animations_.~RepeatedPtrField();
  _impl_.textures_.~RepeatedPtrField();
  _impl_.lights_.~RepeatedPtrField();
  _impl_.cameras_.~RepeatedPtrField();
  _impl_.metadata_.~RepeatedPtrField();
  _impl_.skeletons_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  if (this != internal_default_instance()) delete _impl_.rootnode_;
}
void AiScene::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AiScene::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_msg.AiScene)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_meshes()->Clear();
  _internal_mutable_materials()->Clear();
  _internal_mutable_animations()->Clear();
  _internal_mutable_textures()->Clear();
  _internal_mutable_lights()->Clear();
  _internal_mutable_cameras()->Clear();
  _internal_mutable_metadata()->Clear();
  _internal_mutable_skeletons()->Clear();
  _impl_.name_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.rootnode_ != nullptr);
    _impl_.rootnode_->Clear();
  }
  _impl_.flags_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AiScene::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 11, 9, 35, 2> AiScene::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AiScene, _impl_._has_bits_),
    0, // no _extensions_
    11, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294965248,  // skipmap
    offsetof(decltype(_table_), field_entries),
    11,  // num_field_entries
    9,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AiScene_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 Flags = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AiScene, _impl_.flags_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AiScene, _impl_.flags_)}},
    // .pb_msg.AiNode RootNode = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(AiScene, _impl_.rootnode_)}},
    // repeated .pb_msg.AiMesh Meshes = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(AiScene, _impl_.meshes_)}},
    // repeated .pb_msg.AiMaterial Materials = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 2, PROTOBUF_FIELD_OFFSET(AiScene, _impl_.materials_)}},
    // repeated .pb_msg.AiAnimation Animations = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 3, PROTOBUF_FIELD_OFFSET(AiScene, _impl_.animations_)}},
    // repeated .pb_msg.AiTexture Textures = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 4, PROTOBUF_FIELD_OFFSET(AiScene, _impl_.textures_)}},
    // repeated .pb_msg.AiLight Lights = 7;
    {::_pbi::TcParser::FastMtR1,
     {58, 63, 5, PROTOBUF_FIELD_OFFSET(AiScene, _impl_.lights_)}},
    // repeated .pb_msg.AiCamera Cameras = 8;
    {::_pbi::TcParser::FastMtR1,
     {66, 63, 6, PROTOBUF_FIELD_OFFSET(AiScene, _impl_.cameras_)}},
    // repeated .pb_msg.AiMetadata MetaData = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 7, PROTOBUF_FIELD_OFFSET(AiScene, _impl_.metadata_)}},
    // string Name = 10;
    {::_pbi::TcParser::FastUS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(AiScene, _impl_.name_)}},
    // repeated .pb_msg.AiSkeleton Skeletons = 11;
    {::_pbi::TcParser::FastMtR1,
     {90, 63, 8, PROTOBUF_FIELD_OFFSET(AiScene, _impl_.skeletons_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 Flags = 1;
    {PROTOBUF_FIELD_OFFSET(AiScene, _impl_.flags_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // .pb_msg.AiNode RootNode = 2;
    {PROTOBUF_FIELD_OFFSET(AiScene, _impl_.rootnode_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .pb_msg.AiMesh Meshes = 3;
    {PROTOBUF_FIELD_OFFSET(AiScene, _impl_.meshes_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .pb_msg.AiMaterial Materials = 4;
    {PROTOBUF_FIELD_OFFSET(AiScene, _impl_.materials_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .pb_msg.AiAnimation Animations = 5;
    {PROTOBUF_FIELD_OFFSET(AiScene, _impl_.animations_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .pb_msg.AiTexture Textures = 6;
    {PROTOBUF_FIELD_OFFSET(AiScene, _impl_.textures_), -1, 4,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .pb_msg.AiLight Lights = 7;
    {PROTOBUF_FIELD_OFFSET(AiScene, _impl_.lights_), -1, 5,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .pb_msg.AiCamera Cameras = 8;
    {PROTOBUF_FIELD_OFFSET(AiScene, _impl_.cameras_), -1, 6,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .pb_msg.AiMetadata MetaData = 9;
    {PROTOBUF_FIELD_OFFSET(AiScene, _impl_.metadata_), -1, 7,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string Name = 10;
    {PROTOBUF_FIELD_OFFSET(AiScene, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .pb_msg.AiSkeleton Skeletons = 11;
    {PROTOBUF_FIELD_OFFSET(AiScene, _impl_.skeletons_), -1, 8,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::pb_msg::AiNode>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiMesh>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiMaterial>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiAnimation>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiTexture>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiLight>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiCamera>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiMetadata>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiSkeleton>()},
  }}, {{
    "\16\0\0\0\0\0\0\0\0\0\4\0\0\0\0\0"
    "pb_msg.AiScene"
    "Name"
  }},
};

::uint8_t* AiScene::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_msg.AiScene)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 Flags = 1;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_flags(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .pb_msg.AiNode RootNode = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::rootnode(this),
        _Internal::rootnode(this).GetCachedSize(), target, stream);
  }

  // repeated .pb_msg.AiMesh Meshes = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_meshes_size()); i < n; i++) {
    const auto& repfield = this->_internal_meshes().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .pb_msg.AiMaterial Materials = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_materials_size()); i < n; i++) {
    const auto& repfield = this->_internal_materials().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .pb_msg.AiAnimation Animations = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_animations_size()); i < n; i++) {
    const auto& repfield = this->_internal_animations().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .pb_msg.AiTexture Textures = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_textures_size()); i < n; i++) {
    const auto& repfield = this->_internal_textures().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .pb_msg.AiLight Lights = 7;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_lights_size()); i < n; i++) {
    const auto& repfield = this->_internal_lights().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(7, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .pb_msg.AiCamera Cameras = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_cameras_size()); i < n; i++) {
    const auto& repfield = this->_internal_cameras().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .pb_msg.AiMetadata MetaData = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_metadata_size()); i < n; i++) {
    const auto& repfield = this->_internal_metadata().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string Name = 10;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pb_msg.AiScene.Name");
    target = stream->WriteStringMaybeAliased(10, _s, target);
  }

  // repeated .pb_msg.AiSkeleton Skeletons = 11;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_skeletons_size()); i < n; i++) {
    const auto& repfield = this->_internal_skeletons().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(11, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb_msg.AiScene)
  return target;
}

::size_t AiScene::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_msg.AiScene)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb_msg.AiMesh Meshes = 3;
  total_size += 1UL * this->_internal_meshes_size();
  for (const auto& msg : this->_internal_meshes()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .pb_msg.AiMaterial Materials = 4;
  total_size += 1UL * this->_internal_materials_size();
  for (const auto& msg : this->_internal_materials()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .pb_msg.AiAnimation Animations = 5;
  total_size += 1UL * this->_internal_animations_size();
  for (const auto& msg : this->_internal_animations()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .pb_msg.AiTexture Textures = 6;
  total_size += 1UL * this->_internal_textures_size();
  for (const auto& msg : this->_internal_textures()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .pb_msg.AiLight Lights = 7;
  total_size += 1UL * this->_internal_lights_size();
  for (const auto& msg : this->_internal_lights()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .pb_msg.AiCamera Cameras = 8;
  total_size += 1UL * this->_internal_cameras_size();
  for (const auto& msg : this->_internal_cameras()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .pb_msg.AiMetadata MetaData = 9;
  total_size += 1UL * this->_internal_metadata_size();
  for (const auto& msg : this->_internal_metadata()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .pb_msg.AiSkeleton Skeletons = 11;
  total_size += 1UL * this->_internal_skeletons_size();
  for (const auto& msg : this->_internal_skeletons()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string Name = 10;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // .pb_msg.AiNode RootNode = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_impl_.rootnode_);
  }

  // uint32 Flags = 1;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AiScene::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AiScene::MergeImpl
};
const ::google::protobuf::Message::ClassData*AiScene::GetClassData() const { return &_class_data_; }


void AiScene::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AiScene*>(&to_msg);
  auto& from = static_cast<const AiScene&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb_msg.AiScene)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_meshes()->MergeFrom(from._internal_meshes());
  _this->_internal_mutable_materials()->MergeFrom(from._internal_materials());
  _this->_internal_mutable_animations()->MergeFrom(from._internal_animations());
  _this->_internal_mutable_textures()->MergeFrom(from._internal_textures());
  _this->_internal_mutable_lights()->MergeFrom(from._internal_lights());
  _this->_internal_mutable_cameras()->MergeFrom(from._internal_cameras());
  _this->_internal_mutable_metadata()->MergeFrom(from._internal_metadata());
  _this->_internal_mutable_skeletons()->MergeFrom(from._internal_skeletons());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_rootnode()->::pb_msg::AiNode::MergeFrom(
        from._internal_rootnode());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AiScene::CopyFrom(const AiScene& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_msg.AiScene)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AiScene::IsInitialized() const {
  return true;
}

void AiScene::InternalSwap(AiScene* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.meshes_.InternalSwap(&other->_impl_.meshes_);
  _impl_.materials_.InternalSwap(&other->_impl_.materials_);
  _impl_.animations_.InternalSwap(&other->_impl_.animations_);
  _impl_.textures_.InternalSwap(&other->_impl_.textures_);
  _impl_.lights_.InternalSwap(&other->_impl_.lights_);
  _impl_.cameras_.InternalSwap(&other->_impl_.cameras_);
  _impl_.metadata_.InternalSwap(&other->_impl_.metadata_);
  _impl_.skeletons_.InternalSwap(&other->_impl_.skeletons_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AiScene, _impl_.flags_)
      + sizeof(AiScene::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(AiScene, _impl_.rootnode_)>(
          reinterpret_cast<char*>(&_impl_.rootnode_),
          reinterpret_cast<char*>(&other->_impl_.rootnode_));
}

::google::protobuf::Metadata AiScene::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fpb_5fmsg_2fai_5fscene_2eproto_getter, &descriptor_table_common_2fpb_5fmsg_2fai_5fscene_2eproto_once,
      file_level_metadata_common_2fpb_5fmsg_2fai_5fscene_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace pb_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
