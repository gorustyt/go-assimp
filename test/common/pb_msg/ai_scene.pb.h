// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/pb_msg/ai_scene.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5fscene_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5fscene_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "common/pb_msg/ai_node.pb.h"
#include "common/pb_msg/ai_mesh.pb.h"
#include "common/pb_msg/ai_texture.pb.h"
#include "common/pb_msg/ai_skeleton.pb.h"
#include "common/pb_msg/ai_meta_data.pb.h"
#include "common/pb_msg/ai_camera.pb.h"
#include "common/pb_msg/ai_light.pb.h"
#include "common/pb_msg/ai_animation.pb.h"
#include "common/pb_msg/ai_material.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_common_2fpb_5fmsg_2fai_5fscene_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_common_2fpb_5fmsg_2fai_5fscene_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_common_2fpb_5fmsg_2fai_5fscene_2eproto;
namespace pb_msg {
class AiScene;
struct AiSceneDefaultTypeInternal;
extern AiSceneDefaultTypeInternal _AiScene_default_instance_;
}  // namespace pb_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace pb_msg {

// ===================================================================


// -------------------------------------------------------------------

class AiScene final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiScene) */ {
 public:
  inline AiScene() : AiScene(nullptr) {}
  ~AiScene() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiScene(::google::protobuf::internal::ConstantInitialized);

  AiScene(const AiScene& from);
  AiScene(AiScene&& from) noexcept
    : AiScene() {
    *this = ::std::move(from);
  }

  inline AiScene& operator=(const AiScene& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiScene& operator=(AiScene&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiScene& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiScene* internal_default_instance() {
    return reinterpret_cast<const AiScene*>(
               &_AiScene_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AiScene& a, AiScene& b) {
    a.Swap(&b);
  }
  inline void Swap(AiScene* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiScene* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiScene* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiScene>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiScene& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiScene& from) {
    AiScene::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiScene* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiScene";
  }
  protected:
  explicit AiScene(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMeshesFieldNumber = 3,
    kMaterialsFieldNumber = 4,
    kAnimationsFieldNumber = 5,
    kTexturesFieldNumber = 6,
    kLightsFieldNumber = 7,
    kCamerasFieldNumber = 8,
    kMetaDataFieldNumber = 9,
    kSkeletonsFieldNumber = 11,
    kNameFieldNumber = 10,
    kRootNodeFieldNumber = 2,
    kFlagsFieldNumber = 1,
  };
  // repeated .pb_msg.AiMesh Meshes = 3;
  int meshes_size() const;
  private:
  int _internal_meshes_size() const;

  public:
  void clear_meshes() ;
  ::pb_msg::AiMesh* mutable_meshes(int index);
  ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMesh >*
      mutable_meshes();
  private:
  const ::google::protobuf::RepeatedPtrField<::pb_msg::AiMesh>& _internal_meshes() const;
  ::google::protobuf::RepeatedPtrField<::pb_msg::AiMesh>* _internal_mutable_meshes();
  public:
  const ::pb_msg::AiMesh& meshes(int index) const;
  ::pb_msg::AiMesh* add_meshes();
  const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMesh >&
      meshes() const;
  // repeated .pb_msg.AiMaterial Materials = 4;
  int materials_size() const;
  private:
  int _internal_materials_size() const;

  public:
  void clear_materials() ;
  ::pb_msg::AiMaterial* mutable_materials(int index);
  ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMaterial >*
      mutable_materials();
  private:
  const ::google::protobuf::RepeatedPtrField<::pb_msg::AiMaterial>& _internal_materials() const;
  ::google::protobuf::RepeatedPtrField<::pb_msg::AiMaterial>* _internal_mutable_materials();
  public:
  const ::pb_msg::AiMaterial& materials(int index) const;
  ::pb_msg::AiMaterial* add_materials();
  const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMaterial >&
      materials() const;
  // repeated .pb_msg.AiAnimation Animations = 5;
  int animations_size() const;
  private:
  int _internal_animations_size() const;

  public:
  void clear_animations() ;
  ::pb_msg::AiAnimation* mutable_animations(int index);
  ::google::protobuf::RepeatedPtrField< ::pb_msg::AiAnimation >*
      mutable_animations();
  private:
  const ::google::protobuf::RepeatedPtrField<::pb_msg::AiAnimation>& _internal_animations() const;
  ::google::protobuf::RepeatedPtrField<::pb_msg::AiAnimation>* _internal_mutable_animations();
  public:
  const ::pb_msg::AiAnimation& animations(int index) const;
  ::pb_msg::AiAnimation* add_animations();
  const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiAnimation >&
      animations() const;
  // repeated .pb_msg.AiTexture Textures = 6;
  int textures_size() const;
  private:
  int _internal_textures_size() const;

  public:
  void clear_textures() ;
  ::pb_msg::AiTexture* mutable_textures(int index);
  ::google::protobuf::RepeatedPtrField< ::pb_msg::AiTexture >*
      mutable_textures();
  private:
  const ::google::protobuf::RepeatedPtrField<::pb_msg::AiTexture>& _internal_textures() const;
  ::google::protobuf::RepeatedPtrField<::pb_msg::AiTexture>* _internal_mutable_textures();
  public:
  const ::pb_msg::AiTexture& textures(int index) const;
  ::pb_msg::AiTexture* add_textures();
  const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiTexture >&
      textures() const;
  // repeated .pb_msg.AiLight Lights = 7;
  int lights_size() const;
  private:
  int _internal_lights_size() const;

  public:
  void clear_lights() ;
  ::pb_msg::AiLight* mutable_lights(int index);
  ::google::protobuf::RepeatedPtrField< ::pb_msg::AiLight >*
      mutable_lights();
  private:
  const ::google::protobuf::RepeatedPtrField<::pb_msg::AiLight>& _internal_lights() const;
  ::google::protobuf::RepeatedPtrField<::pb_msg::AiLight>* _internal_mutable_lights();
  public:
  const ::pb_msg::AiLight& lights(int index) const;
  ::pb_msg::AiLight* add_lights();
  const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiLight >&
      lights() const;
  // repeated .pb_msg.AiCamera Cameras = 8;
  int cameras_size() const;
  private:
  int _internal_cameras_size() const;

  public:
  void clear_cameras() ;
  ::pb_msg::AiCamera* mutable_cameras(int index);
  ::google::protobuf::RepeatedPtrField< ::pb_msg::AiCamera >*
      mutable_cameras();
  private:
  const ::google::protobuf::RepeatedPtrField<::pb_msg::AiCamera>& _internal_cameras() const;
  ::google::protobuf::RepeatedPtrField<::pb_msg::AiCamera>* _internal_mutable_cameras();
  public:
  const ::pb_msg::AiCamera& cameras(int index) const;
  ::pb_msg::AiCamera* add_cameras();
  const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiCamera >&
      cameras() const;
  // repeated .pb_msg.AiMetadata MetaData = 9;
  int metadata_size() const;
  private:
  int _internal_metadata_size() const;

  public:
  void clear_metadata() ;
  ::pb_msg::AiMetadata* mutable_metadata(int index);
  ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadata >*
      mutable_metadata();
  private:
  const ::google::protobuf::RepeatedPtrField<::pb_msg::AiMetadata>& _internal_metadata() const;
  ::google::protobuf::RepeatedPtrField<::pb_msg::AiMetadata>* _internal_mutable_metadata();
  public:
  const ::pb_msg::AiMetadata& metadata(int index) const;
  ::pb_msg::AiMetadata* add_metadata();
  const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadata >&
      metadata() const;
  // repeated .pb_msg.AiSkeleton Skeletons = 11;
  int skeletons_size() const;
  private:
  int _internal_skeletons_size() const;

  public:
  void clear_skeletons() ;
  ::pb_msg::AiSkeleton* mutable_skeletons(int index);
  ::google::protobuf::RepeatedPtrField< ::pb_msg::AiSkeleton >*
      mutable_skeletons();
  private:
  const ::google::protobuf::RepeatedPtrField<::pb_msg::AiSkeleton>& _internal_skeletons() const;
  ::google::protobuf::RepeatedPtrField<::pb_msg::AiSkeleton>* _internal_mutable_skeletons();
  public:
  const ::pb_msg::AiSkeleton& skeletons(int index) const;
  ::pb_msg::AiSkeleton* add_skeletons();
  const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiSkeleton >&
      skeletons() const;
  // string Name = 10;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* ptr);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .pb_msg.AiNode RootNode = 2;
  bool has_rootnode() const;
  void clear_rootnode() ;
  const ::pb_msg::AiNode& rootnode() const;
  PROTOBUF_NODISCARD ::pb_msg::AiNode* release_rootnode();
  ::pb_msg::AiNode* mutable_rootnode();
  void set_allocated_rootnode(::pb_msg::AiNode* value);
  void unsafe_arena_set_allocated_rootnode(::pb_msg::AiNode* value);
  ::pb_msg::AiNode* unsafe_arena_release_rootnode();

  private:
  const ::pb_msg::AiNode& _internal_rootnode() const;
  ::pb_msg::AiNode* _internal_mutable_rootnode();

  public:
  // uint32 Flags = 1;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiScene)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 11, 9, 35, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMesh > meshes_;
    ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMaterial > materials_;
    ::google::protobuf::RepeatedPtrField< ::pb_msg::AiAnimation > animations_;
    ::google::protobuf::RepeatedPtrField< ::pb_msg::AiTexture > textures_;
    ::google::protobuf::RepeatedPtrField< ::pb_msg::AiLight > lights_;
    ::google::protobuf::RepeatedPtrField< ::pb_msg::AiCamera > cameras_;
    ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadata > metadata_;
    ::google::protobuf::RepeatedPtrField< ::pb_msg::AiSkeleton > skeletons_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::pb_msg::AiNode* rootnode_;
    ::uint32_t flags_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fai_5fscene_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AiScene

// uint32 Flags = 1;
inline void AiScene::clear_flags() {
  _impl_.flags_ = 0u;
}
inline ::uint32_t AiScene::flags() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiScene.Flags)
  return _internal_flags();
}
inline void AiScene::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiScene.Flags)
}
inline ::uint32_t AiScene::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void AiScene::_internal_set_flags(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// .pb_msg.AiNode RootNode = 2;
inline bool AiScene::has_rootnode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.rootnode_ != nullptr);
  return value;
}
inline const ::pb_msg::AiNode& AiScene::_internal_rootnode() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::pb_msg::AiNode* p = _impl_.rootnode_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb_msg::AiNode&>(::pb_msg::_AiNode_default_instance_);
}
inline const ::pb_msg::AiNode& AiScene::rootnode() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiScene.RootNode)
  return _internal_rootnode();
}
inline void AiScene::unsafe_arena_set_allocated_rootnode(::pb_msg::AiNode* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rootnode_);
  }
  _impl_.rootnode_ = reinterpret_cast<::pb_msg::AiNode*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb_msg.AiScene.RootNode)
}
inline ::pb_msg::AiNode* AiScene::release_rootnode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::pb_msg::AiNode* released = _impl_.rootnode_;
  _impl_.rootnode_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::pb_msg::AiNode* AiScene::unsafe_arena_release_rootnode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_msg.AiScene.RootNode)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::pb_msg::AiNode* temp = _impl_.rootnode_;
  _impl_.rootnode_ = nullptr;
  return temp;
}
inline ::pb_msg::AiNode* AiScene::_internal_mutable_rootnode() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.rootnode_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb_msg::AiNode>(GetArenaForAllocation());
    _impl_.rootnode_ = reinterpret_cast<::pb_msg::AiNode*>(p);
  }
  return _impl_.rootnode_;
}
inline ::pb_msg::AiNode* AiScene::mutable_rootnode() {
  ::pb_msg::AiNode* _msg = _internal_mutable_rootnode();
  // @@protoc_insertion_point(field_mutable:pb_msg.AiScene.RootNode)
  return _msg;
}
inline void AiScene::set_allocated_rootnode(::pb_msg::AiNode* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.rootnode_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::google::protobuf::MessageLite*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.rootnode_ = reinterpret_cast<::pb_msg::AiNode*>(value);
  // @@protoc_insertion_point(field_set_allocated:pb_msg.AiScene.RootNode)
}

// repeated .pb_msg.AiMesh Meshes = 3;
inline int AiScene::_internal_meshes_size() const {
  return _internal_meshes().size();
}
inline int AiScene::meshes_size() const {
  return _internal_meshes_size();
}
inline ::pb_msg::AiMesh* AiScene::mutable_meshes(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiScene.Meshes)
  return _internal_mutable_meshes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMesh >*
AiScene::mutable_meshes() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiScene.Meshes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_meshes();
}
inline const ::pb_msg::AiMesh& AiScene::meshes(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiScene.Meshes)
    return _internal_meshes().Get(index);
}
inline ::pb_msg::AiMesh* AiScene::add_meshes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::pb_msg::AiMesh* _add = _internal_mutable_meshes()->Add();
  // @@protoc_insertion_point(field_add:pb_msg.AiScene.Meshes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMesh >&
AiScene::meshes() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiScene.Meshes)
  return _internal_meshes();
}
inline const ::google::protobuf::RepeatedPtrField<::pb_msg::AiMesh>&
AiScene::_internal_meshes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.meshes_;
}
inline ::google::protobuf::RepeatedPtrField<::pb_msg::AiMesh>*
AiScene::_internal_mutable_meshes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.meshes_;
}

// repeated .pb_msg.AiMaterial Materials = 4;
inline int AiScene::_internal_materials_size() const {
  return _internal_materials().size();
}
inline int AiScene::materials_size() const {
  return _internal_materials_size();
}
inline ::pb_msg::AiMaterial* AiScene::mutable_materials(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiScene.Materials)
  return _internal_mutable_materials()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMaterial >*
AiScene::mutable_materials() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiScene.Materials)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_materials();
}
inline const ::pb_msg::AiMaterial& AiScene::materials(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiScene.Materials)
    return _internal_materials().Get(index);
}
inline ::pb_msg::AiMaterial* AiScene::add_materials() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::pb_msg::AiMaterial* _add = _internal_mutable_materials()->Add();
  // @@protoc_insertion_point(field_add:pb_msg.AiScene.Materials)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMaterial >&
AiScene::materials() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiScene.Materials)
  return _internal_materials();
}
inline const ::google::protobuf::RepeatedPtrField<::pb_msg::AiMaterial>&
AiScene::_internal_materials() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.materials_;
}
inline ::google::protobuf::RepeatedPtrField<::pb_msg::AiMaterial>*
AiScene::_internal_mutable_materials() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.materials_;
}

// repeated .pb_msg.AiAnimation Animations = 5;
inline int AiScene::_internal_animations_size() const {
  return _internal_animations().size();
}
inline int AiScene::animations_size() const {
  return _internal_animations_size();
}
inline ::pb_msg::AiAnimation* AiScene::mutable_animations(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiScene.Animations)
  return _internal_mutable_animations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb_msg::AiAnimation >*
AiScene::mutable_animations() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiScene.Animations)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_animations();
}
inline const ::pb_msg::AiAnimation& AiScene::animations(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiScene.Animations)
    return _internal_animations().Get(index);
}
inline ::pb_msg::AiAnimation* AiScene::add_animations() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::pb_msg::AiAnimation* _add = _internal_mutable_animations()->Add();
  // @@protoc_insertion_point(field_add:pb_msg.AiScene.Animations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiAnimation >&
AiScene::animations() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiScene.Animations)
  return _internal_animations();
}
inline const ::google::protobuf::RepeatedPtrField<::pb_msg::AiAnimation>&
AiScene::_internal_animations() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.animations_;
}
inline ::google::protobuf::RepeatedPtrField<::pb_msg::AiAnimation>*
AiScene::_internal_mutable_animations() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.animations_;
}

// repeated .pb_msg.AiTexture Textures = 6;
inline int AiScene::_internal_textures_size() const {
  return _internal_textures().size();
}
inline int AiScene::textures_size() const {
  return _internal_textures_size();
}
inline ::pb_msg::AiTexture* AiScene::mutable_textures(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiScene.Textures)
  return _internal_mutable_textures()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb_msg::AiTexture >*
AiScene::mutable_textures() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiScene.Textures)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_textures();
}
inline const ::pb_msg::AiTexture& AiScene::textures(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiScene.Textures)
    return _internal_textures().Get(index);
}
inline ::pb_msg::AiTexture* AiScene::add_textures() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::pb_msg::AiTexture* _add = _internal_mutable_textures()->Add();
  // @@protoc_insertion_point(field_add:pb_msg.AiScene.Textures)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiTexture >&
AiScene::textures() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiScene.Textures)
  return _internal_textures();
}
inline const ::google::protobuf::RepeatedPtrField<::pb_msg::AiTexture>&
AiScene::_internal_textures() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.textures_;
}
inline ::google::protobuf::RepeatedPtrField<::pb_msg::AiTexture>*
AiScene::_internal_mutable_textures() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.textures_;
}

// repeated .pb_msg.AiLight Lights = 7;
inline int AiScene::_internal_lights_size() const {
  return _internal_lights().size();
}
inline int AiScene::lights_size() const {
  return _internal_lights_size();
}
inline ::pb_msg::AiLight* AiScene::mutable_lights(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiScene.Lights)
  return _internal_mutable_lights()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb_msg::AiLight >*
AiScene::mutable_lights() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiScene.Lights)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_lights();
}
inline const ::pb_msg::AiLight& AiScene::lights(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiScene.Lights)
    return _internal_lights().Get(index);
}
inline ::pb_msg::AiLight* AiScene::add_lights() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::pb_msg::AiLight* _add = _internal_mutable_lights()->Add();
  // @@protoc_insertion_point(field_add:pb_msg.AiScene.Lights)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiLight >&
AiScene::lights() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiScene.Lights)
  return _internal_lights();
}
inline const ::google::protobuf::RepeatedPtrField<::pb_msg::AiLight>&
AiScene::_internal_lights() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lights_;
}
inline ::google::protobuf::RepeatedPtrField<::pb_msg::AiLight>*
AiScene::_internal_mutable_lights() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.lights_;
}

// repeated .pb_msg.AiCamera Cameras = 8;
inline int AiScene::_internal_cameras_size() const {
  return _internal_cameras().size();
}
inline int AiScene::cameras_size() const {
  return _internal_cameras_size();
}
inline ::pb_msg::AiCamera* AiScene::mutable_cameras(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiScene.Cameras)
  return _internal_mutable_cameras()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb_msg::AiCamera >*
AiScene::mutable_cameras() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiScene.Cameras)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_cameras();
}
inline const ::pb_msg::AiCamera& AiScene::cameras(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiScene.Cameras)
    return _internal_cameras().Get(index);
}
inline ::pb_msg::AiCamera* AiScene::add_cameras() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::pb_msg::AiCamera* _add = _internal_mutable_cameras()->Add();
  // @@protoc_insertion_point(field_add:pb_msg.AiScene.Cameras)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiCamera >&
AiScene::cameras() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiScene.Cameras)
  return _internal_cameras();
}
inline const ::google::protobuf::RepeatedPtrField<::pb_msg::AiCamera>&
AiScene::_internal_cameras() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cameras_;
}
inline ::google::protobuf::RepeatedPtrField<::pb_msg::AiCamera>*
AiScene::_internal_mutable_cameras() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.cameras_;
}

// repeated .pb_msg.AiMetadata MetaData = 9;
inline int AiScene::_internal_metadata_size() const {
  return _internal_metadata().size();
}
inline int AiScene::metadata_size() const {
  return _internal_metadata_size();
}
inline ::pb_msg::AiMetadata* AiScene::mutable_metadata(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiScene.MetaData)
  return _internal_mutable_metadata()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadata >*
AiScene::mutable_metadata() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiScene.MetaData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_metadata();
}
inline const ::pb_msg::AiMetadata& AiScene::metadata(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiScene.MetaData)
    return _internal_metadata().Get(index);
}
inline ::pb_msg::AiMetadata* AiScene::add_metadata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::pb_msg::AiMetadata* _add = _internal_mutable_metadata()->Add();
  // @@protoc_insertion_point(field_add:pb_msg.AiScene.MetaData)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiMetadata >&
AiScene::metadata() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiScene.MetaData)
  return _internal_metadata();
}
inline const ::google::protobuf::RepeatedPtrField<::pb_msg::AiMetadata>&
AiScene::_internal_metadata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.metadata_;
}
inline ::google::protobuf::RepeatedPtrField<::pb_msg::AiMetadata>*
AiScene::_internal_mutable_metadata() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.metadata_;
}

// string Name = 10;
inline void AiScene::clear_name() {
  _impl_.name_.ClearToEmpty();
}
inline const std::string& AiScene::name() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiScene.Name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AiScene::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:pb_msg.AiScene.Name)
}
inline std::string* AiScene::mutable_name() {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:pb_msg.AiScene.Name)
  return _s;
}
inline const std::string& AiScene::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void AiScene::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArenaForAllocation());
}
inline std::string* AiScene::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArenaForAllocation());
}
inline std::string* AiScene::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_msg.AiScene.Name)
  return _impl_.name_.Release();
}
inline void AiScene::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:pb_msg.AiScene.Name)
}

// repeated .pb_msg.AiSkeleton Skeletons = 11;
inline int AiScene::_internal_skeletons_size() const {
  return _internal_skeletons().size();
}
inline int AiScene::skeletons_size() const {
  return _internal_skeletons_size();
}
inline ::pb_msg::AiSkeleton* AiScene::mutable_skeletons(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiScene.Skeletons)
  return _internal_mutable_skeletons()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb_msg::AiSkeleton >*
AiScene::mutable_skeletons() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiScene.Skeletons)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_skeletons();
}
inline const ::pb_msg::AiSkeleton& AiScene::skeletons(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiScene.Skeletons)
    return _internal_skeletons().Get(index);
}
inline ::pb_msg::AiSkeleton* AiScene::add_skeletons() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::pb_msg::AiSkeleton* _add = _internal_mutable_skeletons()->Add();
  // @@protoc_insertion_point(field_add:pb_msg.AiScene.Skeletons)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiSkeleton >&
AiScene::skeletons() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiScene.Skeletons)
  return _internal_skeletons();
}
inline const ::google::protobuf::RepeatedPtrField<::pb_msg::AiSkeleton>&
AiScene::_internal_skeletons() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.skeletons_;
}
inline ::google::protobuf::RepeatedPtrField<::pb_msg::AiSkeleton>*
AiScene::_internal_mutable_skeletons() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.skeletons_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb_msg


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5fscene_2eproto_2epb_2eh
