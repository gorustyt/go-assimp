// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/pb_msg/ai_skeleton.proto

#include "common/pb_msg/ai_skeleton.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace pb_msg {
        template <typename>
PROTOBUF_CONSTEXPR AiSkeleton::AiSkeleton(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.bones_)*/ {},
      /*decltype(_impl_.name_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AiSkeletonDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AiSkeletonDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AiSkeletonDefaultTypeInternal() {}
  union {
    AiSkeleton _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AiSkeletonDefaultTypeInternal _AiSkeleton_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AiSkeletonBone::AiSkeletonBone(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_._has_bits_)*/ {},
      /*decltype(_impl_._cached_size_)*/ {},
      /*decltype(_impl_.armature_)*/ {},
      /*decltype(_impl_.node_)*/ {},
      /*decltype(_impl_.meshid_)*/ {},
      /*decltype(_impl_.weights_)*/ {},
      /*decltype(_impl_.offsetmatrix_)*/ nullptr,
      /*decltype(_impl_.localmatrix_)*/ nullptr,
      /*decltype(_impl_.parent_)*/ 0,
    } {}
struct AiSkeletonBoneDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AiSkeletonBoneDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AiSkeletonBoneDefaultTypeInternal() {}
  union {
    AiSkeletonBone _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AiSkeletonBoneDefaultTypeInternal _AiSkeletonBone_default_instance_;
}  // namespace pb_msg
static ::_pb::Metadata file_level_metadata_common_2fpb_5fmsg_2fai_5fskeleton_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_common_2fpb_5fmsg_2fai_5fskeleton_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2fpb_5fmsg_2fai_5fskeleton_2eproto = nullptr;
const ::uint32_t TableStruct_common_2fpb_5fmsg_2fai_5fskeleton_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiSkeleton, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiSkeleton, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiSkeleton, _impl_.bones_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiSkeletonBone, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiSkeletonBone, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiSkeletonBone, _impl_.parent_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiSkeletonBone, _impl_.armature_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiSkeletonBone, _impl_.node_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiSkeletonBone, _impl_.meshid_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiSkeletonBone, _impl_.weights_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiSkeletonBone, _impl_.offsetmatrix_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiSkeletonBone, _impl_.localmatrix_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    1,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::pb_msg::AiSkeleton)},
        {10, 25, -1, sizeof(::pb_msg::AiSkeletonBone)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::pb_msg::_AiSkeleton_default_instance_._instance,
    &::pb_msg::_AiSkeletonBone_default_instance_._instance,
};
const char descriptor_table_protodef_common_2fpb_5fmsg_2fai_5fskeleton_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\037common/pb_msg/ai_skeleton.proto\022\006pb_ms"
    "g\032\032common/pb_msg/common.proto\032\033common/pb"
    "_msg/ai_node.proto\032$common/pb_msg/ai_ver"
    "tex_weight.proto\032\033common/pb_msg/ai_mesh."
    "proto\"A\n\nAiSkeleton\022\014\n\004Name\030\001 \001(\t\022%\n\005Bon"
    "es\030\002 \003(\0132\026.pb_msg.AiSkeletonBone\"\376\001\n\016AiS"
    "keletonBone\022\016\n\006Parent\030\001 \001(\005\022 \n\010Armature\030"
    "\002 \003(\0132\016.pb_msg.AiNode\022\034\n\004Node\030\003 \003(\0132\016.pb"
    "_msg.AiNode\022\036\n\006MeshId\030\005 \003(\0132\016.pb_msg.AiM"
    "esh\022\'\n\007Weights\030\006 \003(\0132\026.pb_msg.AiVertexWe"
    "ight\022)\n\014OffsetMatrix\030\007 \001(\0132\023.pb_msg.AiMa"
    "trix4x4\022(\n\013LocalMatrix\030\010 \001(\0132\023.pb_msg.Ai"
    "Matrix4x4B\017Z\rcommon/pb_msgb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_common_2fpb_5fmsg_2fai_5fskeleton_2eproto_deps[4] =
    {
        &::descriptor_table_common_2fpb_5fmsg_2fai_5fmesh_2eproto,
        &::descriptor_table_common_2fpb_5fmsg_2fai_5fnode_2eproto,
        &::descriptor_table_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto,
        &::descriptor_table_common_2fpb_5fmsg_2fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_common_2fpb_5fmsg_2fai_5fskeleton_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_common_2fpb_5fmsg_2fai_5fskeleton_2eproto = {
    false,
    false,
    514,
    descriptor_table_protodef_common_2fpb_5fmsg_2fai_5fskeleton_2eproto,
    "common/pb_msg/ai_skeleton.proto",
    &descriptor_table_common_2fpb_5fmsg_2fai_5fskeleton_2eproto_once,
    descriptor_table_common_2fpb_5fmsg_2fai_5fskeleton_2eproto_deps,
    4,
    2,
    schemas,
    file_default_instances,
    TableStruct_common_2fpb_5fmsg_2fai_5fskeleton_2eproto::offsets,
    file_level_metadata_common_2fpb_5fmsg_2fai_5fskeleton_2eproto,
    file_level_enum_descriptors_common_2fpb_5fmsg_2fai_5fskeleton_2eproto,
    file_level_service_descriptors_common_2fpb_5fmsg_2fai_5fskeleton_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_common_2fpb_5fmsg_2fai_5fskeleton_2eproto_getter() {
  return &descriptor_table_common_2fpb_5fmsg_2fai_5fskeleton_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_common_2fpb_5fmsg_2fai_5fskeleton_2eproto(&descriptor_table_common_2fpb_5fmsg_2fai_5fskeleton_2eproto);
namespace pb_msg {
// ===================================================================

class AiSkeleton::_Internal {
 public:
};

AiSkeleton::AiSkeleton(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb_msg.AiSkeleton)
}
AiSkeleton::AiSkeleton(const AiSkeleton& from) : ::google::protobuf::Message() {
  AiSkeleton* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.bones_){from._impl_.bones_},
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), _this->GetArenaForAllocation());
  }

  // @@protoc_insertion_point(copy_constructor:pb_msg.AiSkeleton)
}
inline void AiSkeleton::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.bones_){arena},
      decltype(_impl_.name_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.name_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
AiSkeleton::~AiSkeleton() {
  // @@protoc_insertion_point(destructor:pb_msg.AiSkeleton)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AiSkeleton::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.bones_.~RepeatedPtrField();
  _impl_.name_.Destroy();
}
void AiSkeleton::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AiSkeleton::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_msg.AiSkeleton)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_bones()->Clear();
  _impl_.name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AiSkeleton::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 30, 2> AiSkeleton::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AiSkeleton_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .pb_msg.AiSkeletonBone Bones = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AiSkeleton, _impl_.bones_)}},
    // string Name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(AiSkeleton, _impl_.name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string Name = 1;
    {PROTOBUF_FIELD_OFFSET(AiSkeleton, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .pb_msg.AiSkeletonBone Bones = 2;
    {PROTOBUF_FIELD_OFFSET(AiSkeleton, _impl_.bones_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::pb_msg::AiSkeletonBone>()},
  }}, {{
    "\21\4\0\0\0\0\0\0"
    "pb_msg.AiSkeleton"
    "Name"
  }},
};

::uint8_t* AiSkeleton::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_msg.AiSkeleton)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string Name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pb_msg.AiSkeleton.Name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .pb_msg.AiSkeletonBone Bones = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_bones_size()); i < n; i++) {
    const auto& repfield = this->_internal_bones().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb_msg.AiSkeleton)
  return target;
}

::size_t AiSkeleton::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_msg.AiSkeleton)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb_msg.AiSkeletonBone Bones = 2;
  total_size += 1UL * this->_internal_bones_size();
  for (const auto& msg : this->_internal_bones()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string Name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AiSkeleton::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AiSkeleton::MergeImpl
};
const ::google::protobuf::Message::ClassData*AiSkeleton::GetClassData() const { return &_class_data_; }


void AiSkeleton::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AiSkeleton*>(&to_msg);
  auto& from = static_cast<const AiSkeleton&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb_msg.AiSkeleton)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_bones()->MergeFrom(from._internal_bones());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AiSkeleton::CopyFrom(const AiSkeleton& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_msg.AiSkeleton)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AiSkeleton::IsInitialized() const {
  return true;
}

void AiSkeleton::InternalSwap(AiSkeleton* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.bones_.InternalSwap(&other->_impl_.bones_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, lhs_arena,
                                       &other->_impl_.name_, rhs_arena);
}

::google::protobuf::Metadata AiSkeleton::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fpb_5fmsg_2fai_5fskeleton_2eproto_getter, &descriptor_table_common_2fpb_5fmsg_2fai_5fskeleton_2eproto_once,
      file_level_metadata_common_2fpb_5fmsg_2fai_5fskeleton_2eproto[0]);
}
// ===================================================================

class AiSkeletonBone::_Internal {
 public:
  using HasBits = decltype(std::declval<AiSkeletonBone>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_._has_bits_);
  static const ::pb_msg::AiMatrix4x4& offsetmatrix(const AiSkeletonBone* msg);
  static void set_has_offsetmatrix(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::pb_msg::AiMatrix4x4& localmatrix(const AiSkeletonBone* msg);
  static void set_has_localmatrix(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::pb_msg::AiMatrix4x4& AiSkeletonBone::_Internal::offsetmatrix(const AiSkeletonBone* msg) {
  return *msg->_impl_.offsetmatrix_;
}
const ::pb_msg::AiMatrix4x4& AiSkeletonBone::_Internal::localmatrix(const AiSkeletonBone* msg) {
  return *msg->_impl_.localmatrix_;
}
void AiSkeletonBone::clear_armature() {
  _internal_mutable_armature()->Clear();
}
void AiSkeletonBone::clear_node() {
  _internal_mutable_node()->Clear();
}
void AiSkeletonBone::clear_meshid() {
  _internal_mutable_meshid()->Clear();
}
void AiSkeletonBone::clear_weights() {
  _internal_mutable_weights()->Clear();
}
void AiSkeletonBone::clear_offsetmatrix() {
  if (_impl_.offsetmatrix_ != nullptr) _impl_.offsetmatrix_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void AiSkeletonBone::clear_localmatrix() {
  if (_impl_.localmatrix_ != nullptr) _impl_.localmatrix_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
AiSkeletonBone::AiSkeletonBone(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb_msg.AiSkeletonBone)
}
AiSkeletonBone::AiSkeletonBone(const AiSkeletonBone& from) : ::google::protobuf::Message() {
  AiSkeletonBone* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.armature_){from._impl_.armature_},
      decltype(_impl_.node_){from._impl_.node_},
      decltype(_impl_.meshid_){from._impl_.meshid_},
      decltype(_impl_.weights_){from._impl_.weights_},
      decltype(_impl_.offsetmatrix_){nullptr},
      decltype(_impl_.localmatrix_){nullptr},
      decltype(_impl_.parent_){},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_impl_.offsetmatrix_ = new ::pb_msg::AiMatrix4x4(*from._impl_.offsetmatrix_);
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_impl_.localmatrix_ = new ::pb_msg::AiMatrix4x4(*from._impl_.localmatrix_);
  }
  _this->_impl_.parent_ = from._impl_.parent_;

  // @@protoc_insertion_point(copy_constructor:pb_msg.AiSkeletonBone)
}
inline void AiSkeletonBone::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){},
      /*decltype(_impl_._cached_size_)*/ {},
      decltype(_impl_.armature_){arena},
      decltype(_impl_.node_){arena},
      decltype(_impl_.meshid_){arena},
      decltype(_impl_.weights_){arena},
      decltype(_impl_.offsetmatrix_){nullptr},
      decltype(_impl_.localmatrix_){nullptr},
      decltype(_impl_.parent_){0},
  };
}
AiSkeletonBone::~AiSkeletonBone() {
  // @@protoc_insertion_point(destructor:pb_msg.AiSkeletonBone)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AiSkeletonBone::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.armature_.~RepeatedPtrField();
  _impl_.node_.~RepeatedPtrField();
  _impl_.meshid_.~RepeatedPtrField();
  _impl_.weights_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.offsetmatrix_;
  if (this != internal_default_instance()) delete _impl_.localmatrix_;
}
void AiSkeletonBone::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AiSkeletonBone::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_msg.AiSkeletonBone)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_armature()->Clear();
  _internal_mutable_node()->Clear();
  _internal_mutable_meshid()->Clear();
  _internal_mutable_weights()->Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.offsetmatrix_ != nullptr);
      _impl_.offsetmatrix_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.localmatrix_ != nullptr);
      _impl_.localmatrix_->Clear();
    }
  }
  _impl_.parent_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AiSkeletonBone::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 6, 0, 2> AiSkeletonBone::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967048,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AiSkeletonBone_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .pb_msg.AiMatrix4x4 LocalMatrix = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 1, 5, PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.localmatrix_)}},
    // int32 Parent = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AiSkeletonBone, _impl_.parent_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.parent_)}},
    // repeated .pb_msg.AiNode Armature = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.armature_)}},
    // repeated .pb_msg.AiNode Node = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.node_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .pb_msg.AiMesh MeshId = 5;
    {::_pbi::TcParser::FastMtR1,
     {42, 63, 2, PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.meshid_)}},
    // repeated .pb_msg.AiVertexWeight Weights = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 3, PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.weights_)}},
    // .pb_msg.AiMatrix4x4 OffsetMatrix = 7;
    {::_pbi::TcParser::FastMtS1,
     {58, 0, 4, PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.offsetmatrix_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 Parent = 1;
    {PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.parent_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .pb_msg.AiNode Armature = 2;
    {PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.armature_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .pb_msg.AiNode Node = 3;
    {PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.node_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .pb_msg.AiMesh MeshId = 5;
    {PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.meshid_), -1, 2,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .pb_msg.AiVertexWeight Weights = 6;
    {PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.weights_), -1, 3,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .pb_msg.AiMatrix4x4 OffsetMatrix = 7;
    {PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.offsetmatrix_), _Internal::kHasBitsOffset + 0, 4,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .pb_msg.AiMatrix4x4 LocalMatrix = 8;
    {PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.localmatrix_), _Internal::kHasBitsOffset + 1, 5,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::pb_msg::AiNode>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiNode>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiMesh>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiVertexWeight>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiMatrix4x4>()},
    {::_pbi::TcParser::GetTable<::pb_msg::AiMatrix4x4>()},
  }}, {{
  }},
};

::uint8_t* AiSkeletonBone::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_msg.AiSkeletonBone)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 Parent = 1;
  if (this->_internal_parent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_parent(), target);
  }

  // repeated .pb_msg.AiNode Armature = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_armature_size()); i < n; i++) {
    const auto& repfield = this->_internal_armature().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .pb_msg.AiNode Node = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_node_size()); i < n; i++) {
    const auto& repfield = this->_internal_node().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .pb_msg.AiMesh MeshId = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_meshid_size()); i < n; i++) {
    const auto& repfield = this->_internal_meshid().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .pb_msg.AiVertexWeight Weights = 6;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_weights_size()); i < n; i++) {
    const auto& repfield = this->_internal_weights().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(6, repfield, repfield.GetCachedSize(), target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .pb_msg.AiMatrix4x4 OffsetMatrix = 7;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::offsetmatrix(this),
        _Internal::offsetmatrix(this).GetCachedSize(), target, stream);
  }

  // .pb_msg.AiMatrix4x4 LocalMatrix = 8;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessage(8, _Internal::localmatrix(this),
        _Internal::localmatrix(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb_msg.AiSkeletonBone)
  return target;
}

::size_t AiSkeletonBone::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_msg.AiSkeletonBone)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb_msg.AiNode Armature = 2;
  total_size += 1UL * this->_internal_armature_size();
  for (const auto& msg : this->_internal_armature()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .pb_msg.AiNode Node = 3;
  total_size += 1UL * this->_internal_node_size();
  for (const auto& msg : this->_internal_node()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .pb_msg.AiMesh MeshId = 5;
  total_size += 1UL * this->_internal_meshid_size();
  for (const auto& msg : this->_internal_meshid()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // repeated .pb_msg.AiVertexWeight Weights = 6;
  total_size += 1UL * this->_internal_weights_size();
  for (const auto& msg : this->_internal_weights()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .pb_msg.AiMatrix4x4 OffsetMatrix = 7;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.offsetmatrix_);
    }

    // .pb_msg.AiMatrix4x4 LocalMatrix = 8;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *_impl_.localmatrix_);
    }

  }
  // int32 Parent = 1;
  if (this->_internal_parent() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_parent());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AiSkeletonBone::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AiSkeletonBone::MergeImpl
};
const ::google::protobuf::Message::ClassData*AiSkeletonBone::GetClassData() const { return &_class_data_; }


void AiSkeletonBone::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AiSkeletonBone*>(&to_msg);
  auto& from = static_cast<const AiSkeletonBone&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb_msg.AiSkeletonBone)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_armature()->MergeFrom(from._internal_armature());
  _this->_internal_mutable_node()->MergeFrom(from._internal_node());
  _this->_internal_mutable_meshid()->MergeFrom(from._internal_meshid());
  _this->_internal_mutable_weights()->MergeFrom(from._internal_weights());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_offsetmatrix()->::pb_msg::AiMatrix4x4::MergeFrom(
          from._internal_offsetmatrix());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_localmatrix()->::pb_msg::AiMatrix4x4::MergeFrom(
          from._internal_localmatrix());
    }
  }
  if (from._internal_parent() != 0) {
    _this->_internal_set_parent(from._internal_parent());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AiSkeletonBone::CopyFrom(const AiSkeletonBone& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_msg.AiSkeletonBone)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AiSkeletonBone::IsInitialized() const {
  return true;
}

void AiSkeletonBone::InternalSwap(AiSkeletonBone* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.armature_.InternalSwap(&other->_impl_.armature_);
  _impl_.node_.InternalSwap(&other->_impl_.node_);
  _impl_.meshid_.InternalSwap(&other->_impl_.meshid_);
  _impl_.weights_.InternalSwap(&other->_impl_.weights_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.parent_)
      + sizeof(AiSkeletonBone::_impl_.parent_)
      - PROTOBUF_FIELD_OFFSET(AiSkeletonBone, _impl_.offsetmatrix_)>(
          reinterpret_cast<char*>(&_impl_.offsetmatrix_),
          reinterpret_cast<char*>(&other->_impl_.offsetmatrix_));
}

::google::protobuf::Metadata AiSkeletonBone::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fpb_5fmsg_2fai_5fskeleton_2eproto_getter, &descriptor_table_common_2fpb_5fmsg_2fai_5fskeleton_2eproto_once,
      file_level_metadata_common_2fpb_5fmsg_2fai_5fskeleton_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace pb_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
