// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/pb_msg/ai_texture.proto

#include "common/pb_msg/ai_texture.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace pb_msg {
        template <typename>
PROTOBUF_CONSTEXPR AiTexture::AiTexture(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.pcdata_)*/ {},
      /*decltype(_impl_.achformathint_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.filename_)*/ {
          &::_pbi::fixed_address_empty_string,
          ::_pbi::ConstantInitialized{},
      },
      /*decltype(_impl_.width_)*/ 0u,
      /*decltype(_impl_.height_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AiTextureDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AiTextureDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AiTextureDefaultTypeInternal() {}
  union {
    AiTexture _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AiTextureDefaultTypeInternal _AiTexture_default_instance_;
        template <typename>
PROTOBUF_CONSTEXPR AiTexel::AiTexel(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.b_)*/ 0u,
      /*decltype(_impl_.g_)*/ 0u,
      /*decltype(_impl_.r_)*/ 0u,
      /*decltype(_impl_.a_)*/ 0u,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AiTexelDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AiTexelDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AiTexelDefaultTypeInternal() {}
  union {
    AiTexel _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AiTexelDefaultTypeInternal _AiTexel_default_instance_;
}  // namespace pb_msg
static ::_pb::Metadata file_level_metadata_common_2fpb_5fmsg_2fai_5ftexture_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_common_2fpb_5fmsg_2fai_5ftexture_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2fpb_5fmsg_2fai_5ftexture_2eproto = nullptr;
const ::uint32_t TableStruct_common_2fpb_5fmsg_2fai_5ftexture_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiTexture, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiTexture, _impl_.width_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiTexture, _impl_.height_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiTexture, _impl_.achformathint_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiTexture, _impl_.pcdata_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiTexture, _impl_.filename_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiTexel, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiTexel, _impl_.b_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiTexel, _impl_.g_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiTexel, _impl_.r_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiTexel, _impl_.a_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::pb_msg::AiTexture)},
        {13, -1, -1, sizeof(::pb_msg::AiTexel)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::pb_msg::_AiTexture_default_instance_._instance,
    &::pb_msg::_AiTexel_default_instance_._instance,
};
const char descriptor_table_protodef_common_2fpb_5fmsg_2fai_5ftexture_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\036common/pb_msg/ai_texture.proto\022\006pb_msg"
    "\"t\n\tAiTexture\022\r\n\005Width\030\001 \001(\r\022\016\n\006Height\030\002"
    " \001(\r\022\025\n\rAchFormatHint\030\003 \001(\014\022\037\n\006pcData\030\004 "
    "\003(\0132\017.pb_msg.AiTexel\022\020\n\010Filename\030\005 \001(\t\"5"
    "\n\007AiTexel\022\t\n\001B\030\001 \001(\r\022\t\n\001G\030\002 \001(\r\022\t\n\001R\030\003 \001"
    "(\r\022\t\n\001A\030\004 \001(\rB\017Z\rcommon/pb_msgb\006proto3"
};
static ::absl::once_flag descriptor_table_common_2fpb_5fmsg_2fai_5ftexture_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_common_2fpb_5fmsg_2fai_5ftexture_2eproto = {
    false,
    false,
    238,
    descriptor_table_protodef_common_2fpb_5fmsg_2fai_5ftexture_2eproto,
    "common/pb_msg/ai_texture.proto",
    &descriptor_table_common_2fpb_5fmsg_2fai_5ftexture_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_common_2fpb_5fmsg_2fai_5ftexture_2eproto::offsets,
    file_level_metadata_common_2fpb_5fmsg_2fai_5ftexture_2eproto,
    file_level_enum_descriptors_common_2fpb_5fmsg_2fai_5ftexture_2eproto,
    file_level_service_descriptors_common_2fpb_5fmsg_2fai_5ftexture_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_common_2fpb_5fmsg_2fai_5ftexture_2eproto_getter() {
  return &descriptor_table_common_2fpb_5fmsg_2fai_5ftexture_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_common_2fpb_5fmsg_2fai_5ftexture_2eproto(&descriptor_table_common_2fpb_5fmsg_2fai_5ftexture_2eproto);
namespace pb_msg {
// ===================================================================

class AiTexture::_Internal {
 public:
};

AiTexture::AiTexture(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb_msg.AiTexture)
}
AiTexture::AiTexture(const AiTexture& from) : ::google::protobuf::Message() {
  AiTexture* const _this = this;
  (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.pcdata_){from._impl_.pcdata_},
      decltype(_impl_.achformathint_){},
      decltype(_impl_.filename_){},
      decltype(_impl_.width_){},
      decltype(_impl_.height_){},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  _impl_.achformathint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.achformathint_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_achformathint().empty()) {
    _this->_impl_.achformathint_.Set(from._internal_achformathint(), _this->GetArenaForAllocation());
  }
  _impl_.filename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.filename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_filename().empty()) {
    _this->_impl_.filename_.Set(from._internal_filename(), _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.width_, &from._impl_.width_,
    static_cast<::size_t>(reinterpret_cast<char*>(&_impl_.height_) -
    reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));

  // @@protoc_insertion_point(copy_constructor:pb_msg.AiTexture)
}
inline void AiTexture::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.pcdata_){arena},
      decltype(_impl_.achformathint_){},
      decltype(_impl_.filename_){},
      decltype(_impl_.width_){0u},
      decltype(_impl_.height_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
  _impl_.achformathint_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.achformathint_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.filename_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        _impl_.filename_.Set("", GetArenaForAllocation());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}
AiTexture::~AiTexture() {
  // @@protoc_insertion_point(destructor:pb_msg.AiTexture)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AiTexture::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.pcdata_.~RepeatedPtrField();
  _impl_.achformathint_.Destroy();
  _impl_.filename_.Destroy();
}
void AiTexture::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AiTexture::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_msg.AiTexture)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_mutable_pcdata()->Clear();
  _impl_.achformathint_.ClearToEmpty();
  _impl_.filename_.ClearToEmpty();
  ::memset(&_impl_.width_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.width_)) + sizeof(_impl_.height_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AiTexture::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 1, 33, 2> AiTexture::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_AiTexture_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 Width = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AiTexture, _impl_.width_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AiTexture, _impl_.width_)}},
    // uint32 Height = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AiTexture, _impl_.height_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AiTexture, _impl_.height_)}},
    // bytes AchFormatHint = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(AiTexture, _impl_.achformathint_)}},
    // repeated .pb_msg.AiTexel pcData = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(AiTexture, _impl_.pcdata_)}},
    // string Filename = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(AiTexture, _impl_.filename_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 Width = 1;
    {PROTOBUF_FIELD_OFFSET(AiTexture, _impl_.width_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 Height = 2;
    {PROTOBUF_FIELD_OFFSET(AiTexture, _impl_.height_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // bytes AchFormatHint = 3;
    {PROTOBUF_FIELD_OFFSET(AiTexture, _impl_.achformathint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .pb_msg.AiTexel pcData = 4;
    {PROTOBUF_FIELD_OFFSET(AiTexture, _impl_.pcdata_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string Filename = 5;
    {PROTOBUF_FIELD_OFFSET(AiTexture, _impl_.filename_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::pb_msg::AiTexel>()},
  }}, {{
    "\20\0\0\0\0\10\0\0"
    "pb_msg.AiTexture"
    "Filename"
  }},
};

::uint8_t* AiTexture::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_msg.AiTexture)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 Width = 1;
  if (this->_internal_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_width(), target);
  }

  // uint32 Height = 2;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_height(), target);
  }

  // bytes AchFormatHint = 3;
  if (!this->_internal_achformathint().empty()) {
    const std::string& _s = this->_internal_achformathint();
    target = stream->WriteBytesMaybeAliased(3, _s, target);
  }

  // repeated .pb_msg.AiTexel pcData = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_pcdata_size()); i < n; i++) {
    const auto& repfield = this->_internal_pcdata().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string Filename = 5;
  if (!this->_internal_filename().empty()) {
    const std::string& _s = this->_internal_filename();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "pb_msg.AiTexture.Filename");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb_msg.AiTexture)
  return target;
}

::size_t AiTexture::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_msg.AiTexture)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .pb_msg.AiTexel pcData = 4;
  total_size += 1UL * this->_internal_pcdata_size();
  for (const auto& msg : this->_internal_pcdata()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // bytes AchFormatHint = 3;
  if (!this->_internal_achformathint().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_achformathint());
  }

  // string Filename = 5;
  if (!this->_internal_filename().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_filename());
  }

  // uint32 Width = 1;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_width());
  }

  // uint32 Height = 2;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AiTexture::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AiTexture::MergeImpl
};
const ::google::protobuf::Message::ClassData*AiTexture::GetClassData() const { return &_class_data_; }


void AiTexture::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AiTexture*>(&to_msg);
  auto& from = static_cast<const AiTexture&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb_msg.AiTexture)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_pcdata()->MergeFrom(from._internal_pcdata());
  if (!from._internal_achformathint().empty()) {
    _this->_internal_set_achformathint(from._internal_achformathint());
  }
  if (!from._internal_filename().empty()) {
    _this->_internal_set_filename(from._internal_filename());
  }
  if (from._internal_width() != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AiTexture::CopyFrom(const AiTexture& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_msg.AiTexture)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AiTexture::IsInitialized() const {
  return true;
}

void AiTexture::InternalSwap(AiTexture* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.pcdata_.InternalSwap(&other->_impl_.pcdata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.achformathint_, lhs_arena,
                                       &other->_impl_.achformathint_, rhs_arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.filename_, lhs_arena,
                                       &other->_impl_.filename_, rhs_arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AiTexture, _impl_.height_)
      + sizeof(AiTexture::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(AiTexture, _impl_.width_)>(
          reinterpret_cast<char*>(&_impl_.width_),
          reinterpret_cast<char*>(&other->_impl_.width_));
}

::google::protobuf::Metadata AiTexture::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fpb_5fmsg_2fai_5ftexture_2eproto_getter, &descriptor_table_common_2fpb_5fmsg_2fai_5ftexture_2eproto_once,
      file_level_metadata_common_2fpb_5fmsg_2fai_5ftexture_2eproto[0]);
}
// ===================================================================

class AiTexel::_Internal {
 public:
};

AiTexel::AiTexel(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb_msg.AiTexel)
}
AiTexel::AiTexel(const AiTexel& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb_msg.AiTexel)
}
inline void AiTexel::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.b_){0u},
      decltype(_impl_.g_){0u},
      decltype(_impl_.r_){0u},
      decltype(_impl_.a_){0u},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
AiTexel::~AiTexel() {
  // @@protoc_insertion_point(destructor:pb_msg.AiTexel)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AiTexel::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void AiTexel::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AiTexel::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_msg.AiTexel)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.b_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.a_) -
      reinterpret_cast<char*>(&_impl_.b_)) + sizeof(_impl_.a_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AiTexel::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> AiTexel::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AiTexel_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // uint32 A = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AiTexel, _impl_.a_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(AiTexel, _impl_.a_)}},
    // uint32 B = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AiTexel, _impl_.b_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AiTexel, _impl_.b_)}},
    // uint32 G = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AiTexel, _impl_.g_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(AiTexel, _impl_.g_)}},
    // uint32 R = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AiTexel, _impl_.r_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(AiTexel, _impl_.r_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 B = 1;
    {PROTOBUF_FIELD_OFFSET(AiTexel, _impl_.b_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 G = 2;
    {PROTOBUF_FIELD_OFFSET(AiTexel, _impl_.g_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 R = 3;
    {PROTOBUF_FIELD_OFFSET(AiTexel, _impl_.r_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 A = 4;
    {PROTOBUF_FIELD_OFFSET(AiTexel, _impl_.a_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AiTexel::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_msg.AiTexel)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 B = 1;
  if (this->_internal_b() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_b(), target);
  }

  // uint32 G = 2;
  if (this->_internal_g() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_g(), target);
  }

  // uint32 R = 3;
  if (this->_internal_r() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_r(), target);
  }

  // uint32 A = 4;
  if (this->_internal_a() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        4, this->_internal_a(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb_msg.AiTexel)
  return target;
}

::size_t AiTexel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_msg.AiTexel)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 B = 1;
  if (this->_internal_b() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_b());
  }

  // uint32 G = 2;
  if (this->_internal_g() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_g());
  }

  // uint32 R = 3;
  if (this->_internal_r() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_r());
  }

  // uint32 A = 4;
  if (this->_internal_a() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_a());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AiTexel::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AiTexel::MergeImpl
};
const ::google::protobuf::Message::ClassData*AiTexel::GetClassData() const { return &_class_data_; }


void AiTexel::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AiTexel*>(&to_msg);
  auto& from = static_cast<const AiTexel&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb_msg.AiTexel)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_b() != 0) {
    _this->_internal_set_b(from._internal_b());
  }
  if (from._internal_g() != 0) {
    _this->_internal_set_g(from._internal_g());
  }
  if (from._internal_r() != 0) {
    _this->_internal_set_r(from._internal_r());
  }
  if (from._internal_a() != 0) {
    _this->_internal_set_a(from._internal_a());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AiTexel::CopyFrom(const AiTexel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_msg.AiTexel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AiTexel::IsInitialized() const {
  return true;
}

void AiTexel::InternalSwap(AiTexel* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AiTexel, _impl_.a_)
      + sizeof(AiTexel::_impl_.a_)
      - PROTOBUF_FIELD_OFFSET(AiTexel, _impl_.b_)>(
          reinterpret_cast<char*>(&_impl_.b_),
          reinterpret_cast<char*>(&other->_impl_.b_));
}

::google::protobuf::Metadata AiTexel::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fpb_5fmsg_2fai_5ftexture_2eproto_getter, &descriptor_table_common_2fpb_5fmsg_2fai_5ftexture_2eproto_once,
      file_level_metadata_common_2fpb_5fmsg_2fai_5ftexture_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace pb_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
