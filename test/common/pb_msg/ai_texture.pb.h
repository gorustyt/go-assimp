// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/pb_msg/ai_texture.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5ftexture_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5ftexture_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_common_2fpb_5fmsg_2fai_5ftexture_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_common_2fpb_5fmsg_2fai_5ftexture_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_common_2fpb_5fmsg_2fai_5ftexture_2eproto;
namespace pb_msg {
class AiTexel;
struct AiTexelDefaultTypeInternal;
extern AiTexelDefaultTypeInternal _AiTexel_default_instance_;
class AiTexture;
struct AiTextureDefaultTypeInternal;
extern AiTextureDefaultTypeInternal _AiTexture_default_instance_;
}  // namespace pb_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace pb_msg {

// ===================================================================


// -------------------------------------------------------------------

class AiTexture final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiTexture) */ {
 public:
  inline AiTexture() : AiTexture(nullptr) {}
  ~AiTexture() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiTexture(::google::protobuf::internal::ConstantInitialized);

  AiTexture(const AiTexture& from);
  AiTexture(AiTexture&& from) noexcept
    : AiTexture() {
    *this = ::std::move(from);
  }

  inline AiTexture& operator=(const AiTexture& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiTexture& operator=(AiTexture&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiTexture& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiTexture* internal_default_instance() {
    return reinterpret_cast<const AiTexture*>(
               &_AiTexture_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AiTexture& a, AiTexture& b) {
    a.Swap(&b);
  }
  inline void Swap(AiTexture* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiTexture* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiTexture* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiTexture>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiTexture& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiTexture& from) {
    AiTexture::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiTexture* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiTexture";
  }
  protected:
  explicit AiTexture(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPcDataFieldNumber = 4,
    kAchFormatHintFieldNumber = 3,
    kFilenameFieldNumber = 5,
    kWidthFieldNumber = 1,
    kHeightFieldNumber = 2,
  };
  // repeated .pb_msg.AiTexel pcData = 4;
  int pcdata_size() const;
  private:
  int _internal_pcdata_size() const;

  public:
  void clear_pcdata() ;
  ::pb_msg::AiTexel* mutable_pcdata(int index);
  ::google::protobuf::RepeatedPtrField< ::pb_msg::AiTexel >*
      mutable_pcdata();
  private:
  const ::google::protobuf::RepeatedPtrField<::pb_msg::AiTexel>& _internal_pcdata() const;
  ::google::protobuf::RepeatedPtrField<::pb_msg::AiTexel>* _internal_mutable_pcdata();
  public:
  const ::pb_msg::AiTexel& pcdata(int index) const;
  ::pb_msg::AiTexel* add_pcdata();
  const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiTexel >&
      pcdata() const;
  // bytes AchFormatHint = 3;
  void clear_achformathint() ;
  const std::string& achformathint() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_achformathint(Arg_&& arg, Args_... args);
  std::string* mutable_achformathint();
  PROTOBUF_NODISCARD std::string* release_achformathint();
  void set_allocated_achformathint(std::string* ptr);

  private:
  const std::string& _internal_achformathint() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_achformathint(
      const std::string& value);
  std::string* _internal_mutable_achformathint();

  public:
  // string Filename = 5;
  void clear_filename() ;
  const std::string& filename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filename(Arg_&& arg, Args_... args);
  std::string* mutable_filename();
  PROTOBUF_NODISCARD std::string* release_filename();
  void set_allocated_filename(std::string* ptr);

  private:
  const std::string& _internal_filename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filename(
      const std::string& value);
  std::string* _internal_mutable_filename();

  public:
  // uint32 Width = 1;
  void clear_width() ;
  ::uint32_t width() const;
  void set_width(::uint32_t value);

  private:
  ::uint32_t _internal_width() const;
  void _internal_set_width(::uint32_t value);

  public:
  // uint32 Height = 2;
  void clear_height() ;
  ::uint32_t height() const;
  void set_height(::uint32_t value);

  private:
  ::uint32_t _internal_height() const;
  void _internal_set_height(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiTexture)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 5, 1, 33, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::RepeatedPtrField< ::pb_msg::AiTexel > pcdata_;
    ::google::protobuf::internal::ArenaStringPtr achformathint_;
    ::google::protobuf::internal::ArenaStringPtr filename_;
    ::uint32_t width_;
    ::uint32_t height_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fai_5ftexture_2eproto;
};// -------------------------------------------------------------------

class AiTexel final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiTexel) */ {
 public:
  inline AiTexel() : AiTexel(nullptr) {}
  ~AiTexel() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiTexel(::google::protobuf::internal::ConstantInitialized);

  AiTexel(const AiTexel& from);
  AiTexel(AiTexel&& from) noexcept
    : AiTexel() {
    *this = ::std::move(from);
  }

  inline AiTexel& operator=(const AiTexel& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiTexel& operator=(AiTexel&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiTexel& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiTexel* internal_default_instance() {
    return reinterpret_cast<const AiTexel*>(
               &_AiTexel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AiTexel& a, AiTexel& b) {
    a.Swap(&b);
  }
  inline void Swap(AiTexel* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiTexel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiTexel* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiTexel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiTexel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiTexel& from) {
    AiTexel::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiTexel* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiTexel";
  }
  protected:
  explicit AiTexel(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBFieldNumber = 1,
    kGFieldNumber = 2,
    kRFieldNumber = 3,
    kAFieldNumber = 4,
  };
  // uint32 B = 1;
  void clear_b() ;
  ::uint32_t b() const;
  void set_b(::uint32_t value);

  private:
  ::uint32_t _internal_b() const;
  void _internal_set_b(::uint32_t value);

  public:
  // uint32 G = 2;
  void clear_g() ;
  ::uint32_t g() const;
  void set_g(::uint32_t value);

  private:
  ::uint32_t _internal_g() const;
  void _internal_set_g(::uint32_t value);

  public:
  // uint32 R = 3;
  void clear_r() ;
  ::uint32_t r() const;
  void set_r(::uint32_t value);

  private:
  ::uint32_t _internal_r() const;
  void _internal_set_r(::uint32_t value);

  public:
  // uint32 A = 4;
  void clear_a() ;
  ::uint32_t a() const;
  void set_a(::uint32_t value);

  private:
  ::uint32_t _internal_a() const;
  void _internal_set_a(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiTexel)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::uint32_t b_;
    ::uint32_t g_;
    ::uint32_t r_;
    ::uint32_t a_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fai_5ftexture_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AiTexture

// uint32 Width = 1;
inline void AiTexture::clear_width() {
  _impl_.width_ = 0u;
}
inline ::uint32_t AiTexture::width() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiTexture.Width)
  return _internal_width();
}
inline void AiTexture::set_width(::uint32_t value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiTexture.Width)
}
inline ::uint32_t AiTexture::_internal_width() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.width_;
}
inline void AiTexture::_internal_set_width(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.width_ = value;
}

// uint32 Height = 2;
inline void AiTexture::clear_height() {
  _impl_.height_ = 0u;
}
inline ::uint32_t AiTexture::height() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiTexture.Height)
  return _internal_height();
}
inline void AiTexture::set_height(::uint32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiTexture.Height)
}
inline ::uint32_t AiTexture::_internal_height() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.height_;
}
inline void AiTexture::_internal_set_height(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.height_ = value;
}

// bytes AchFormatHint = 3;
inline void AiTexture::clear_achformathint() {
  _impl_.achformathint_.ClearToEmpty();
}
inline const std::string& AiTexture::achformathint() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiTexture.AchFormatHint)
  return _internal_achformathint();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AiTexture::set_achformathint(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.achformathint_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:pb_msg.AiTexture.AchFormatHint)
}
inline std::string* AiTexture::mutable_achformathint() {
  std::string* _s = _internal_mutable_achformathint();
  // @@protoc_insertion_point(field_mutable:pb_msg.AiTexture.AchFormatHint)
  return _s;
}
inline const std::string& AiTexture::_internal_achformathint() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.achformathint_.Get();
}
inline void AiTexture::_internal_set_achformathint(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.achformathint_.Set(value, GetArenaForAllocation());
}
inline std::string* AiTexture::_internal_mutable_achformathint() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.achformathint_.Mutable( GetArenaForAllocation());
}
inline std::string* AiTexture::release_achformathint() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_msg.AiTexture.AchFormatHint)
  return _impl_.achformathint_.Release();
}
inline void AiTexture::set_allocated_achformathint(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.achformathint_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.achformathint_.IsDefault()) {
          _impl_.achformathint_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:pb_msg.AiTexture.AchFormatHint)
}

// repeated .pb_msg.AiTexel pcData = 4;
inline int AiTexture::_internal_pcdata_size() const {
  return _internal_pcdata().size();
}
inline int AiTexture::pcdata_size() const {
  return _internal_pcdata_size();
}
inline void AiTexture::clear_pcdata() {
  _internal_mutable_pcdata()->Clear();
}
inline ::pb_msg::AiTexel* AiTexture::mutable_pcdata(int index) {
  // @@protoc_insertion_point(field_mutable:pb_msg.AiTexture.pcData)
  return _internal_mutable_pcdata()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::pb_msg::AiTexel >*
AiTexture::mutable_pcdata() {
  // @@protoc_insertion_point(field_mutable_list:pb_msg.AiTexture.pcData)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_pcdata();
}
inline const ::pb_msg::AiTexel& AiTexture::pcdata(int index) const {
  // @@protoc_insertion_point(field_get:pb_msg.AiTexture.pcData)
    return _internal_pcdata().Get(index);
}
inline ::pb_msg::AiTexel* AiTexture::add_pcdata() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::pb_msg::AiTexel* _add = _internal_mutable_pcdata()->Add();
  // @@protoc_insertion_point(field_add:pb_msg.AiTexture.pcData)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField< ::pb_msg::AiTexel >&
AiTexture::pcdata() const {
  // @@protoc_insertion_point(field_list:pb_msg.AiTexture.pcData)
  return _internal_pcdata();
}
inline const ::google::protobuf::RepeatedPtrField<::pb_msg::AiTexel>&
AiTexture::_internal_pcdata() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.pcdata_;
}
inline ::google::protobuf::RepeatedPtrField<::pb_msg::AiTexel>*
AiTexture::_internal_mutable_pcdata() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.pcdata_;
}

// string Filename = 5;
inline void AiTexture::clear_filename() {
  _impl_.filename_.ClearToEmpty();
}
inline const std::string& AiTexture::filename() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiTexture.Filename)
  return _internal_filename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AiTexture::set_filename(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.filename_.Set(static_cast<Arg_&&>(arg), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:pb_msg.AiTexture.Filename)
}
inline std::string* AiTexture::mutable_filename() {
  std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:pb_msg.AiTexture.Filename)
  return _s;
}
inline const std::string& AiTexture::_internal_filename() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.filename_.Get();
}
inline void AiTexture::_internal_set_filename(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.filename_.Set(value, GetArenaForAllocation());
}
inline std::string* AiTexture::_internal_mutable_filename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.filename_.Mutable( GetArenaForAllocation());
}
inline std::string* AiTexture::release_filename() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_msg.AiTexture.Filename)
  return _impl_.filename_.Release();
}
inline void AiTexture::set_allocated_filename(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.filename_.SetAllocated(value, GetArenaForAllocation());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.filename_.IsDefault()) {
          _impl_.filename_.Set("", GetArenaForAllocation());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:pb_msg.AiTexture.Filename)
}

// -------------------------------------------------------------------

// AiTexel

// uint32 B = 1;
inline void AiTexel::clear_b() {
  _impl_.b_ = 0u;
}
inline ::uint32_t AiTexel::b() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiTexel.B)
  return _internal_b();
}
inline void AiTexel::set_b(::uint32_t value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiTexel.B)
}
inline ::uint32_t AiTexel::_internal_b() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.b_;
}
inline void AiTexel::_internal_set_b(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.b_ = value;
}

// uint32 G = 2;
inline void AiTexel::clear_g() {
  _impl_.g_ = 0u;
}
inline ::uint32_t AiTexel::g() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiTexel.G)
  return _internal_g();
}
inline void AiTexel::set_g(::uint32_t value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiTexel.G)
}
inline ::uint32_t AiTexel::_internal_g() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.g_;
}
inline void AiTexel::_internal_set_g(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.g_ = value;
}

// uint32 R = 3;
inline void AiTexel::clear_r() {
  _impl_.r_ = 0u;
}
inline ::uint32_t AiTexel::r() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiTexel.R)
  return _internal_r();
}
inline void AiTexel::set_r(::uint32_t value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiTexel.R)
}
inline ::uint32_t AiTexel::_internal_r() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.r_;
}
inline void AiTexel::_internal_set_r(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.r_ = value;
}

// uint32 A = 4;
inline void AiTexel::clear_a() {
  _impl_.a_ = 0u;
}
inline ::uint32_t AiTexel::a() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiTexel.A)
  return _internal_a();
}
inline void AiTexel::set_a(::uint32_t value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiTexel.A)
}
inline ::uint32_t AiTexel::_internal_a() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.a_;
}
inline void AiTexel::_internal_set_a(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.a_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb_msg


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fai_5ftexture_2eproto_2epb_2eh
