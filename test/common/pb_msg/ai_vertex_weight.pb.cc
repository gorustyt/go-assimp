// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/pb_msg/ai_vertex_weight.proto

#include "common/pb_msg/ai_vertex_weight.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace pb_msg {
        template <typename>
PROTOBUF_CONSTEXPR AiVertexWeight::AiVertexWeight(::_pbi::ConstantInitialized)
    : _impl_{
      /*decltype(_impl_.vertexid_)*/ 0u,
      /*decltype(_impl_.weight_)*/ 0,
      /*decltype(_impl_._cached_size_)*/ {},
    } {}
struct AiVertexWeightDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AiVertexWeightDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AiVertexWeightDefaultTypeInternal() {}
  union {
    AiVertexWeight _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AiVertexWeightDefaultTypeInternal _AiVertexWeight_default_instance_;
}  // namespace pb_msg
static ::_pb::Metadata file_level_metadata_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto[1];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto = nullptr;
const ::uint32_t TableStruct_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiVertexWeight, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiVertexWeight, _impl_.vertexid_),
    PROTOBUF_FIELD_OFFSET(::pb_msg::AiVertexWeight, _impl_.weight_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::pb_msg::AiVertexWeight)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::pb_msg::_AiVertexWeight_default_instance_._instance,
};
const char descriptor_table_protodef_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n$common/pb_msg/ai_vertex_weight.proto\022\006"
    "pb_msg\"2\n\016AiVertexWeight\022\020\n\010VertexId\030\001 \001"
    "(\r\022\016\n\006Weight\030\002 \001(\002B\017Z\rcommon/pb_msgb\006pro"
    "to3"
};
static ::absl::once_flag descriptor_table_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto = {
    false,
    false,
    123,
    descriptor_table_protodef_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto,
    "common/pb_msg/ai_vertex_weight.proto",
    &descriptor_table_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto::offsets,
    file_level_metadata_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto,
    file_level_enum_descriptors_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto,
    file_level_service_descriptors_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto_getter() {
  return &descriptor_table_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto(&descriptor_table_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto);
namespace pb_msg {
// ===================================================================

class AiVertexWeight::_Internal {
 public:
};

AiVertexWeight::AiVertexWeight(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:pb_msg.AiVertexWeight)
}
AiVertexWeight::AiVertexWeight(const AiVertexWeight& from)
    : ::google::protobuf::Message(), _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb_msg.AiVertexWeight)
}
inline void AiVertexWeight::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.vertexid_){0u},
      decltype(_impl_.weight_){0},
      /*decltype(_impl_._cached_size_)*/ {},
  };
}
AiVertexWeight::~AiVertexWeight() {
  // @@protoc_insertion_point(destructor:pb_msg.AiVertexWeight)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void AiVertexWeight::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
}
void AiVertexWeight::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

PROTOBUF_NOINLINE void AiVertexWeight::Clear() {
// @@protoc_insertion_point(message_clear_start:pb_msg.AiVertexWeight)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.vertexid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.weight_) -
      reinterpret_cast<char*>(&_impl_.vertexid_)) + sizeof(_impl_.weight_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* AiVertexWeight::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> AiVertexWeight::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_AiVertexWeight_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // float Weight = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(AiVertexWeight, _impl_.weight_)}},
    // uint32 VertexId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(AiVertexWeight, _impl_.vertexid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(AiVertexWeight, _impl_.vertexid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 VertexId = 1;
    {PROTOBUF_FIELD_OFFSET(AiVertexWeight, _impl_.vertexid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // float Weight = 2;
    {PROTOBUF_FIELD_OFFSET(AiVertexWeight, _impl_.weight_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* AiVertexWeight::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb_msg.AiVertexWeight)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 VertexId = 1;
  if (this->_internal_vertexid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_vertexid(), target);
  }

  // float Weight = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_weight = this->_internal_weight();
  ::uint32_t raw_weight;
  memcpy(&raw_weight, &tmp_weight, sizeof(tmp_weight));
  if (raw_weight != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(
        2, this->_internal_weight(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb_msg.AiVertexWeight)
  return target;
}

::size_t AiVertexWeight::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb_msg.AiVertexWeight)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 VertexId = 1;
  if (this->_internal_vertexid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_vertexid());
  }

  // float Weight = 2;
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_weight = this->_internal_weight();
  ::uint32_t raw_weight;
  memcpy(&raw_weight, &tmp_weight, sizeof(tmp_weight));
  if (raw_weight != 0) {
    total_size += 5;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData AiVertexWeight::_class_data_ = {
    ::google::protobuf::Message::CopyWithSourceCheck,
    AiVertexWeight::MergeImpl
};
const ::google::protobuf::Message::ClassData*AiVertexWeight::GetClassData() const { return &_class_data_; }


void AiVertexWeight::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<AiVertexWeight*>(&to_msg);
  auto& from = static_cast<const AiVertexWeight&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:pb_msg.AiVertexWeight)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_vertexid() != 0) {
    _this->_internal_set_vertexid(from._internal_vertexid());
  }
  static_assert(sizeof(::uint32_t) == sizeof(float),
                "Code assumes ::uint32_t and float are the same size.");
  float tmp_weight = from._internal_weight();
  ::uint32_t raw_weight;
  memcpy(&raw_weight, &tmp_weight, sizeof(tmp_weight));
  if (raw_weight != 0) {
    _this->_internal_set_weight(from._internal_weight());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AiVertexWeight::CopyFrom(const AiVertexWeight& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb_msg.AiVertexWeight)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool AiVertexWeight::IsInitialized() const {
  return true;
}

void AiVertexWeight::InternalSwap(AiVertexWeight* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AiVertexWeight, _impl_.weight_)
      + sizeof(AiVertexWeight::_impl_.weight_)
      - PROTOBUF_FIELD_OFFSET(AiVertexWeight, _impl_.vertexid_)>(
          reinterpret_cast<char*>(&_impl_.vertexid_),
          reinterpret_cast<char*>(&other->_impl_.vertexid_));
}

::google::protobuf::Metadata AiVertexWeight::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto_getter, &descriptor_table_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto_once,
      file_level_metadata_common_2fpb_5fmsg_2fai_5fvertex_5fweight_2eproto[0]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace pb_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
