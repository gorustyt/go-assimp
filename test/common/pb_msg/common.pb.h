// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/pb_msg/common.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fcommon_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fcommon_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4024000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4024000 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_common_2fpb_5fmsg_2fcommon_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_common_2fpb_5fmsg_2fcommon_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_common_2fpb_5fmsg_2fcommon_2eproto;
namespace pb_msg {
class AiAABB;
struct AiAABBDefaultTypeInternal;
extern AiAABBDefaultTypeInternal _AiAABB_default_instance_;
class AiColor3D;
struct AiColor3DDefaultTypeInternal;
extern AiColor3DDefaultTypeInternal _AiColor3D_default_instance_;
class AiColor4D;
struct AiColor4DDefaultTypeInternal;
extern AiColor4DDefaultTypeInternal _AiColor4D_default_instance_;
class AiMatrix4x4;
struct AiMatrix4x4DefaultTypeInternal;
extern AiMatrix4x4DefaultTypeInternal _AiMatrix4x4_default_instance_;
class AiQuaternion;
struct AiQuaternionDefaultTypeInternal;
extern AiQuaternionDefaultTypeInternal _AiQuaternion_default_instance_;
class AiVector2D;
struct AiVector2DDefaultTypeInternal;
extern AiVector2DDefaultTypeInternal _AiVector2D_default_instance_;
class AiVector3D;
struct AiVector3DDefaultTypeInternal;
extern AiVector3DDefaultTypeInternal _AiVector3D_default_instance_;
class AiVector4D;
struct AiVector4DDefaultTypeInternal;
extern AiVector4DDefaultTypeInternal _AiVector4D_default_instance_;
}  // namespace pb_msg
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace pb_msg {

// ===================================================================


// -------------------------------------------------------------------

class AiVector2D final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiVector2D) */ {
 public:
  inline AiVector2D() : AiVector2D(nullptr) {}
  ~AiVector2D() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiVector2D(::google::protobuf::internal::ConstantInitialized);

  AiVector2D(const AiVector2D& from);
  AiVector2D(AiVector2D&& from) noexcept
    : AiVector2D() {
    *this = ::std::move(from);
  }

  inline AiVector2D& operator=(const AiVector2D& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiVector2D& operator=(AiVector2D&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiVector2D& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiVector2D* internal_default_instance() {
    return reinterpret_cast<const AiVector2D*>(
               &_AiVector2D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AiVector2D& a, AiVector2D& b) {
    a.Swap(&b);
  }
  inline void Swap(AiVector2D* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiVector2D* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiVector2D* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiVector2D>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiVector2D& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiVector2D& from) {
    AiVector2D::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiVector2D* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiVector2D";
  }
  protected:
  explicit AiVector2D(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
  };
  // float X = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float Y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiVector2D)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float x_;
    float y_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fcommon_2eproto;
};// -------------------------------------------------------------------

class AiVector3D final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiVector3D) */ {
 public:
  inline AiVector3D() : AiVector3D(nullptr) {}
  ~AiVector3D() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiVector3D(::google::protobuf::internal::ConstantInitialized);

  AiVector3D(const AiVector3D& from);
  AiVector3D(AiVector3D&& from) noexcept
    : AiVector3D() {
    *this = ::std::move(from);
  }

  inline AiVector3D& operator=(const AiVector3D& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiVector3D& operator=(AiVector3D&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiVector3D& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiVector3D* internal_default_instance() {
    return reinterpret_cast<const AiVector3D*>(
               &_AiVector3D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AiVector3D& a, AiVector3D& b) {
    a.Swap(&b);
  }
  inline void Swap(AiVector3D* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiVector3D* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiVector3D* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiVector3D>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiVector3D& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiVector3D& from) {
    AiVector3D::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiVector3D* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiVector3D";
  }
  protected:
  explicit AiVector3D(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
  };
  // float X = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float Y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float Z = 3;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiVector3D)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float x_;
    float y_;
    float z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fcommon_2eproto;
};// -------------------------------------------------------------------

class AiVector4D final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiVector4D) */ {
 public:
  inline AiVector4D() : AiVector4D(nullptr) {}
  ~AiVector4D() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiVector4D(::google::protobuf::internal::ConstantInitialized);

  AiVector4D(const AiVector4D& from);
  AiVector4D(AiVector4D&& from) noexcept
    : AiVector4D() {
    *this = ::std::move(from);
  }

  inline AiVector4D& operator=(const AiVector4D& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiVector4D& operator=(AiVector4D&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiVector4D& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiVector4D* internal_default_instance() {
    return reinterpret_cast<const AiVector4D*>(
               &_AiVector4D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(AiVector4D& a, AiVector4D& b) {
    a.Swap(&b);
  }
  inline void Swap(AiVector4D* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiVector4D* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiVector4D* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiVector4D>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiVector4D& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiVector4D& from) {
    AiVector4D::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiVector4D* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiVector4D";
  }
  protected:
  explicit AiVector4D(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kZFieldNumber = 3,
    kWFieldNumber = 4,
  };
  // float X = 1;
  void clear_x() ;
  float x() const;
  void set_x(float value);

  private:
  float _internal_x() const;
  void _internal_set_x(float value);

  public:
  // float Y = 2;
  void clear_y() ;
  float y() const;
  void set_y(float value);

  private:
  float _internal_y() const;
  void _internal_set_y(float value);

  public:
  // float Z = 3;
  void clear_z() ;
  float z() const;
  void set_z(float value);

  private:
  float _internal_z() const;
  void _internal_set_z(float value);

  public:
  // float W = 4;
  void clear_w() ;
  float w() const;
  void set_w(float value);

  private:
  float _internal_w() const;
  void _internal_set_w(float value);

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiVector4D)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float x_;
    float y_;
    float z_;
    float w_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fcommon_2eproto;
};// -------------------------------------------------------------------

class AiColor3D final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiColor3D) */ {
 public:
  inline AiColor3D() : AiColor3D(nullptr) {}
  ~AiColor3D() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiColor3D(::google::protobuf::internal::ConstantInitialized);

  AiColor3D(const AiColor3D& from);
  AiColor3D(AiColor3D&& from) noexcept
    : AiColor3D() {
    *this = ::std::move(from);
  }

  inline AiColor3D& operator=(const AiColor3D& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiColor3D& operator=(AiColor3D&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiColor3D& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiColor3D* internal_default_instance() {
    return reinterpret_cast<const AiColor3D*>(
               &_AiColor3D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(AiColor3D& a, AiColor3D& b) {
    a.Swap(&b);
  }
  inline void Swap(AiColor3D* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiColor3D* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiColor3D* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiColor3D>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiColor3D& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiColor3D& from) {
    AiColor3D::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiColor3D* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiColor3D";
  }
  protected:
  explicit AiColor3D(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRFieldNumber = 1,
    kGFieldNumber = 2,
    kBFieldNumber = 3,
  };
  // float R = 1;
  void clear_r() ;
  float r() const;
  void set_r(float value);

  private:
  float _internal_r() const;
  void _internal_set_r(float value);

  public:
  // float G = 2;
  void clear_g() ;
  float g() const;
  void set_g(float value);

  private:
  float _internal_g() const;
  void _internal_set_g(float value);

  public:
  // float B = 3;
  void clear_b() ;
  float b() const;
  void set_b(float value);

  private:
  float _internal_b() const;
  void _internal_set_b(float value);

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiColor3D)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float r_;
    float g_;
    float b_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fcommon_2eproto;
};// -------------------------------------------------------------------

class AiColor4D final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiColor4D) */ {
 public:
  inline AiColor4D() : AiColor4D(nullptr) {}
  ~AiColor4D() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiColor4D(::google::protobuf::internal::ConstantInitialized);

  AiColor4D(const AiColor4D& from);
  AiColor4D(AiColor4D&& from) noexcept
    : AiColor4D() {
    *this = ::std::move(from);
  }

  inline AiColor4D& operator=(const AiColor4D& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiColor4D& operator=(AiColor4D&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiColor4D& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiColor4D* internal_default_instance() {
    return reinterpret_cast<const AiColor4D*>(
               &_AiColor4D_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(AiColor4D& a, AiColor4D& b) {
    a.Swap(&b);
  }
  inline void Swap(AiColor4D* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiColor4D* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiColor4D* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiColor4D>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiColor4D& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiColor4D& from) {
    AiColor4D::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiColor4D* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiColor4D";
  }
  protected:
  explicit AiColor4D(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRFieldNumber = 1,
    kGFieldNumber = 2,
    kBFieldNumber = 3,
    kAFieldNumber = 4,
  };
  // float R = 1;
  void clear_r() ;
  float r() const;
  void set_r(float value);

  private:
  float _internal_r() const;
  void _internal_set_r(float value);

  public:
  // float G = 2;
  void clear_g() ;
  float g() const;
  void set_g(float value);

  private:
  float _internal_g() const;
  void _internal_set_g(float value);

  public:
  // float B = 3;
  void clear_b() ;
  float b() const;
  void set_b(float value);

  private:
  float _internal_b() const;
  void _internal_set_b(float value);

  public:
  // float A = 4;
  void clear_a() ;
  float a() const;
  void set_a(float value);

  private:
  float _internal_a() const;
  void _internal_set_a(float value);

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiColor4D)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float r_;
    float g_;
    float b_;
    float a_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fcommon_2eproto;
};// -------------------------------------------------------------------

class AiMatrix4x4 final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiMatrix4x4) */ {
 public:
  inline AiMatrix4x4() : AiMatrix4x4(nullptr) {}
  ~AiMatrix4x4() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiMatrix4x4(::google::protobuf::internal::ConstantInitialized);

  AiMatrix4x4(const AiMatrix4x4& from);
  AiMatrix4x4(AiMatrix4x4&& from) noexcept
    : AiMatrix4x4() {
    *this = ::std::move(from);
  }

  inline AiMatrix4x4& operator=(const AiMatrix4x4& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiMatrix4x4& operator=(AiMatrix4x4&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiMatrix4x4& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiMatrix4x4* internal_default_instance() {
    return reinterpret_cast<const AiMatrix4x4*>(
               &_AiMatrix4x4_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AiMatrix4x4& a, AiMatrix4x4& b) {
    a.Swap(&b);
  }
  inline void Swap(AiMatrix4x4* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiMatrix4x4* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiMatrix4x4* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiMatrix4x4>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiMatrix4x4& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiMatrix4x4& from) {
    AiMatrix4x4::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiMatrix4x4* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiMatrix4x4";
  }
  protected:
  explicit AiMatrix4x4(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kA1FieldNumber = 1,
    kA2FieldNumber = 2,
    kA3FieldNumber = 3,
    kA4FieldNumber = 4,
    kB1FieldNumber = 5,
    kB2FieldNumber = 6,
    kB3FieldNumber = 7,
    kB4FieldNumber = 8,
    kC1FieldNumber = 9,
    kC2FieldNumber = 10,
    kC3FieldNumber = 11,
    kC4FieldNumber = 12,
    kD1FieldNumber = 13,
    kD2FieldNumber = 14,
    kD3FieldNumber = 15,
    kD4FieldNumber = 16,
  };
  // float A1 = 1;
  void clear_a1() ;
  float a1() const;
  void set_a1(float value);

  private:
  float _internal_a1() const;
  void _internal_set_a1(float value);

  public:
  // float a2 = 2;
  void clear_a2() ;
  float a2() const;
  void set_a2(float value);

  private:
  float _internal_a2() const;
  void _internal_set_a2(float value);

  public:
  // float a3 = 3;
  void clear_a3() ;
  float a3() const;
  void set_a3(float value);

  private:
  float _internal_a3() const;
  void _internal_set_a3(float value);

  public:
  // float a4 = 4;
  void clear_a4() ;
  float a4() const;
  void set_a4(float value);

  private:
  float _internal_a4() const;
  void _internal_set_a4(float value);

  public:
  // float b1 = 5;
  void clear_b1() ;
  float b1() const;
  void set_b1(float value);

  private:
  float _internal_b1() const;
  void _internal_set_b1(float value);

  public:
  // float b2 = 6;
  void clear_b2() ;
  float b2() const;
  void set_b2(float value);

  private:
  float _internal_b2() const;
  void _internal_set_b2(float value);

  public:
  // float b3 = 7;
  void clear_b3() ;
  float b3() const;
  void set_b3(float value);

  private:
  float _internal_b3() const;
  void _internal_set_b3(float value);

  public:
  // float b4 = 8;
  void clear_b4() ;
  float b4() const;
  void set_b4(float value);

  private:
  float _internal_b4() const;
  void _internal_set_b4(float value);

  public:
  // float c1 = 9;
  void clear_c1() ;
  float c1() const;
  void set_c1(float value);

  private:
  float _internal_c1() const;
  void _internal_set_c1(float value);

  public:
  // float c2 = 10;
  void clear_c2() ;
  float c2() const;
  void set_c2(float value);

  private:
  float _internal_c2() const;
  void _internal_set_c2(float value);

  public:
  // float c3 = 11;
  void clear_c3() ;
  float c3() const;
  void set_c3(float value);

  private:
  float _internal_c3() const;
  void _internal_set_c3(float value);

  public:
  // float c4 = 12;
  void clear_c4() ;
  float c4() const;
  void set_c4(float value);

  private:
  float _internal_c4() const;
  void _internal_set_c4(float value);

  public:
  // float d1 = 13;
  void clear_d1() ;
  float d1() const;
  void set_d1(float value);

  private:
  float _internal_d1() const;
  void _internal_set_d1(float value);

  public:
  // float d2 = 14;
  void clear_d2() ;
  float d2() const;
  void set_d2(float value);

  private:
  float _internal_d2() const;
  void _internal_set_d2(float value);

  public:
  // float d3 = 15;
  void clear_d3() ;
  float d3() const;
  void set_d3(float value);

  private:
  float _internal_d3() const;
  void _internal_set_d3(float value);

  public:
  // float d4 = 16;
  void clear_d4() ;
  float d4() const;
  void set_d4(float value);

  private:
  float _internal_d4() const;
  void _internal_set_d4(float value);

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiMatrix4x4)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 16, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float a1_;
    float a2_;
    float a3_;
    float a4_;
    float b1_;
    float b2_;
    float b3_;
    float b4_;
    float c1_;
    float c2_;
    float c3_;
    float c4_;
    float d1_;
    float d2_;
    float d3_;
    float d4_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fcommon_2eproto;
};// -------------------------------------------------------------------

class AiQuaternion final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiQuaternion) */ {
 public:
  inline AiQuaternion() : AiQuaternion(nullptr) {}
  ~AiQuaternion() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiQuaternion(::google::protobuf::internal::ConstantInitialized);

  AiQuaternion(const AiQuaternion& from);
  AiQuaternion(AiQuaternion&& from) noexcept
    : AiQuaternion() {
    *this = ::std::move(from);
  }

  inline AiQuaternion& operator=(const AiQuaternion& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiQuaternion& operator=(AiQuaternion&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiQuaternion& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiQuaternion* internal_default_instance() {
    return reinterpret_cast<const AiQuaternion*>(
               &_AiQuaternion_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(AiQuaternion& a, AiQuaternion& b) {
    a.Swap(&b);
  }
  inline void Swap(AiQuaternion* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiQuaternion* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiQuaternion* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiQuaternion>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiQuaternion& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiQuaternion& from) {
    AiQuaternion::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiQuaternion* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiQuaternion";
  }
  protected:
  explicit AiQuaternion(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kWFieldNumber = 1,
    kXFieldNumber = 2,
    kYFieldNumber = 3,
    kZFieldNumber = 4,
  };
  // double W = 1;
  void clear_w() ;
  double w() const;
  void set_w(double value);

  private:
  double _internal_w() const;
  void _internal_set_w(double value);

  public:
  // double X = 2;
  void clear_x() ;
  double x() const;
  void set_x(double value);

  private:
  double _internal_x() const;
  void _internal_set_x(double value);

  public:
  // double Y = 3;
  void clear_y() ;
  double y() const;
  void set_y(double value);

  private:
  double _internal_y() const;
  void _internal_set_y(double value);

  public:
  // double Z = 4;
  void clear_z() ;
  double z() const;
  void set_z(double value);

  private:
  double _internal_z() const;
  void _internal_set_z(double value);

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiQuaternion)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4, 0, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    double w_;
    double x_;
    double y_;
    double z_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fcommon_2eproto;
};// -------------------------------------------------------------------

class AiAABB final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:pb_msg.AiAABB) */ {
 public:
  inline AiAABB() : AiAABB(nullptr) {}
  ~AiAABB() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AiAABB(::google::protobuf::internal::ConstantInitialized);

  AiAABB(const AiAABB& from);
  AiAABB(AiAABB&& from) noexcept
    : AiAABB() {
    *this = ::std::move(from);
  }

  inline AiAABB& operator=(const AiAABB& from) {
    CopyFrom(from);
    return *this;
  }
  inline AiAABB& operator=(AiAABB&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AiAABB& default_instance() {
    return *internal_default_instance();
  }
  static inline const AiAABB* internal_default_instance() {
    return reinterpret_cast<const AiAABB*>(
               &_AiAABB_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AiAABB& a, AiAABB& b) {
    a.Swap(&b);
  }
  inline void Swap(AiAABB* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AiAABB* other) {
    if (other == this) return;
    ABSL_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AiAABB* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AiAABB>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AiAABB& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AiAABB& from) {
    AiAABB::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AiAABB* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "pb_msg.AiAABB";
  }
  protected:
  explicit AiAABB(::google::protobuf::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMinFieldNumber = 1,
    kMaxFieldNumber = 2,
  };
  // .pb_msg.AiVector3D Min = 1;
  bool has_min() const;
  void clear_min() ;
  const ::pb_msg::AiVector3D& min() const;
  PROTOBUF_NODISCARD ::pb_msg::AiVector3D* release_min();
  ::pb_msg::AiVector3D* mutable_min();
  void set_allocated_min(::pb_msg::AiVector3D* value);
  void unsafe_arena_set_allocated_min(::pb_msg::AiVector3D* value);
  ::pb_msg::AiVector3D* unsafe_arena_release_min();

  private:
  const ::pb_msg::AiVector3D& _internal_min() const;
  ::pb_msg::AiVector3D* _internal_mutable_min();

  public:
  // .pb_msg.AiVector3D Max = 2;
  bool has_max() const;
  void clear_max() ;
  const ::pb_msg::AiVector3D& max() const;
  PROTOBUF_NODISCARD ::pb_msg::AiVector3D* release_max();
  ::pb_msg::AiVector3D* mutable_max();
  void set_allocated_max(::pb_msg::AiVector3D* value);
  void unsafe_arena_set_allocated_max(::pb_msg::AiVector3D* value);
  ::pb_msg::AiVector3D* unsafe_arena_release_max();

  private:
  const ::pb_msg::AiVector3D& _internal_max() const;
  ::pb_msg::AiVector3D* _internal_mutable_max();

  public:
  // @@protoc_insertion_point(class_scope:pb_msg.AiAABB)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2, 2, 0, 2> _table_;
  template <typename T> friend class ::google::protobuf::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::pb_msg::AiVector3D* min_;
    ::pb_msg::AiVector3D* max_;
    PROTOBUF_TSAN_DECLARE_MEMBER;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_common_2fpb_5fmsg_2fcommon_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AiVector2D

// float X = 1;
inline void AiVector2D::clear_x() {
  _impl_.x_ = 0;
}
inline float AiVector2D::x() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiVector2D.X)
  return _internal_x();
}
inline void AiVector2D::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiVector2D.X)
}
inline float AiVector2D::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void AiVector2D::_internal_set_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// float Y = 2;
inline void AiVector2D::clear_y() {
  _impl_.y_ = 0;
}
inline float AiVector2D::y() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiVector2D.Y)
  return _internal_y();
}
inline void AiVector2D::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiVector2D.Y)
}
inline float AiVector2D::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void AiVector2D::_internal_set_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// -------------------------------------------------------------------

// AiVector3D

// float X = 1;
inline void AiVector3D::clear_x() {
  _impl_.x_ = 0;
}
inline float AiVector3D::x() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiVector3D.X)
  return _internal_x();
}
inline void AiVector3D::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiVector3D.X)
}
inline float AiVector3D::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void AiVector3D::_internal_set_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// float Y = 2;
inline void AiVector3D::clear_y() {
  _impl_.y_ = 0;
}
inline float AiVector3D::y() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiVector3D.Y)
  return _internal_y();
}
inline void AiVector3D::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiVector3D.Y)
}
inline float AiVector3D::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void AiVector3D::_internal_set_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// float Z = 3;
inline void AiVector3D::clear_z() {
  _impl_.z_ = 0;
}
inline float AiVector3D::z() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiVector3D.Z)
  return _internal_z();
}
inline void AiVector3D::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiVector3D.Z)
}
inline float AiVector3D::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void AiVector3D::_internal_set_z(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// AiVector4D

// float X = 1;
inline void AiVector4D::clear_x() {
  _impl_.x_ = 0;
}
inline float AiVector4D::x() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiVector4D.X)
  return _internal_x();
}
inline void AiVector4D::set_x(float value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiVector4D.X)
}
inline float AiVector4D::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void AiVector4D::_internal_set_x(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// float Y = 2;
inline void AiVector4D::clear_y() {
  _impl_.y_ = 0;
}
inline float AiVector4D::y() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiVector4D.Y)
  return _internal_y();
}
inline void AiVector4D::set_y(float value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiVector4D.Y)
}
inline float AiVector4D::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void AiVector4D::_internal_set_y(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// float Z = 3;
inline void AiVector4D::clear_z() {
  _impl_.z_ = 0;
}
inline float AiVector4D::z() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiVector4D.Z)
  return _internal_z();
}
inline void AiVector4D::set_z(float value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiVector4D.Z)
}
inline float AiVector4D::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void AiVector4D::_internal_set_z(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.z_ = value;
}

// float W = 4;
inline void AiVector4D::clear_w() {
  _impl_.w_ = 0;
}
inline float AiVector4D::w() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiVector4D.W)
  return _internal_w();
}
inline void AiVector4D::set_w(float value) {
  _internal_set_w(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiVector4D.W)
}
inline float AiVector4D::_internal_w() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.w_;
}
inline void AiVector4D::_internal_set_w(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.w_ = value;
}

// -------------------------------------------------------------------

// AiColor3D

// float R = 1;
inline void AiColor3D::clear_r() {
  _impl_.r_ = 0;
}
inline float AiColor3D::r() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiColor3D.R)
  return _internal_r();
}
inline void AiColor3D::set_r(float value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiColor3D.R)
}
inline float AiColor3D::_internal_r() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.r_;
}
inline void AiColor3D::_internal_set_r(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.r_ = value;
}

// float G = 2;
inline void AiColor3D::clear_g() {
  _impl_.g_ = 0;
}
inline float AiColor3D::g() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiColor3D.G)
  return _internal_g();
}
inline void AiColor3D::set_g(float value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiColor3D.G)
}
inline float AiColor3D::_internal_g() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.g_;
}
inline void AiColor3D::_internal_set_g(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.g_ = value;
}

// float B = 3;
inline void AiColor3D::clear_b() {
  _impl_.b_ = 0;
}
inline float AiColor3D::b() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiColor3D.B)
  return _internal_b();
}
inline void AiColor3D::set_b(float value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiColor3D.B)
}
inline float AiColor3D::_internal_b() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.b_;
}
inline void AiColor3D::_internal_set_b(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.b_ = value;
}

// -------------------------------------------------------------------

// AiColor4D

// float R = 1;
inline void AiColor4D::clear_r() {
  _impl_.r_ = 0;
}
inline float AiColor4D::r() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiColor4D.R)
  return _internal_r();
}
inline void AiColor4D::set_r(float value) {
  _internal_set_r(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiColor4D.R)
}
inline float AiColor4D::_internal_r() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.r_;
}
inline void AiColor4D::_internal_set_r(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.r_ = value;
}

// float G = 2;
inline void AiColor4D::clear_g() {
  _impl_.g_ = 0;
}
inline float AiColor4D::g() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiColor4D.G)
  return _internal_g();
}
inline void AiColor4D::set_g(float value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiColor4D.G)
}
inline float AiColor4D::_internal_g() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.g_;
}
inline void AiColor4D::_internal_set_g(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.g_ = value;
}

// float B = 3;
inline void AiColor4D::clear_b() {
  _impl_.b_ = 0;
}
inline float AiColor4D::b() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiColor4D.B)
  return _internal_b();
}
inline void AiColor4D::set_b(float value) {
  _internal_set_b(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiColor4D.B)
}
inline float AiColor4D::_internal_b() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.b_;
}
inline void AiColor4D::_internal_set_b(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.b_ = value;
}

// float A = 4;
inline void AiColor4D::clear_a() {
  _impl_.a_ = 0;
}
inline float AiColor4D::a() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiColor4D.A)
  return _internal_a();
}
inline void AiColor4D::set_a(float value) {
  _internal_set_a(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiColor4D.A)
}
inline float AiColor4D::_internal_a() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.a_;
}
inline void AiColor4D::_internal_set_a(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.a_ = value;
}

// -------------------------------------------------------------------

// AiMatrix4x4

// float A1 = 1;
inline void AiMatrix4x4::clear_a1() {
  _impl_.a1_ = 0;
}
inline float AiMatrix4x4::a1() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.A1)
  return _internal_a1();
}
inline void AiMatrix4x4::set_a1(float value) {
  _internal_set_a1(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.A1)
}
inline float AiMatrix4x4::_internal_a1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.a1_;
}
inline void AiMatrix4x4::_internal_set_a1(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.a1_ = value;
}

// float a2 = 2;
inline void AiMatrix4x4::clear_a2() {
  _impl_.a2_ = 0;
}
inline float AiMatrix4x4::a2() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.a2)
  return _internal_a2();
}
inline void AiMatrix4x4::set_a2(float value) {
  _internal_set_a2(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.a2)
}
inline float AiMatrix4x4::_internal_a2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.a2_;
}
inline void AiMatrix4x4::_internal_set_a2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.a2_ = value;
}

// float a3 = 3;
inline void AiMatrix4x4::clear_a3() {
  _impl_.a3_ = 0;
}
inline float AiMatrix4x4::a3() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.a3)
  return _internal_a3();
}
inline void AiMatrix4x4::set_a3(float value) {
  _internal_set_a3(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.a3)
}
inline float AiMatrix4x4::_internal_a3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.a3_;
}
inline void AiMatrix4x4::_internal_set_a3(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.a3_ = value;
}

// float a4 = 4;
inline void AiMatrix4x4::clear_a4() {
  _impl_.a4_ = 0;
}
inline float AiMatrix4x4::a4() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.a4)
  return _internal_a4();
}
inline void AiMatrix4x4::set_a4(float value) {
  _internal_set_a4(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.a4)
}
inline float AiMatrix4x4::_internal_a4() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.a4_;
}
inline void AiMatrix4x4::_internal_set_a4(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.a4_ = value;
}

// float b1 = 5;
inline void AiMatrix4x4::clear_b1() {
  _impl_.b1_ = 0;
}
inline float AiMatrix4x4::b1() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.b1)
  return _internal_b1();
}
inline void AiMatrix4x4::set_b1(float value) {
  _internal_set_b1(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.b1)
}
inline float AiMatrix4x4::_internal_b1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.b1_;
}
inline void AiMatrix4x4::_internal_set_b1(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.b1_ = value;
}

// float b2 = 6;
inline void AiMatrix4x4::clear_b2() {
  _impl_.b2_ = 0;
}
inline float AiMatrix4x4::b2() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.b2)
  return _internal_b2();
}
inline void AiMatrix4x4::set_b2(float value) {
  _internal_set_b2(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.b2)
}
inline float AiMatrix4x4::_internal_b2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.b2_;
}
inline void AiMatrix4x4::_internal_set_b2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.b2_ = value;
}

// float b3 = 7;
inline void AiMatrix4x4::clear_b3() {
  _impl_.b3_ = 0;
}
inline float AiMatrix4x4::b3() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.b3)
  return _internal_b3();
}
inline void AiMatrix4x4::set_b3(float value) {
  _internal_set_b3(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.b3)
}
inline float AiMatrix4x4::_internal_b3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.b3_;
}
inline void AiMatrix4x4::_internal_set_b3(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.b3_ = value;
}

// float b4 = 8;
inline void AiMatrix4x4::clear_b4() {
  _impl_.b4_ = 0;
}
inline float AiMatrix4x4::b4() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.b4)
  return _internal_b4();
}
inline void AiMatrix4x4::set_b4(float value) {
  _internal_set_b4(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.b4)
}
inline float AiMatrix4x4::_internal_b4() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.b4_;
}
inline void AiMatrix4x4::_internal_set_b4(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.b4_ = value;
}

// float c1 = 9;
inline void AiMatrix4x4::clear_c1() {
  _impl_.c1_ = 0;
}
inline float AiMatrix4x4::c1() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.c1)
  return _internal_c1();
}
inline void AiMatrix4x4::set_c1(float value) {
  _internal_set_c1(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.c1)
}
inline float AiMatrix4x4::_internal_c1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.c1_;
}
inline void AiMatrix4x4::_internal_set_c1(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.c1_ = value;
}

// float c2 = 10;
inline void AiMatrix4x4::clear_c2() {
  _impl_.c2_ = 0;
}
inline float AiMatrix4x4::c2() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.c2)
  return _internal_c2();
}
inline void AiMatrix4x4::set_c2(float value) {
  _internal_set_c2(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.c2)
}
inline float AiMatrix4x4::_internal_c2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.c2_;
}
inline void AiMatrix4x4::_internal_set_c2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.c2_ = value;
}

// float c3 = 11;
inline void AiMatrix4x4::clear_c3() {
  _impl_.c3_ = 0;
}
inline float AiMatrix4x4::c3() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.c3)
  return _internal_c3();
}
inline void AiMatrix4x4::set_c3(float value) {
  _internal_set_c3(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.c3)
}
inline float AiMatrix4x4::_internal_c3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.c3_;
}
inline void AiMatrix4x4::_internal_set_c3(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.c3_ = value;
}

// float c4 = 12;
inline void AiMatrix4x4::clear_c4() {
  _impl_.c4_ = 0;
}
inline float AiMatrix4x4::c4() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.c4)
  return _internal_c4();
}
inline void AiMatrix4x4::set_c4(float value) {
  _internal_set_c4(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.c4)
}
inline float AiMatrix4x4::_internal_c4() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.c4_;
}
inline void AiMatrix4x4::_internal_set_c4(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.c4_ = value;
}

// float d1 = 13;
inline void AiMatrix4x4::clear_d1() {
  _impl_.d1_ = 0;
}
inline float AiMatrix4x4::d1() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.d1)
  return _internal_d1();
}
inline void AiMatrix4x4::set_d1(float value) {
  _internal_set_d1(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.d1)
}
inline float AiMatrix4x4::_internal_d1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.d1_;
}
inline void AiMatrix4x4::_internal_set_d1(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.d1_ = value;
}

// float d2 = 14;
inline void AiMatrix4x4::clear_d2() {
  _impl_.d2_ = 0;
}
inline float AiMatrix4x4::d2() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.d2)
  return _internal_d2();
}
inline void AiMatrix4x4::set_d2(float value) {
  _internal_set_d2(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.d2)
}
inline float AiMatrix4x4::_internal_d2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.d2_;
}
inline void AiMatrix4x4::_internal_set_d2(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.d2_ = value;
}

// float d3 = 15;
inline void AiMatrix4x4::clear_d3() {
  _impl_.d3_ = 0;
}
inline float AiMatrix4x4::d3() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.d3)
  return _internal_d3();
}
inline void AiMatrix4x4::set_d3(float value) {
  _internal_set_d3(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.d3)
}
inline float AiMatrix4x4::_internal_d3() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.d3_;
}
inline void AiMatrix4x4::_internal_set_d3(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.d3_ = value;
}

// float d4 = 16;
inline void AiMatrix4x4::clear_d4() {
  _impl_.d4_ = 0;
}
inline float AiMatrix4x4::d4() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiMatrix4x4.d4)
  return _internal_d4();
}
inline void AiMatrix4x4::set_d4(float value) {
  _internal_set_d4(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiMatrix4x4.d4)
}
inline float AiMatrix4x4::_internal_d4() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.d4_;
}
inline void AiMatrix4x4::_internal_set_d4(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.d4_ = value;
}

// -------------------------------------------------------------------

// AiQuaternion

// double W = 1;
inline void AiQuaternion::clear_w() {
  _impl_.w_ = 0;
}
inline double AiQuaternion::w() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiQuaternion.W)
  return _internal_w();
}
inline void AiQuaternion::set_w(double value) {
  _internal_set_w(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiQuaternion.W)
}
inline double AiQuaternion::_internal_w() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.w_;
}
inline void AiQuaternion::_internal_set_w(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.w_ = value;
}

// double X = 2;
inline void AiQuaternion::clear_x() {
  _impl_.x_ = 0;
}
inline double AiQuaternion::x() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiQuaternion.X)
  return _internal_x();
}
inline void AiQuaternion::set_x(double value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiQuaternion.X)
}
inline double AiQuaternion::_internal_x() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.x_;
}
inline void AiQuaternion::_internal_set_x(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.x_ = value;
}

// double Y = 3;
inline void AiQuaternion::clear_y() {
  _impl_.y_ = 0;
}
inline double AiQuaternion::y() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiQuaternion.Y)
  return _internal_y();
}
inline void AiQuaternion::set_y(double value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiQuaternion.Y)
}
inline double AiQuaternion::_internal_y() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.y_;
}
inline void AiQuaternion::_internal_set_y(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.y_ = value;
}

// double Z = 4;
inline void AiQuaternion::clear_z() {
  _impl_.z_ = 0;
}
inline double AiQuaternion::z() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiQuaternion.Z)
  return _internal_z();
}
inline void AiQuaternion::set_z(double value) {
  _internal_set_z(value);
  // @@protoc_insertion_point(field_set:pb_msg.AiQuaternion.Z)
}
inline double AiQuaternion::_internal_z() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.z_;
}
inline void AiQuaternion::_internal_set_z(double value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.z_ = value;
}

// -------------------------------------------------------------------

// AiAABB

// .pb_msg.AiVector3D Min = 1;
inline bool AiAABB::has_min() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.min_ != nullptr);
  return value;
}
inline void AiAABB::clear_min() {
  if (_impl_.min_ != nullptr) _impl_.min_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::pb_msg::AiVector3D& AiAABB::_internal_min() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::pb_msg::AiVector3D* p = _impl_.min_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb_msg::AiVector3D&>(::pb_msg::_AiVector3D_default_instance_);
}
inline const ::pb_msg::AiVector3D& AiAABB::min() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiAABB.Min)
  return _internal_min();
}
inline void AiAABB::unsafe_arena_set_allocated_min(::pb_msg::AiVector3D* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.min_);
  }
  _impl_.min_ = reinterpret_cast<::pb_msg::AiVector3D*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb_msg.AiAABB.Min)
}
inline ::pb_msg::AiVector3D* AiAABB::release_min() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::pb_msg::AiVector3D* released = _impl_.min_;
  _impl_.min_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::pb_msg::AiVector3D* AiAABB::unsafe_arena_release_min() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_msg.AiAABB.Min)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::pb_msg::AiVector3D* temp = _impl_.min_;
  _impl_.min_ = nullptr;
  return temp;
}
inline ::pb_msg::AiVector3D* AiAABB::_internal_mutable_min() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.min_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb_msg::AiVector3D>(GetArenaForAllocation());
    _impl_.min_ = reinterpret_cast<::pb_msg::AiVector3D*>(p);
  }
  return _impl_.min_;
}
inline ::pb_msg::AiVector3D* AiAABB::mutable_min() {
  ::pb_msg::AiVector3D* _msg = _internal_mutable_min();
  // @@protoc_insertion_point(field_mutable:pb_msg.AiAABB.Min)
  return _msg;
}
inline void AiAABB::set_allocated_min(::pb_msg::AiVector3D* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::pb_msg::AiVector3D*>(_impl_.min_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::pb_msg::AiVector3D*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.min_ = reinterpret_cast<::pb_msg::AiVector3D*>(value);
  // @@protoc_insertion_point(field_set_allocated:pb_msg.AiAABB.Min)
}

// .pb_msg.AiVector3D Max = 2;
inline bool AiAABB::has_max() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.max_ != nullptr);
  return value;
}
inline void AiAABB::clear_max() {
  if (_impl_.max_ != nullptr) _impl_.max_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::pb_msg::AiVector3D& AiAABB::_internal_max() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::pb_msg::AiVector3D* p = _impl_.max_;
  return p != nullptr ? *p : reinterpret_cast<const ::pb_msg::AiVector3D&>(::pb_msg::_AiVector3D_default_instance_);
}
inline const ::pb_msg::AiVector3D& AiAABB::max() const {
  // @@protoc_insertion_point(field_get:pb_msg.AiAABB.Max)
  return _internal_max();
}
inline void AiAABB::unsafe_arena_set_allocated_max(::pb_msg::AiVector3D* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArenaForAllocation() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.max_);
  }
  _impl_.max_ = reinterpret_cast<::pb_msg::AiVector3D*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:pb_msg.AiAABB.Max)
}
inline ::pb_msg::AiVector3D* AiAABB::release_max() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::pb_msg::AiVector3D* released = _impl_.max_;
  _impl_.max_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArenaForAllocation() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArenaForAllocation() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::pb_msg::AiVector3D* AiAABB::unsafe_arena_release_max() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:pb_msg.AiAABB.Max)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::pb_msg::AiVector3D* temp = _impl_.max_;
  _impl_.max_ = nullptr;
  return temp;
}
inline ::pb_msg::AiVector3D* AiAABB::_internal_mutable_max() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.max_ == nullptr) {
    auto* p = CreateMaybeMessage<::pb_msg::AiVector3D>(GetArenaForAllocation());
    _impl_.max_ = reinterpret_cast<::pb_msg::AiVector3D*>(p);
  }
  return _impl_.max_;
}
inline ::pb_msg::AiVector3D* AiAABB::mutable_max() {
  ::pb_msg::AiVector3D* _msg = _internal_mutable_max();
  // @@protoc_insertion_point(field_mutable:pb_msg.AiAABB.Max)
  return _msg;
}
inline void AiAABB::set_allocated_max(::pb_msg::AiVector3D* value) {
  ::google::protobuf::Arena* message_arena = GetArenaForAllocation();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::pb_msg::AiVector3D*>(_impl_.max_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena =
        ::google::protobuf::Arena::InternalGetOwningArena(reinterpret_cast<::pb_msg::AiVector3D*>(value));
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.max_ = reinterpret_cast<::pb_msg::AiVector3D*>(value);
  // @@protoc_insertion_point(field_set_allocated:pb_msg.AiAABB.Max)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace pb_msg


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_common_2fpb_5fmsg_2fcommon_2eproto_2epb_2eh
